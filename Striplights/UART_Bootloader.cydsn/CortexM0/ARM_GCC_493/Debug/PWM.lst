ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Init, %function
  23              	PWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 3


  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 8422     		mov	r2, #132
  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  30              		.loc 1 95 0
  31 0002 8021     		mov	r1, #128
  89:.\Generated_Source\PSoC4/PWM.c **** 
  32              		.loc 1 89 0
  33 0004 0D4B     		ldr	r3, .L2
  34 0006 D204     		lsl	r2, r2, #19
  35 0008 1A60     		str	r2, [r3]
  36              		.loc 1 95 0
  37 000a 1A68     		ldr	r2, [r3]
  38 000c 4902     		lsl	r1, r1, #9
  39 000e 0A43     		orr	r2, r1
  40 0010 1A60     		str	r2, [r3]
  41              	.LVL0:
  42              	.LBB10:
  43              	.LBB11:
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 4


 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 5


 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c **** }
 198:.\Generated_Source\PSoC4/PWM.c **** 
 199:.\Generated_Source\PSoC4/PWM.c **** 
 200:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 202:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM.c **** *
 204:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 206:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 207:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM.c **** *  None
 212:.\Generated_Source\PSoC4/PWM.c **** *
 213:.\Generated_Source\PSoC4/PWM.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM.c **** *  None
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 222:.\Generated_Source\PSoC4/PWM.c **** *
 223:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 225:.\Generated_Source\PSoC4/PWM.c **** {
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 227:.\Generated_Source\PSoC4/PWM.c ****     {
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM.c ****     }
 231:.\Generated_Source\PSoC4/PWM.c **** 
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 233:.\Generated_Source\PSoC4/PWM.c **** }
 234:.\Generated_Source\PSoC4/PWM.c **** 
 235:.\Generated_Source\PSoC4/PWM.c **** 
 236:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 238:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 6


 242:.\Generated_Source\PSoC4/PWM.c **** *
 243:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM.c **** *  None
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM.c **** *  None
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 251:.\Generated_Source\PSoC4/PWM.c **** {
 252:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM.c **** 
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/PWM.c **** 
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/PWM.c **** }
 260:.\Generated_Source\PSoC4/PWM.c **** 
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 264:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 268:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM.c **** *
 271:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM.c **** *  None
 285:.\Generated_Source\PSoC4/PWM.c **** *
 286:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM.c **** {
 289:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM.c **** 
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/PWM.c **** 
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/PWM.c **** 
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/PWM.c **** }
 298:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 7


 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 302:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM.c **** *
 304:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM.c **** *
 308:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM.c **** *
 316:.\Generated_Source\PSoC4/PWM.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM.c **** *  None
 318:.\Generated_Source\PSoC4/PWM.c **** *
 319:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM.c **** {
 322:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM.c **** 
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/PWM.c **** 
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/PWM.c **** 
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/PWM.c **** }
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c **** 
 333:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM.c **** *
 337:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM.c **** *
 341:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM.c **** *
 353:.\Generated_Source\PSoC4/PWM.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM.c **** *  None
 355:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 8


 356:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM.c **** {
 359:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM.c **** 
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/PWM.c **** 
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/PWM.c **** }
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 372:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM.c **** *
 374:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 376:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM.c **** *  None
 387:.\Generated_Source\PSoC4/PWM.c **** *
 388:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM.c **** {
 391:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/PWM.c **** 
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/PWM.c **** }
 401:.\Generated_Source\PSoC4/PWM.c **** 
 402:.\Generated_Source\PSoC4/PWM.c **** 
 403:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM.c **** *
 407:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 9


 413:.\Generated_Source\PSoC4/PWM.c **** *
 414:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM.c **** *
 439:.\Generated_Source\PSoC4/PWM.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM.c **** *  None
 441:.\Generated_Source\PSoC4/PWM.c **** *
 442:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM.c **** {
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 446:.\Generated_Source\PSoC4/PWM.c **** }
 447:.\Generated_Source\PSoC4/PWM.c **** 
 448:.\Generated_Source\PSoC4/PWM.c **** 
 449:.\Generated_Source\PSoC4/PWM.c **** 
 450:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM.c **** *
 454:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM.c **** *
 463:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM.c **** 
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 10


 470:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM.c **** *
 475:.\Generated_Source\PSoC4/PWM.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM.c **** *  None
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM.c **** {
 481:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM.c **** 
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/PWM.c **** }
 491:.\Generated_Source\PSoC4/PWM.c **** 
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM.c **** *
 497:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM.c **** *
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM.c **** *  None
 511:.\Generated_Source\PSoC4/PWM.c **** *
 512:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM.c **** {
 515:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM.c **** 
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/PWM.c **** 
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/PWM.c **** }
 525:.\Generated_Source\PSoC4/PWM.c **** 
 526:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 11


 527:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM.c **** *
 531:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** *
 538:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM.c **** *
 542:.\Generated_Source\PSoC4/PWM.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM.c **** *  None
 544:.\Generated_Source\PSoC4/PWM.c **** *
 545:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM.c **** {
 548:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/PWM.c **** 
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/PWM.c **** }
 558:.\Generated_Source\PSoC4/PWM.c **** 
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM.c **** *
 564:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM.c **** *
 569:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM.c **** *  None
 577:.\Generated_Source\PSoC4/PWM.c **** *
 578:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM.c **** {
 581:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 12


 584:.\Generated_Source\PSoC4/PWM.c **** 
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 587:.\Generated_Source\PSoC4/PWM.c **** 
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 589:.\Generated_Source\PSoC4/PWM.c **** }
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c **** 
 592:.\Generated_Source\PSoC4/PWM.c **** 
 593:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 595:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM.c **** *
 597:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM.c **** *
 602:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM.c **** *
 605:.\Generated_Source\PSoC4/PWM.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM.c **** *  None
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM.c **** {
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
  44              		.loc 1 611 0
  45 0012 0B49     		ldr	r1, .L2+4
  46 0014 0B4A     		ldr	r2, .L2+8
  47              	.LBE11:
  48              	.LBE10:
 160:.\Generated_Source\PSoC4/PWM.c **** 
  49              		.loc 1 160 0
  50              		@ sp needed
  51              	.LBB13:
  52              	.LBB12:
  53              		.loc 1 611 0
  54 0016 0A60     		str	r2, [r1]
  55              	.LBE12:
  56              	.LBE13:
 112:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  57              		.loc 1 112 0
  58 0018 1968     		ldr	r1, [r3]
  59 001a 1960     		str	r1, [r3]
 116:.\Generated_Source\PSoC4/PWM.c ****     
  60              		.loc 1 116 0
  61 001c C321     		mov	r1, #195
  62 001e 0A4B     		ldr	r3, .L2+12
  63 0020 8900     		lsl	r1, r1, #2
  64 0022 1960     		str	r1, [r3]
  65              	.LVL1:
  66              	.LBB14:
  67              	.LBB15:
 612:.\Generated_Source\PSoC4/PWM.c **** }
 613:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 13


 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 617:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM.c **** {
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 632:.\Generated_Source\PSoC4/PWM.c **** }
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c **** 
 635:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM.c **** *
 643:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM.c **** *
 654:.\Generated_Source\PSoC4/PWM.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM.c **** *  None
 656:.\Generated_Source\PSoC4/PWM.c **** *
 657:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM.c **** {
 660:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM.c **** 
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/PWM.c **** 
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/PWM.c **** 
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/PWM.c **** }
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 14


 671:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 673:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM.c **** *
 675:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM.c **** *
 683:.\Generated_Source\PSoC4/PWM.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM.c **** *  None
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM.c **** {
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 690:.\Generated_Source\PSoC4/PWM.c **** }
 691:.\Generated_Source\PSoC4/PWM.c **** 
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM.c **** {
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 710:.\Generated_Source\PSoC4/PWM.c **** }
 711:.\Generated_Source\PSoC4/PWM.c **** 
 712:.\Generated_Source\PSoC4/PWM.c **** 
 713:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 15


 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM.c **** *  None
 731:.\Generated_Source\PSoC4/PWM.c **** *
 732:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM.c **** {
 735:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM.c **** 
 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/PWM.c **** 
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 741:.\Generated_Source\PSoC4/PWM.c **** 
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/PWM.c **** }
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c **** *
 750:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM.c **** *
 753:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM.c **** *  None
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM.c **** {
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 763:.\Generated_Source\PSoC4/PWM.c **** }
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c **** 
 766:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM.c **** {
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 783:.\Generated_Source\PSoC4/PWM.c **** }
 784:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 16


 785:.\Generated_Source\PSoC4/PWM.c **** 
 786:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM.c **** *  None
 804:.\Generated_Source\PSoC4/PWM.c **** *
 805:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM.c **** {
 808:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM.c **** 
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/PWM.c **** 
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 817:.\Generated_Source\PSoC4/PWM.c **** }
 818:.\Generated_Source\PSoC4/PWM.c **** 
 819:.\Generated_Source\PSoC4/PWM.c **** 
 820:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 822:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM.c **** *
 824:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM.c **** *
 831:.\Generated_Source\PSoC4/PWM.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM.c **** *  None
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM.c **** {
 837:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM.c **** 
 841:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 17


 842:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM.c **** 
 844:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM.c ****         {
 846:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM.c ****         }
 848:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM.c ****         {
 850:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM.c ****         }
 852:.\Generated_Source\PSoC4/PWM.c ****         else
 853:.\Generated_Source\PSoC4/PWM.c ****         {
 854:.\Generated_Source\PSoC4/PWM.c ****         }
 855:.\Generated_Source\PSoC4/PWM.c ****         
 856:.\Generated_Source\PSoC4/PWM.c ****     
 857:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM.c ****     
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 860:.\Generated_Source\PSoC4/PWM.c **** }
 861:.\Generated_Source\PSoC4/PWM.c **** 
 862:.\Generated_Source\PSoC4/PWM.c **** 
 863:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 865:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM.c **** *
 867:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM.c **** *
 871:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM.c **** *  None
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM.c **** {
 880:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM.c ****         
 888:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM.c ****         
 890:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM.c ****         {
 892:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM.c ****         }
 894:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM.c ****         {
 896:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM.c ****         }
 898:.\Generated_Source\PSoC4/PWM.c ****         else
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 18


 899:.\Generated_Source\PSoC4/PWM.c ****         {
 900:.\Generated_Source\PSoC4/PWM.c ****         }
 901:.\Generated_Source\PSoC4/PWM.c **** 
 902:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM.c ****     #else
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** }
 907:.\Generated_Source\PSoC4/PWM.c **** 
 908:.\Generated_Source\PSoC4/PWM.c **** 
 909:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM.c **** *
 913:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM.c **** *
 917:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM.c **** *
 920:.\Generated_Source\PSoC4/PWM.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM.c **** *  None
 922:.\Generated_Source\PSoC4/PWM.c **** *
 923:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM.c **** {
 926:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM.c **** 
 933:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM.c ****         {
 935:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM.c ****         }
 937:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM.c ****         {
 939:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM.c ****         }
 941:.\Generated_Source\PSoC4/PWM.c ****         else
 942:.\Generated_Source\PSoC4/PWM.c ****         {
 943:.\Generated_Source\PSoC4/PWM.c ****         }
 944:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM.c ****     
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 947:.\Generated_Source\PSoC4/PWM.c **** }
 948:.\Generated_Source\PSoC4/PWM.c **** 
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM.c **** *
 954:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 19


 956:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM.c **** *
 958:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM.c **** *  None
 960:.\Generated_Source\PSoC4/PWM.c **** *
 961:.\Generated_Source\PSoC4/PWM.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM.c **** *
 964:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM.c **** {
 967:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM.c **** 
 972:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM.c **** 
 975:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM.c ****         
 977:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM.c ****         {
 979:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM.c ****         }
 981:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM.c ****         {
 983:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM.c ****         }
 985:.\Generated_Source\PSoC4/PWM.c ****         else
 986:.\Generated_Source\PSoC4/PWM.c ****         {
 987:.\Generated_Source\PSoC4/PWM.c ****         }
 988:.\Generated_Source\PSoC4/PWM.c **** 
 989:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM.c ****     #else
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 992:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM.c **** }
 994:.\Generated_Source\PSoC4/PWM.c **** 
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 998:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM.c **** *
1000:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM.c **** *
1004:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM.c **** *  None
1006:.\Generated_Source\PSoC4/PWM.c **** *
1007:.\Generated_Source\PSoC4/PWM.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM.c **** *
1010:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 20


1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
1014:.\Generated_Source\PSoC4/PWM.c **** }
1015:.\Generated_Source\PSoC4/PWM.c **** 
1016:.\Generated_Source\PSoC4/PWM.c **** 
1017:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM.c **** *
1021:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM.c **** *
1025:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM.c **** *  None
1027:.\Generated_Source\PSoC4/PWM.c **** *
1028:.\Generated_Source\PSoC4/PWM.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM.c **** *
1031:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM.c **** {
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1035:.\Generated_Source\PSoC4/PWM.c **** }
1036:.\Generated_Source\PSoC4/PWM.c **** 
1037:.\Generated_Source\PSoC4/PWM.c **** 
1038:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM.c **** *
1055:.\Generated_Source\PSoC4/PWM.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM.c **** *  None
1057:.\Generated_Source\PSoC4/PWM.c **** *
1058:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM.c **** {
1061:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/PWM.c **** 
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/PWM.c **** 
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 21


1070:.\Generated_Source\PSoC4/PWM.c **** 
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM.c **** *
1076:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM.c **** *
1080:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM.c **** *
1088:.\Generated_Source\PSoC4/PWM.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM.c **** *  None
1090:.\Generated_Source\PSoC4/PWM.c **** *
1091:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM.c **** {
1094:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM.c **** 
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/PWM.c **** 
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1102:.\Generated_Source\PSoC4/PWM.c **** }
1103:.\Generated_Source\PSoC4/PWM.c **** 
1104:.\Generated_Source\PSoC4/PWM.c **** 
1105:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1107:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** *
1109:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM.c **** *
1113:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM.c **** *
1121:.\Generated_Source\PSoC4/PWM.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM.c **** *  None
1123:.\Generated_Source\PSoC4/PWM.c **** *
1124:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 22


1127:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM.c **** 
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
1133:.\Generated_Source\PSoC4/PWM.c **** 
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/PWM.c **** }
1136:.\Generated_Source\PSoC4/PWM.c **** 
1137:.\Generated_Source\PSoC4/PWM.c **** 
1138:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1140:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** *
1142:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM.c **** *
1145:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM.c **** *
1153:.\Generated_Source\PSoC4/PWM.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM.c **** *  None
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM.c **** {
1159:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/PWM.c **** }
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c **** 
1170:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1172:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM.c **** *
1178:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 23


1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM.c **** *
1186:.\Generated_Source\PSoC4/PWM.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM.c **** *  None
1188:.\Generated_Source\PSoC4/PWM.c **** *
1189:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM.c **** {
1192:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM.c **** 
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/PWM.c **** 
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/PWM.c **** }
1201:.\Generated_Source\PSoC4/PWM.c **** 
1202:.\Generated_Source\PSoC4/PWM.c **** 
1203:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** *
1207:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM.c **** *
1212:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM.c **** *  None
1228:.\Generated_Source\PSoC4/PWM.c **** *
1229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM.c **** {
1232:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/PWM.c **** 
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/PWM.c **** }
1240:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 24


1241:.\Generated_Source\PSoC4/PWM.c **** 
1242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM.c **** *
1246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1248:.\Generated_Source\PSoC4/PWM.c **** *
1249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM.c **** *  None
1251:.\Generated_Source\PSoC4/PWM.c **** *
1252:.\Generated_Source\PSoC4/PWM.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM.c **** *
1258:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM.c **** {
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/PWM.c **** }
1264:.\Generated_Source\PSoC4/PWM.c **** 
1265:.\Generated_Source\PSoC4/PWM.c **** 
1266:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM.c **** *
1270:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM.c **** *
1280:.\Generated_Source\PSoC4/PWM.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM.c **** *  None
1282:.\Generated_Source\PSoC4/PWM.c **** *
1283:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM.c **** {
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
  68              		.loc 1 1286 0
  69 0024 0021     		mov	r1, #0
  70 0026 094B     		ldr	r3, .L2+16
  71 0028 1960     		str	r1, [r3]
  72              	.LBE15:
  73              	.LBE14:
 133:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
  74              		.loc 1 133 0
  75 002a 094B     		ldr	r3, .L2+20
  76 002c 1C31     		add	r1, r1, #28
  77 002e 1960     		str	r1, [r3]
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 25


  78              	.LVL2:
  79              	.LBB16:
  80              	.LBB17:
 689:.\Generated_Source\PSoC4/PWM.c **** }
  81              		.loc 1 689 0
  82 0030 084B     		ldr	r3, .L2+24
  83 0032 1A60     		str	r2, [r3]
  84              	.LVL3:
  85              	.LBE17:
  86              	.LBE16:
  87              	.LBB18:
  88              	.LBB19:
 859:.\Generated_Source\PSoC4/PWM.c **** }
  89              		.loc 1 859 0
  90 0034 084A     		ldr	r2, .L2+28
  91 0036 094B     		ldr	r3, .L2+32
  92 0038 1A60     		str	r2, [r3]
  93              	.LBE19:
  94              	.LBE18:
 160:.\Generated_Source\PSoC4/PWM.c **** 
  95              		.loc 1 160 0
  96 003a 7047     		bx	lr
  97              	.L3:
  98              		.align	2
  99              	.L2:
 100 003c 00010540 		.word	1074069760
 101 0040 08010540 		.word	1074069768
 102 0044 10270000 		.word	10000
 103 0048 24010540 		.word	1074069796
 104 004c 38010540 		.word	1074069816
 105 0050 28010540 		.word	1074069800
 106 0054 14010540 		.word	1074069780
 107 0058 88130000 		.word	5000
 108 005c 0C010540 		.word	1074069772
 109              		.cfi_endproc
 110              	.LFE0:
 111              		.size	PWM_Init, .-PWM_Init
 112              		.section	.text.PWM_Enable,"ax",%progbits
 113              		.align	1
 114              		.global	PWM_Enable
 115              		.code	16
 116              		.thumb_func
 117              		.type	PWM_Enable, %function
 118              	PWM_Enable:
 119              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 120              		.loc 1 178 0
 121              		.cfi_startproc
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 126              		.loc 1 181 0
 127 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 128              	.LVL4:
 182:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 26


 129              		.loc 1 182 0
 130 0006 0121     		mov	r1, #1
 131 0008 034A     		ldr	r2, .L5
 197:.\Generated_Source\PSoC4/PWM.c **** 
 132              		.loc 1 197 0
 133              		@ sp needed
 182:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 134              		.loc 1 182 0
 135 000a 1368     		ldr	r3, [r2]
 136 000c 0B43     		orr	r3, r1
 137 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM.c **** 
 138              		.loc 1 183 0
 139 0010 FFF7FEFF 		bl	CyExitCriticalSection
 140              	.LVL5:
 197:.\Generated_Source\PSoC4/PWM.c **** 
 141              		.loc 1 197 0
 142 0014 08BD     		pop	{r3, pc}
 143              	.L6:
 144 0016 C046     		.align	2
 145              	.L5:
 146 0018 00000540 		.word	1074069504
 147              		.cfi_endproc
 148              	.LFE1:
 149              		.size	PWM_Enable, .-PWM_Enable
 150              		.section	.text.PWM_Start,"ax",%progbits
 151              		.align	1
 152              		.global	PWM_Start
 153              		.code	16
 154              		.thumb_func
 155              		.type	PWM_Start, %function
 156              	PWM_Start:
 157              	.LFB2:
 225:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 158              		.loc 1 225 0
 159              		.cfi_startproc
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PWM.c ****     {
 164              		.loc 1 226 0
 165 0002 054C     		ldr	r4, .L10
 166 0004 2378     		ldrb	r3, [r4]
 167 0006 002B     		cmp	r3, #0
 168 0008 03D1     		bne	.L8
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 169              		.loc 1 228 0
 170 000a FFF7FEFF 		bl	PWM_Init
 171              	.LVL6:
 229:.\Generated_Source\PSoC4/PWM.c ****     }
 172              		.loc 1 229 0
 173 000e 0123     		mov	r3, #1
 174 0010 2370     		strb	r3, [r4]
 175              	.L8:
 232:.\Generated_Source\PSoC4/PWM.c **** }
 176              		.loc 1 232 0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 27


 177 0012 FFF7FEFF 		bl	PWM_Enable
 178              	.LVL7:
 233:.\Generated_Source\PSoC4/PWM.c **** 
 179              		.loc 1 233 0
 180              		@ sp needed
 181 0016 10BD     		pop	{r4, pc}
 182              	.L11:
 183              		.align	2
 184              	.L10:
 185 0018 00000000 		.word	.LANCHOR0
 186              		.cfi_endproc
 187              	.LFE2:
 188              		.size	PWM_Start, .-PWM_Start
 189              		.section	.text.PWM_Stop,"ax",%progbits
 190              		.align	1
 191              		.global	PWM_Stop
 192              		.code	16
 193              		.thumb_func
 194              		.type	PWM_Stop, %function
 195              	PWM_Stop:
 196              	.LFB3:
 251:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 197              		.loc 1 251 0
 198              		.cfi_startproc
 199 0000 08B5     		push	{r3, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/PWM.c **** 
 203              		.loc 1 254 0
 204 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 205              	.LVL8:
 256:.\Generated_Source\PSoC4/PWM.c **** 
 206              		.loc 1 256 0
 207 0006 0121     		mov	r1, #1
 208 0008 034A     		ldr	r2, .L13
 259:.\Generated_Source\PSoC4/PWM.c **** 
 209              		.loc 1 259 0
 210              		@ sp needed
 256:.\Generated_Source\PSoC4/PWM.c **** 
 211              		.loc 1 256 0
 212 000a 1368     		ldr	r3, [r2]
 213 000c 8B43     		bic	r3, r1
 214 000e 1360     		str	r3, [r2]
 258:.\Generated_Source\PSoC4/PWM.c **** }
 215              		.loc 1 258 0
 216 0010 FFF7FEFF 		bl	CyExitCriticalSection
 217              	.LVL9:
 259:.\Generated_Source\PSoC4/PWM.c **** 
 218              		.loc 1 259 0
 219 0014 08BD     		pop	{r3, pc}
 220              	.L14:
 221 0016 C046     		.align	2
 222              	.L13:
 223 0018 00000540 		.word	1074069504
 224              		.cfi_endproc
 225              	.LFE3:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 28


 226              		.size	PWM_Stop, .-PWM_Stop
 227              		.section	.text.PWM_SetMode,"ax",%progbits
 228              		.align	1
 229              		.global	PWM_SetMode
 230              		.code	16
 231              		.thumb_func
 232              		.type	PWM_SetMode, %function
 233              	PWM_SetMode:
 234              	.LFB4:
 288:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 235              		.loc 1 288 0
 236              		.cfi_startproc
 237              	.LVL10:
 238 0000 10B5     		push	{r4, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 242              		.loc 1 288 0
 243 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/PWM.c **** 
 244              		.loc 1 291 0
 245 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 246              	.LVL11:
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 247              		.loc 1 293 0
 248 0008 054B     		ldr	r3, .L16
 249 000a 064A     		ldr	r2, .L16+4
 250 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/PWM.c **** 
 251              		.loc 1 297 0
 252              		@ sp needed
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 253              		.loc 1 293 0
 254 000e 0A40     		and	r2, r1
 255 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM.c **** 
 256              		.loc 1 294 0
 257 0012 1A68     		ldr	r2, [r3]
 258 0014 2243     		orr	r2, r4
 259 0016 1A60     		str	r2, [r3]
 296:.\Generated_Source\PSoC4/PWM.c **** }
 260              		.loc 1 296 0
 261 0018 FFF7FEFF 		bl	CyExitCriticalSection
 262              	.LVL12:
 263              	.LVL13:
 297:.\Generated_Source\PSoC4/PWM.c **** 
 264              		.loc 1 297 0
 265 001c 10BD     		pop	{r4, pc}
 266              	.L17:
 267 001e C046     		.align	2
 268              	.L16:
 269 0020 00010540 		.word	1074069760
 270 0024 FFFFFFF8 		.word	-117440513
 271              		.cfi_endproc
 272              	.LFE4:
 273              		.size	PWM_SetMode, .-PWM_SetMode
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 29


 274              		.section	.text.PWM_SetQDMode,"ax",%progbits
 275              		.align	1
 276              		.global	PWM_SetQDMode
 277              		.code	16
 278              		.thumb_func
 279              		.type	PWM_SetQDMode, %function
 280              	PWM_SetQDMode:
 281              	.LFB5:
 321:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 282              		.loc 1 321 0
 283              		.cfi_startproc
 284              	.LVL14:
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 289              		.loc 1 321 0
 290 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/PWM.c **** 
 291              		.loc 1 324 0
 292 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 293              	.LVL15:
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 294              		.loc 1 326 0
 295 0008 054B     		ldr	r3, .L19
 296 000a 064A     		ldr	r2, .L19+4
 297 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/PWM.c **** 
 298              		.loc 1 330 0
 299              		@ sp needed
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 300              		.loc 1 326 0
 301 000e 0A40     		and	r2, r1
 302 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM.c **** 
 303              		.loc 1 327 0
 304 0012 1A68     		ldr	r2, [r3]
 305 0014 2243     		orr	r2, r4
 306 0016 1A60     		str	r2, [r3]
 329:.\Generated_Source\PSoC4/PWM.c **** }
 307              		.loc 1 329 0
 308 0018 FFF7FEFF 		bl	CyExitCriticalSection
 309              	.LVL16:
 310              	.LVL17:
 330:.\Generated_Source\PSoC4/PWM.c **** 
 311              		.loc 1 330 0
 312 001c 10BD     		pop	{r4, pc}
 313              	.L20:
 314 001e C046     		.align	2
 315              	.L19:
 316 0020 00010540 		.word	1074069760
 317 0024 FFFF8FFF 		.word	-7340033
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 321              		.section	.text.PWM_SetPrescaler,"ax",%progbits
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 30


 322              		.align	1
 323              		.global	PWM_SetPrescaler
 324              		.code	16
 325              		.thumb_func
 326              		.type	PWM_SetPrescaler, %function
 327              	PWM_SetPrescaler:
 328              	.LFB6:
 358:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329              		.loc 1 358 0
 330              		.cfi_startproc
 331              	.LVL18:
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 336              		.loc 1 358 0
 337 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/PWM.c **** 
 338              		.loc 1 361 0
 339 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 340              	.LVL19:
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 341              		.loc 1 363 0
 342 0008 054B     		ldr	r3, .L22
 343 000a 064A     		ldr	r2, .L22+4
 344 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/PWM.c **** 
 345              		.loc 1 367 0
 346              		@ sp needed
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 347              		.loc 1 363 0
 348 000e 0A40     		and	r2, r1
 349 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM.c **** 
 350              		.loc 1 364 0
 351 0012 1A68     		ldr	r2, [r3]
 352 0014 2243     		orr	r2, r4
 353 0016 1A60     		str	r2, [r3]
 366:.\Generated_Source\PSoC4/PWM.c **** }
 354              		.loc 1 366 0
 355 0018 FFF7FEFF 		bl	CyExitCriticalSection
 356              	.LVL20:
 357              	.LVL21:
 367:.\Generated_Source\PSoC4/PWM.c **** 
 358              		.loc 1 367 0
 359 001c 10BD     		pop	{r4, pc}
 360              	.L23:
 361 001e C046     		.align	2
 362              	.L22:
 363 0020 00010540 		.word	1074069760
 364 0024 FF00FFFF 		.word	-65281
 365              		.cfi_endproc
 366              	.LFE6:
 367              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 368              		.section	.text.PWM_SetOneShot,"ax",%progbits
 369              		.align	1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 31


 370              		.global	PWM_SetOneShot
 371              		.code	16
 372              		.thumb_func
 373              		.type	PWM_SetOneShot, %function
 374              	PWM_SetOneShot:
 375              	.LFB7:
 390:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 376              		.loc 1 390 0
 377              		.cfi_startproc
 378              	.LVL22:
 379 0000 10B5     		push	{r4, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 390:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 383              		.loc 1 390 0
 384 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/PWM.c **** 
 385              		.loc 1 393 0
 386 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 387              	.LVL23:
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 388              		.loc 1 395 0
 389 0008 064A     		ldr	r2, .L25
 390 000a 074B     		ldr	r3, .L25+4
 391 000c 1168     		ldr	r1, [r2]
 400:.\Generated_Source\PSoC4/PWM.c **** 
 392              		.loc 1 400 0
 393              		@ sp needed
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 394              		.loc 1 395 0
 395 000e 0B40     		and	r3, r1
 396 0010 1360     		str	r3, [r2]
 396:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 397              		.loc 1 396 0
 398 0012 0123     		mov	r3, #1
 399 0014 1168     		ldr	r1, [r2]
 400 0016 2340     		and	r3, r4
 401 0018 9B04     		lsl	r3, r3, #18
 402 001a 0B43     		orr	r3, r1
 403 001c 1360     		str	r3, [r2]
 399:.\Generated_Source\PSoC4/PWM.c **** }
 404              		.loc 1 399 0
 405 001e FFF7FEFF 		bl	CyExitCriticalSection
 406              	.LVL24:
 407              	.LVL25:
 400:.\Generated_Source\PSoC4/PWM.c **** 
 408              		.loc 1 400 0
 409 0022 10BD     		pop	{r4, pc}
 410              	.L26:
 411              		.align	2
 412              	.L25:
 413 0024 00010540 		.word	1074069760
 414 0028 FFFFFBFF 		.word	-262145
 415              		.cfi_endproc
 416              	.LFE7:
 417              		.size	PWM_SetOneShot, .-PWM_SetOneShot
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 32


 418              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 419              		.align	1
 420              		.global	PWM_SetPWMMode
 421              		.code	16
 422              		.thumb_func
 423              		.type	PWM_SetPWMMode, %function
 424              	PWM_SetPWMMode:
 425              	.LFB8:
 444:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 426              		.loc 1 444 0
 427              		.cfi_startproc
 428              	.LVL26:
 445:.\Generated_Source\PSoC4/PWM.c **** }
 429              		.loc 1 445 0
 430 0000 3F23     		mov	r3, #63
 431 0002 1840     		and	r0, r3
 432              	.LVL27:
 433 0004 014B     		ldr	r3, .L28
 446:.\Generated_Source\PSoC4/PWM.c **** 
 434              		.loc 1 446 0
 435              		@ sp needed
 445:.\Generated_Source\PSoC4/PWM.c **** }
 436              		.loc 1 445 0
 437 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM.c **** 
 438              		.loc 1 446 0
 439 0008 7047     		bx	lr
 440              	.L29:
 441 000a C046     		.align	2
 442              	.L28:
 443 000c 28010540 		.word	1074069800
 444              		.cfi_endproc
 445              	.LFE8:
 446              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 447              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 448              		.align	1
 449              		.global	PWM_SetPWMSyncKill
 450              		.code	16
 451              		.thumb_func
 452              		.type	PWM_SetPWMSyncKill, %function
 453              	PWM_SetPWMSyncKill:
 454              	.LFB9:
 480:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 455              		.loc 1 480 0
 456              		.cfi_startproc
 457              	.LVL28:
 458 0000 10B5     		push	{r4, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 462              		.loc 1 480 0
 463 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/PWM.c **** 
 464              		.loc 1 483 0
 465 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 466              	.LVL29:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 33


 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 467              		.loc 1 485 0
 468 0008 0421     		mov	r1, #4
 469 000a 064A     		ldr	r2, .L31
 490:.\Generated_Source\PSoC4/PWM.c **** 
 470              		.loc 1 490 0
 471              		@ sp needed
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 472              		.loc 1 485 0
 473 000c 1368     		ldr	r3, [r2]
 474 000e 8B43     		bic	r3, r1
 475 0010 1360     		str	r3, [r2]
 486:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 476              		.loc 1 486 0
 477 0012 0123     		mov	r3, #1
 478 0014 1168     		ldr	r1, [r2]
 479 0016 2340     		and	r3, r4
 480 0018 9B00     		lsl	r3, r3, #2
 481 001a 0B43     		orr	r3, r1
 482 001c 1360     		str	r3, [r2]
 489:.\Generated_Source\PSoC4/PWM.c **** }
 483              		.loc 1 489 0
 484 001e FFF7FEFF 		bl	CyExitCriticalSection
 485              	.LVL30:
 486              	.LVL31:
 490:.\Generated_Source\PSoC4/PWM.c **** 
 487              		.loc 1 490 0
 488 0022 10BD     		pop	{r4, pc}
 489              	.L32:
 490              		.align	2
 491              	.L31:
 492 0024 00010540 		.word	1074069760
 493              		.cfi_endproc
 494              	.LFE9:
 495              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 496              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 497              		.align	1
 498              		.global	PWM_SetPWMStopOnKill
 499              		.code	16
 500              		.thumb_func
 501              		.type	PWM_SetPWMStopOnKill, %function
 502              	PWM_SetPWMStopOnKill:
 503              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 504              		.loc 1 514 0
 505              		.cfi_startproc
 506              	.LVL32:
 507 0000 10B5     		push	{r4, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 511              		.loc 1 514 0
 512 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/PWM.c **** 
 513              		.loc 1 517 0
 514 0004 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 34


 515              	.LVL33:
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 516              		.loc 1 519 0
 517 0008 0821     		mov	r1, #8
 518 000a 064A     		ldr	r2, .L34
 524:.\Generated_Source\PSoC4/PWM.c **** 
 519              		.loc 1 524 0
 520              		@ sp needed
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 521              		.loc 1 519 0
 522 000c 1368     		ldr	r3, [r2]
 523 000e 8B43     		bic	r3, r1
 524 0010 1360     		str	r3, [r2]
 520:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 525              		.loc 1 520 0
 526 0012 0123     		mov	r3, #1
 527 0014 1168     		ldr	r1, [r2]
 528 0016 2340     		and	r3, r4
 529 0018 DB00     		lsl	r3, r3, #3
 530 001a 0B43     		orr	r3, r1
 531 001c 1360     		str	r3, [r2]
 523:.\Generated_Source\PSoC4/PWM.c **** }
 532              		.loc 1 523 0
 533 001e FFF7FEFF 		bl	CyExitCriticalSection
 534              	.LVL34:
 535              	.LVL35:
 524:.\Generated_Source\PSoC4/PWM.c **** 
 536              		.loc 1 524 0
 537 0022 10BD     		pop	{r4, pc}
 538              	.L35:
 539              		.align	2
 540              	.L34:
 541 0024 00010540 		.word	1074069760
 542              		.cfi_endproc
 543              	.LFE10:
 544              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 545              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 546              		.align	1
 547              		.global	PWM_SetPWMDeadTime
 548              		.code	16
 549              		.thumb_func
 550              		.type	PWM_SetPWMDeadTime, %function
 551              	PWM_SetPWMDeadTime:
 552              	.LFB11:
 547:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 553              		.loc 1 547 0
 554              		.cfi_startproc
 555              	.LVL36:
 556 0000 10B5     		push	{r4, lr}
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 560              		.loc 1 547 0
 561 0002 041C     		mov	r4, r0
 550:.\Generated_Source\PSoC4/PWM.c **** 
 562              		.loc 1 550 0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 35


 563 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 564              	.LVL37:
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 565              		.loc 1 552 0
 566 0008 064B     		ldr	r3, .L37
 567 000a 074A     		ldr	r2, .L37+4
 568 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 569              		.loc 1 553 0
 570 000e 2406     		lsl	r4, r4, #24
 571              	.LVL38:
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 572              		.loc 1 552 0
 573 0010 0A40     		and	r2, r1
 574 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 575              		.loc 1 553 0
 576 0014 1A68     		ldr	r2, [r3]
 577 0016 240C     		lsr	r4, r4, #16
 578 0018 1443     		orr	r4, r2
 579 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/PWM.c **** }
 580              		.loc 1 556 0
 581 001c FFF7FEFF 		bl	CyExitCriticalSection
 582              	.LVL39:
 557:.\Generated_Source\PSoC4/PWM.c **** 
 583              		.loc 1 557 0
 584              		@ sp needed
 585 0020 10BD     		pop	{r4, pc}
 586              	.L38:
 587 0022 C046     		.align	2
 588              	.L37:
 589 0024 00010540 		.word	1074069760
 590 0028 FF00FFFF 		.word	-65281
 591              		.cfi_endproc
 592              	.LFE11:
 593              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 594              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 595              		.align	1
 596              		.global	PWM_SetPWMInvert
 597              		.code	16
 598              		.thumb_func
 599              		.type	PWM_SetPWMInvert, %function
 600              	PWM_SetPWMInvert:
 601              	.LFB12:
 580:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 602              		.loc 1 580 0
 603              		.cfi_startproc
 604              	.LVL40:
 605 0000 10B5     		push	{r4, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 4, -8
 608              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 609              		.loc 1 580 0
 610 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 36


 611              		.loc 1 583 0
 612 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 613              	.LVL41:
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 614              		.loc 1 585 0
 615 0008 054B     		ldr	r3, .L40
 616 000a 064A     		ldr	r2, .L40+4
 617 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/PWM.c **** 
 618              		.loc 1 589 0
 619              		@ sp needed
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 620              		.loc 1 585 0
 621 000e 0A40     		and	r2, r1
 622 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM.c **** 
 623              		.loc 1 586 0
 624 0012 1A68     		ldr	r2, [r3]
 625 0014 2243     		orr	r2, r4
 626 0016 1A60     		str	r2, [r3]
 588:.\Generated_Source\PSoC4/PWM.c **** }
 627              		.loc 1 588 0
 628 0018 FFF7FEFF 		bl	CyExitCriticalSection
 629              	.LVL42:
 630              	.LVL43:
 589:.\Generated_Source\PSoC4/PWM.c **** 
 631              		.loc 1 589 0
 632 001c 10BD     		pop	{r4, pc}
 633              	.L41:
 634 001e C046     		.align	2
 635              	.L40:
 636 0020 00010540 		.word	1074069760
 637 0024 FFFFCFFF 		.word	-3145729
 638              		.cfi_endproc
 639              	.LFE12:
 640              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 641              		.section	.text.PWM_WriteCounter,"ax",%progbits
 642              		.align	1
 643              		.global	PWM_WriteCounter
 644              		.code	16
 645              		.thumb_func
 646              		.type	PWM_WriteCounter, %function
 647              	PWM_WriteCounter:
 648              	.LFB13:
 610:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 649              		.loc 1 610 0
 650              		.cfi_startproc
 651              	.LVL44:
 611:.\Generated_Source\PSoC4/PWM.c **** }
 652              		.loc 1 611 0
 653 0000 014B     		ldr	r3, .L43
 654 0002 80B2     		uxth	r0, r0
 655              	.LVL45:
 656 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** 
 657              		.loc 1 612 0
 658              		@ sp needed
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 37


 659 0006 7047     		bx	lr
 660              	.L44:
 661              		.align	2
 662              	.L43:
 663 0008 08010540 		.word	1074069768
 664              		.cfi_endproc
 665              	.LFE13:
 666              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 667              		.section	.text.PWM_ReadCounter,"ax",%progbits
 668              		.align	1
 669              		.global	PWM_ReadCounter
 670              		.code	16
 671              		.thumb_func
 672              		.type	PWM_ReadCounter, %function
 673              	PWM_ReadCounter:
 674              	.LFB14:
 630:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 675              		.loc 1 630 0
 676              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM.c **** }
 677              		.loc 1 631 0
 678 0000 014B     		ldr	r3, .L46
 632:.\Generated_Source\PSoC4/PWM.c **** 
 679              		.loc 1 632 0
 680              		@ sp needed
 631:.\Generated_Source\PSoC4/PWM.c **** }
 681              		.loc 1 631 0
 682 0002 1868     		ldr	r0, [r3]
 683 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/PWM.c **** 
 684              		.loc 1 632 0
 685 0006 7047     		bx	lr
 686              	.L47:
 687              		.align	2
 688              	.L46:
 689 0008 08010540 		.word	1074069768
 690              		.cfi_endproc
 691              	.LFE14:
 692              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 693              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 694              		.align	1
 695              		.global	PWM_SetCounterMode
 696              		.code	16
 697              		.thumb_func
 698              		.type	PWM_SetCounterMode, %function
 699              	PWM_SetCounterMode:
 700              	.LFB15:
 659:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 701              		.loc 1 659 0
 702              		.cfi_startproc
 703              	.LVL46:
 704 0000 10B5     		push	{r4, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 4, -8
 707              		.cfi_offset 14, -4
 659:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 708              		.loc 1 659 0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 38


 709 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/PWM.c **** 
 710              		.loc 1 662 0
 711 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 712              	.LVL47:
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 713              		.loc 1 664 0
 714 0008 054B     		ldr	r3, .L49
 715 000a 064A     		ldr	r2, .L49+4
 716 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/PWM.c **** 
 717              		.loc 1 668 0
 718              		@ sp needed
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 719              		.loc 1 664 0
 720 000e 0A40     		and	r2, r1
 721 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM.c **** 
 722              		.loc 1 665 0
 723 0012 1A68     		ldr	r2, [r3]
 724 0014 2243     		orr	r2, r4
 725 0016 1A60     		str	r2, [r3]
 667:.\Generated_Source\PSoC4/PWM.c **** }
 726              		.loc 1 667 0
 727 0018 FFF7FEFF 		bl	CyExitCriticalSection
 728              	.LVL48:
 729              	.LVL49:
 668:.\Generated_Source\PSoC4/PWM.c **** 
 730              		.loc 1 668 0
 731 001c 10BD     		pop	{r4, pc}
 732              	.L50:
 733 001e C046     		.align	2
 734              	.L49:
 735 0020 00010540 		.word	1074069760
 736 0024 FFFFFCFF 		.word	-196609
 737              		.cfi_endproc
 738              	.LFE15:
 739              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 740              		.section	.text.PWM_WritePeriod,"ax",%progbits
 741              		.align	1
 742              		.global	PWM_WritePeriod
 743              		.code	16
 744              		.thumb_func
 745              		.type	PWM_WritePeriod, %function
 746              	PWM_WritePeriod:
 747              	.LFB16:
 688:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 748              		.loc 1 688 0
 749              		.cfi_startproc
 750              	.LVL50:
 689:.\Generated_Source\PSoC4/PWM.c **** }
 751              		.loc 1 689 0
 752 0000 014B     		ldr	r3, .L52
 753 0002 80B2     		uxth	r0, r0
 754              	.LVL51:
 755 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 39


 756              		.loc 1 690 0
 757              		@ sp needed
 758 0006 7047     		bx	lr
 759              	.L53:
 760              		.align	2
 761              	.L52:
 762 0008 14010540 		.word	1074069780
 763              		.cfi_endproc
 764              	.LFE16:
 765              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 766              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 767              		.align	1
 768              		.global	PWM_ReadPeriod
 769              		.code	16
 770              		.thumb_func
 771              		.type	PWM_ReadPeriod, %function
 772              	PWM_ReadPeriod:
 773              	.LFB17:
 708:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 774              		.loc 1 708 0
 775              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM.c **** }
 776              		.loc 1 709 0
 777 0000 014B     		ldr	r3, .L55
 710:.\Generated_Source\PSoC4/PWM.c **** 
 778              		.loc 1 710 0
 779              		@ sp needed
 709:.\Generated_Source\PSoC4/PWM.c **** }
 780              		.loc 1 709 0
 781 0002 1868     		ldr	r0, [r3]
 782 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/PWM.c **** 
 783              		.loc 1 710 0
 784 0006 7047     		bx	lr
 785              	.L56:
 786              		.align	2
 787              	.L55:
 788 0008 14010540 		.word	1074069780
 789              		.cfi_endproc
 790              	.LFE17:
 791              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 792              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 793              		.align	1
 794              		.global	PWM_SetCompareSwap
 795              		.code	16
 796              		.thumb_func
 797              		.type	PWM_SetCompareSwap, %function
 798              	PWM_SetCompareSwap:
 799              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 800              		.loc 1 734 0
 801              		.cfi_startproc
 802              	.LVL52:
 803 0000 10B5     		push	{r4, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 14, -4
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 40


 734:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 807              		.loc 1 734 0
 808 0002 041C     		mov	r4, r0
 737:.\Generated_Source\PSoC4/PWM.c **** 
 809              		.loc 1 737 0
 810 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 811              	.LVL53:
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 812              		.loc 1 739 0
 813 0008 0122     		mov	r2, #1
 814 000a 054B     		ldr	r3, .L58
 743:.\Generated_Source\PSoC4/PWM.c **** 
 815              		.loc 1 743 0
 816              		@ sp needed
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 817              		.loc 1 739 0
 818 000c 1968     		ldr	r1, [r3]
 819 000e 9143     		bic	r1, r2
 820 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/PWM.c **** 
 821              		.loc 1 740 0
 822 0012 1968     		ldr	r1, [r3]
 823 0014 2240     		and	r2, r4
 824 0016 0A43     		orr	r2, r1
 825 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM.c **** }
 826              		.loc 1 742 0
 827 001a FFF7FEFF 		bl	CyExitCriticalSection
 828              	.LVL54:
 829              	.LVL55:
 743:.\Generated_Source\PSoC4/PWM.c **** 
 830              		.loc 1 743 0
 831 001e 10BD     		pop	{r4, pc}
 832              	.L59:
 833              		.align	2
 834              	.L58:
 835 0020 00010540 		.word	1074069760
 836              		.cfi_endproc
 837              	.LFE18:
 838              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 839              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 840              		.align	1
 841              		.global	PWM_WritePeriodBuf
 842              		.code	16
 843              		.thumb_func
 844              		.type	PWM_WritePeriodBuf, %function
 845              	PWM_WritePeriodBuf:
 846              	.LFB19:
 761:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 847              		.loc 1 761 0
 848              		.cfi_startproc
 849              	.LVL56:
 762:.\Generated_Source\PSoC4/PWM.c **** }
 850              		.loc 1 762 0
 851 0000 014B     		ldr	r3, .L61
 852 0002 80B2     		uxth	r0, r0
 853              	.LVL57:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 41


 854 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** 
 855              		.loc 1 763 0
 856              		@ sp needed
 857 0006 7047     		bx	lr
 858              	.L62:
 859              		.align	2
 860              	.L61:
 861 0008 18010540 		.word	1074069784
 862              		.cfi_endproc
 863              	.LFE19:
 864              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 865              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 866              		.align	1
 867              		.global	PWM_ReadPeriodBuf
 868              		.code	16
 869              		.thumb_func
 870              		.type	PWM_ReadPeriodBuf, %function
 871              	PWM_ReadPeriodBuf:
 872              	.LFB20:
 781:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 873              		.loc 1 781 0
 874              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM.c **** }
 875              		.loc 1 782 0
 876 0000 014B     		ldr	r3, .L64
 783:.\Generated_Source\PSoC4/PWM.c **** 
 877              		.loc 1 783 0
 878              		@ sp needed
 782:.\Generated_Source\PSoC4/PWM.c **** }
 879              		.loc 1 782 0
 880 0002 1868     		ldr	r0, [r3]
 881 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/PWM.c **** 
 882              		.loc 1 783 0
 883 0006 7047     		bx	lr
 884              	.L65:
 885              		.align	2
 886              	.L64:
 887 0008 18010540 		.word	1074069784
 888              		.cfi_endproc
 889              	.LFE20:
 890              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 891              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 892              		.align	1
 893              		.global	PWM_SetPeriodSwap
 894              		.code	16
 895              		.thumb_func
 896              		.type	PWM_SetPeriodSwap, %function
 897              	PWM_SetPeriodSwap:
 898              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 899              		.loc 1 807 0
 900              		.cfi_startproc
 901              	.LVL58:
 902 0000 10B5     		push	{r4, lr}
 903              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 42


 904              		.cfi_offset 4, -8
 905              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 906              		.loc 1 807 0
 907 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/PWM.c **** 
 908              		.loc 1 810 0
 909 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 910              	.LVL59:
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 911              		.loc 1 812 0
 912 0008 0221     		mov	r1, #2
 913 000a 064A     		ldr	r2, .L67
 817:.\Generated_Source\PSoC4/PWM.c **** 
 914              		.loc 1 817 0
 915              		@ sp needed
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 916              		.loc 1 812 0
 917 000c 1368     		ldr	r3, [r2]
 918 000e 8B43     		bic	r3, r1
 919 0010 1360     		str	r3, [r2]
 813:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 920              		.loc 1 813 0
 921 0012 0123     		mov	r3, #1
 922 0014 1168     		ldr	r1, [r2]
 923 0016 2340     		and	r3, r4
 924 0018 5B00     		lsl	r3, r3, #1
 925 001a 0B43     		orr	r3, r1
 926 001c 1360     		str	r3, [r2]
 816:.\Generated_Source\PSoC4/PWM.c **** }
 927              		.loc 1 816 0
 928 001e FFF7FEFF 		bl	CyExitCriticalSection
 929              	.LVL60:
 930              	.LVL61:
 817:.\Generated_Source\PSoC4/PWM.c **** 
 931              		.loc 1 817 0
 932 0022 10BD     		pop	{r4, pc}
 933              	.L68:
 934              		.align	2
 935              	.L67:
 936 0024 00010540 		.word	1074069760
 937              		.cfi_endproc
 938              	.LFE21:
 939              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 940              		.section	.text.PWM_WriteCompare,"ax",%progbits
 941              		.align	1
 942              		.global	PWM_WriteCompare
 943              		.code	16
 944              		.thumb_func
 945              		.type	PWM_WriteCompare, %function
 946              	PWM_WriteCompare:
 947              	.LFB22:
 836:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 948              		.loc 1 836 0
 949              		.cfi_startproc
 950              	.LVL62:
 859:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 43


 951              		.loc 1 859 0
 952 0000 014B     		ldr	r3, .L70
 953 0002 80B2     		uxth	r0, r0
 954              	.LVL63:
 955 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM.c **** 
 956              		.loc 1 860 0
 957              		@ sp needed
 958 0006 7047     		bx	lr
 959              	.L71:
 960              		.align	2
 961              	.L70:
 962 0008 0C010540 		.word	1074069772
 963              		.cfi_endproc
 964              	.LFE22:
 965              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 966              		.section	.text.PWM_ReadCompare,"ax",%progbits
 967              		.align	1
 968              		.global	PWM_ReadCompare
 969              		.code	16
 970              		.thumb_func
 971              		.type	PWM_ReadCompare, %function
 972              	PWM_ReadCompare:
 973              	.LFB23:
 879:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 974              		.loc 1 879 0
 975              		.cfi_startproc
 904:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 976              		.loc 1 904 0
 977 0000 014B     		ldr	r3, .L73
 906:.\Generated_Source\PSoC4/PWM.c **** 
 978              		.loc 1 906 0
 979              		@ sp needed
 904:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 980              		.loc 1 904 0
 981 0002 1868     		ldr	r0, [r3]
 982 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/PWM.c **** 
 983              		.loc 1 906 0
 984 0006 7047     		bx	lr
 985              	.L74:
 986              		.align	2
 987              	.L73:
 988 0008 0C010540 		.word	1074069772
 989              		.cfi_endproc
 990              	.LFE23:
 991              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 992              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 993              		.align	1
 994              		.global	PWM_WriteCompareBuf
 995              		.code	16
 996              		.thumb_func
 997              		.type	PWM_WriteCompareBuf, %function
 998              	PWM_WriteCompareBuf:
 999              	.LFB24:
 925:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 1000              		.loc 1 925 0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 44


 1001              		.cfi_startproc
 1002              	.LVL64:
 946:.\Generated_Source\PSoC4/PWM.c **** }
 1003              		.loc 1 946 0
 1004 0000 014B     		ldr	r3, .L76
 1005 0002 80B2     		uxth	r0, r0
 1006              	.LVL65:
 1007 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM.c **** 
 1008              		.loc 1 947 0
 1009              		@ sp needed
 1010 0006 7047     		bx	lr
 1011              	.L77:
 1012              		.align	2
 1013              	.L76:
 1014 0008 10010540 		.word	1074069776
 1015              		.cfi_endproc
 1016              	.LFE24:
 1017              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1018              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1019              		.align	1
 1020              		.global	PWM_ReadCompareBuf
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_ReadCompareBuf, %function
 1024              	PWM_ReadCompareBuf:
 1025              	.LFB25:
 966:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 1026              		.loc 1 966 0
 1027              		.cfi_startproc
 991:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 1028              		.loc 1 991 0
 1029 0000 014B     		ldr	r3, .L79
 993:.\Generated_Source\PSoC4/PWM.c **** 
 1030              		.loc 1 993 0
 1031              		@ sp needed
 991:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 1032              		.loc 1 991 0
 1033 0002 1868     		ldr	r0, [r3]
 1034 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/PWM.c **** 
 1035              		.loc 1 993 0
 1036 0006 7047     		bx	lr
 1037              	.L80:
 1038              		.align	2
 1039              	.L79:
 1040 0008 10010540 		.word	1074069776
 1041              		.cfi_endproc
 1042              	.LFE25:
 1043              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1044              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1045              		.align	1
 1046              		.global	PWM_ReadCapture
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	PWM_ReadCapture, %function
 1050              	PWM_ReadCapture:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 45


 1051              	.LFB26:
1012:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1052              		.loc 1 1012 0
 1053              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM.c **** }
 1054              		.loc 1 1013 0
 1055 0000 014B     		ldr	r3, .L82
1014:.\Generated_Source\PSoC4/PWM.c **** 
 1056              		.loc 1 1014 0
 1057              		@ sp needed
1013:.\Generated_Source\PSoC4/PWM.c **** }
 1058              		.loc 1 1013 0
 1059 0002 1868     		ldr	r0, [r3]
 1060 0004 80B2     		uxth	r0, r0
1014:.\Generated_Source\PSoC4/PWM.c **** 
 1061              		.loc 1 1014 0
 1062 0006 7047     		bx	lr
 1063              	.L83:
 1064              		.align	2
 1065              	.L82:
 1066 0008 0C010540 		.word	1074069772
 1067              		.cfi_endproc
 1068              	.LFE26:
 1069              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1070              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1071              		.align	1
 1072              		.global	PWM_ReadCaptureBuf
 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	PWM_ReadCaptureBuf, %function
 1076              	PWM_ReadCaptureBuf:
 1077              	.LFB27:
1033:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1078              		.loc 1 1033 0
 1079              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM.c **** }
 1080              		.loc 1 1034 0
 1081 0000 014B     		ldr	r3, .L85
1035:.\Generated_Source\PSoC4/PWM.c **** 
 1082              		.loc 1 1035 0
 1083              		@ sp needed
1034:.\Generated_Source\PSoC4/PWM.c **** }
 1084              		.loc 1 1034 0
 1085 0002 1868     		ldr	r0, [r3]
 1086 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/PWM.c **** 
 1087              		.loc 1 1035 0
 1088 0006 7047     		bx	lr
 1089              	.L86:
 1090              		.align	2
 1091              	.L85:
 1092 0008 10010540 		.word	1074069776
 1093              		.cfi_endproc
 1094              	.LFE27:
 1095              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1096              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1097              		.align	1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 46


 1098              		.global	PWM_SetCaptureMode
 1099              		.code	16
 1100              		.thumb_func
 1101              		.type	PWM_SetCaptureMode, %function
 1102              	PWM_SetCaptureMode:
 1103              	.LFB28:
1060:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1104              		.loc 1 1060 0
 1105              		.cfi_startproc
 1106              	.LVL66:
 1107 0000 10B5     		push	{r4, lr}
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 4, -8
 1110              		.cfi_offset 14, -4
1060:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1111              		.loc 1 1060 0
 1112 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/PWM.c **** 
 1113              		.loc 1 1063 0
 1114 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL67:
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1116              		.loc 1 1065 0
 1117 0008 0321     		mov	r1, #3
 1118 000a 054B     		ldr	r3, .L88
1069:.\Generated_Source\PSoC4/PWM.c **** 
 1119              		.loc 1 1069 0
 1120              		@ sp needed
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1121              		.loc 1 1065 0
 1122 000c 1A68     		ldr	r2, [r3]
 1123 000e 8A43     		bic	r2, r1
 1124 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM.c **** 
 1125              		.loc 1 1066 0
 1126 0012 1A68     		ldr	r2, [r3]
 1127 0014 2243     		orr	r2, r4
 1128 0016 1A60     		str	r2, [r3]
1068:.\Generated_Source\PSoC4/PWM.c **** }
 1129              		.loc 1 1068 0
 1130 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1131              	.LVL68:
 1132              	.LVL69:
1069:.\Generated_Source\PSoC4/PWM.c **** 
 1133              		.loc 1 1069 0
 1134 001c 10BD     		pop	{r4, pc}
 1135              	.L89:
 1136 001e C046     		.align	2
 1137              	.L88:
 1138 0020 24010540 		.word	1074069796
 1139              		.cfi_endproc
 1140              	.LFE28:
 1141              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1142              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1143              		.align	1
 1144              		.global	PWM_SetReloadMode
 1145              		.code	16
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 47


 1146              		.thumb_func
 1147              		.type	PWM_SetReloadMode, %function
 1148              	PWM_SetReloadMode:
 1149              	.LFB29:
1093:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1150              		.loc 1 1093 0
 1151              		.cfi_startproc
 1152              	.LVL70:
 1153 0000 10B5     		push	{r4, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 4, -8
 1156              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1157              		.loc 1 1093 0
 1158 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PWM.c **** 
 1159              		.loc 1 1096 0
 1160 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1161              	.LVL71:
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1162              		.loc 1 1098 0
 1163 0008 3021     		mov	r1, #48
 1164 000a 054B     		ldr	r3, .L91
1102:.\Generated_Source\PSoC4/PWM.c **** 
 1165              		.loc 1 1102 0
 1166              		@ sp needed
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1167              		.loc 1 1098 0
 1168 000c 1A68     		ldr	r2, [r3]
 1169 000e 8A43     		bic	r2, r1
 1170 0010 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c **** 
 1171              		.loc 1 1099 0
 1172 0012 1968     		ldr	r1, [r3]
 1173 0014 2201     		lsl	r2, r4, #4
 1174 0016 0A43     		orr	r2, r1
 1175 0018 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/PWM.c **** }
 1176              		.loc 1 1101 0
 1177 001a FFF7FEFF 		bl	CyExitCriticalSection
 1178              	.LVL72:
 1179              	.LVL73:
1102:.\Generated_Source\PSoC4/PWM.c **** 
 1180              		.loc 1 1102 0
 1181 001e 10BD     		pop	{r4, pc}
 1182              	.L92:
 1183              		.align	2
 1184              	.L91:
 1185 0020 24010540 		.word	1074069796
 1186              		.cfi_endproc
 1187              	.LFE29:
 1188              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1189              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1190              		.align	1
 1191              		.global	PWM_SetStartMode
 1192              		.code	16
 1193              		.thumb_func
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 48


 1194              		.type	PWM_SetStartMode, %function
 1195              	PWM_SetStartMode:
 1196              	.LFB30:
1126:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1197              		.loc 1 1126 0
 1198              		.cfi_startproc
 1199              	.LVL74:
 1200 0000 10B5     		push	{r4, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1204              		.loc 1 1126 0
 1205 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PWM.c **** 
 1206              		.loc 1 1129 0
 1207 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1208              	.LVL75:
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1209              		.loc 1 1131 0
 1210 0008 054B     		ldr	r3, .L94
 1211 000a 064A     		ldr	r2, .L94+4
 1212 000c 1968     		ldr	r1, [r3]
1135:.\Generated_Source\PSoC4/PWM.c **** 
 1213              		.loc 1 1135 0
 1214              		@ sp needed
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1215              		.loc 1 1131 0
 1216 000e 0A40     		and	r2, r1
 1217 0010 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM.c **** 
 1218              		.loc 1 1132 0
 1219 0012 1968     		ldr	r1, [r3]
 1220 0014 2202     		lsl	r2, r4, #8
 1221 0016 0A43     		orr	r2, r1
 1222 0018 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/PWM.c **** }
 1223              		.loc 1 1134 0
 1224 001a FFF7FEFF 		bl	CyExitCriticalSection
 1225              	.LVL76:
 1226              	.LVL77:
1135:.\Generated_Source\PSoC4/PWM.c **** 
 1227              		.loc 1 1135 0
 1228 001e 10BD     		pop	{r4, pc}
 1229              	.L95:
 1230              		.align	2
 1231              	.L94:
 1232 0020 24010540 		.word	1074069796
 1233 0024 FFFCFFFF 		.word	-769
 1234              		.cfi_endproc
 1235              	.LFE30:
 1236              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1237              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1238              		.align	1
 1239              		.global	PWM_SetStopMode
 1240              		.code	16
 1241              		.thumb_func
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 49


 1242              		.type	PWM_SetStopMode, %function
 1243              	PWM_SetStopMode:
 1244              	.LFB31:
1158:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1245              		.loc 1 1158 0
 1246              		.cfi_startproc
 1247              	.LVL78:
 1248 0000 10B5     		push	{r4, lr}
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 4, -8
 1251              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1252              		.loc 1 1158 0
 1253 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/PWM.c **** 
 1254              		.loc 1 1161 0
 1255 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1256              	.LVL79:
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1257              		.loc 1 1163 0
 1258 0008 C021     		mov	r1, #192
 1259 000a 054B     		ldr	r3, .L97
1167:.\Generated_Source\PSoC4/PWM.c **** 
 1260              		.loc 1 1167 0
 1261              		@ sp needed
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1262              		.loc 1 1163 0
 1263 000c 1A68     		ldr	r2, [r3]
 1264 000e 8A43     		bic	r2, r1
 1265 0010 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c **** 
 1266              		.loc 1 1164 0
 1267 0012 1968     		ldr	r1, [r3]
 1268 0014 A201     		lsl	r2, r4, #6
 1269 0016 0A43     		orr	r2, r1
 1270 0018 1A60     		str	r2, [r3]
1166:.\Generated_Source\PSoC4/PWM.c **** }
 1271              		.loc 1 1166 0
 1272 001a FFF7FEFF 		bl	CyExitCriticalSection
 1273              	.LVL80:
 1274              	.LVL81:
1167:.\Generated_Source\PSoC4/PWM.c **** 
 1275              		.loc 1 1167 0
 1276 001e 10BD     		pop	{r4, pc}
 1277              	.L98:
 1278              		.align	2
 1279              	.L97:
 1280 0020 24010540 		.word	1074069796
 1281              		.cfi_endproc
 1282              	.LFE31:
 1283              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1284              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1285              		.align	1
 1286              		.global	PWM_SetCountMode
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	PWM_SetCountMode, %function
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 50


 1290              	PWM_SetCountMode:
 1291              	.LFB32:
1191:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1292              		.loc 1 1191 0
 1293              		.cfi_startproc
 1294              	.LVL82:
 1295 0000 10B5     		push	{r4, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 4, -8
 1298              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1299              		.loc 1 1191 0
 1300 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PWM.c **** 
 1301              		.loc 1 1194 0
 1302 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1303              	.LVL83:
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1304              		.loc 1 1196 0
 1305 0008 0C21     		mov	r1, #12
 1306 000a 054B     		ldr	r3, .L100
1200:.\Generated_Source\PSoC4/PWM.c **** 
 1307              		.loc 1 1200 0
 1308              		@ sp needed
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1309              		.loc 1 1196 0
 1310 000c 1A68     		ldr	r2, [r3]
 1311 000e 8A43     		bic	r2, r1
 1312 0010 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c **** 
 1313              		.loc 1 1197 0
 1314 0012 1968     		ldr	r1, [r3]
 1315 0014 A200     		lsl	r2, r4, #2
 1316 0016 0A43     		orr	r2, r1
 1317 0018 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/PWM.c **** }
 1318              		.loc 1 1199 0
 1319 001a FFF7FEFF 		bl	CyExitCriticalSection
 1320              	.LVL84:
 1321              	.LVL85:
1200:.\Generated_Source\PSoC4/PWM.c **** 
 1322              		.loc 1 1200 0
 1323 001e 10BD     		pop	{r4, pc}
 1324              	.L101:
 1325              		.align	2
 1326              	.L100:
 1327 0020 24010540 		.word	1074069796
 1328              		.cfi_endproc
 1329              	.LFE32:
 1330              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1331              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1332              		.align	1
 1333              		.global	PWM_TriggerCommand
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	PWM_TriggerCommand, %function
 1337              	PWM_TriggerCommand:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 51


 1338              	.LFB33:
1231:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1339              		.loc 1 1231 0
 1340              		.cfi_startproc
 1341              	.LVL86:
 1342 0000 38B5     		push	{r3, r4, r5, lr}
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 3, -16
 1345              		.cfi_offset 4, -12
 1346              		.cfi_offset 5, -8
 1347              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1348              		.loc 1 1231 0
 1349 0002 0D1C     		mov	r5, r1
 1350 0004 041C     		mov	r4, r0
1236:.\Generated_Source\PSoC4/PWM.c **** 
 1351              		.loc 1 1236 0
 1352 0006 AC40     		lsl	r4, r4, r5
1234:.\Generated_Source\PSoC4/PWM.c **** 
 1353              		.loc 1 1234 0
 1354 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1355              	.LVL87:
1236:.\Generated_Source\PSoC4/PWM.c **** 
 1356              		.loc 1 1236 0
 1357 000c 024B     		ldr	r3, .L103
1239:.\Generated_Source\PSoC4/PWM.c **** 
 1358              		.loc 1 1239 0
 1359              		@ sp needed
1236:.\Generated_Source\PSoC4/PWM.c **** 
 1360              		.loc 1 1236 0
 1361 000e 1C60     		str	r4, [r3]
1238:.\Generated_Source\PSoC4/PWM.c **** }
 1362              		.loc 1 1238 0
 1363 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1364              	.LVL88:
 1365              	.LVL89:
1239:.\Generated_Source\PSoC4/PWM.c **** 
 1366              		.loc 1 1239 0
 1367 0014 38BD     		pop	{r3, r4, r5, pc}
 1368              	.L104:
 1369 0016 C046     		.align	2
 1370              	.L103:
 1371 0018 08000540 		.word	1074069512
 1372              		.cfi_endproc
 1373              	.LFE33:
 1374              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1375              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1376              		.align	1
 1377              		.global	PWM_ReadStatus
 1378              		.code	16
 1379              		.thumb_func
 1380              		.type	PWM_ReadStatus, %function
 1381              	PWM_ReadStatus:
 1382              	.LFB34:
1260:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1383              		.loc 1 1260 0
 1384              		.cfi_startproc
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 52


1261:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1385              		.loc 1 1261 0
 1386 0000 034A     		ldr	r2, .L106
1263:.\Generated_Source\PSoC4/PWM.c **** 
 1387              		.loc 1 1263 0
 1388              		@ sp needed
1261:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1389              		.loc 1 1261 0
 1390 0002 1368     		ldr	r3, [r2]
1262:.\Generated_Source\PSoC4/PWM.c **** }
 1391              		.loc 1 1262 0
 1392 0004 1068     		ldr	r0, [r2]
 1393 0006 0122     		mov	r2, #1
1261:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1394              		.loc 1 1261 0
 1395 0008 9B0F     		lsr	r3, r3, #30
1262:.\Generated_Source\PSoC4/PWM.c **** }
 1396              		.loc 1 1262 0
 1397 000a 1040     		and	r0, r2
1261:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1398              		.loc 1 1261 0
 1399 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/PWM.c **** 
 1400              		.loc 1 1263 0
 1401 000e 7047     		bx	lr
 1402              	.L107:
 1403              		.align	2
 1404              	.L106:
 1405 0010 04010540 		.word	1074069764
 1406              		.cfi_endproc
 1407              	.LFE34:
 1408              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1409              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1410              		.align	1
 1411              		.global	PWM_SetInterruptMode
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	PWM_SetInterruptMode, %function
 1415              	PWM_SetInterruptMode:
 1416              	.LFB35:
1285:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1417              		.loc 1 1285 0
 1418              		.cfi_startproc
 1419              	.LVL90:
 1420              		.loc 1 1286 0
 1421 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/PWM.c **** }
 1422              		.loc 1 1287 0
 1423              		@ sp needed
1286:.\Generated_Source\PSoC4/PWM.c **** }
 1424              		.loc 1 1286 0
 1425 0002 1860     		str	r0, [r3]
 1426              		.loc 1 1287 0
 1427 0004 7047     		bx	lr
 1428              	.L110:
 1429 0006 C046     		.align	2
 1430              	.L109:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 53


 1431 0008 38010540 		.word	1074069816
 1432              		.cfi_endproc
 1433              	.LFE35:
 1434              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1435              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1436              		.align	1
 1437              		.global	PWM_GetInterruptSourceMasked
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	PWM_GetInterruptSourceMasked, %function
 1441              	PWM_GetInterruptSourceMasked:
 1442              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM.c **** 
1289:.\Generated_Source\PSoC4/PWM.c **** 
1290:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM.c **** *
1294:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM.c **** *   None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM.c **** *
1306:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM.c **** {
 1443              		.loc 1 1308 0
 1444              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1445              		.loc 1 1309 0
 1446 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/PWM.c **** }
 1447              		.loc 1 1310 0
 1448              		@ sp needed
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1449              		.loc 1 1309 0
 1450 0002 1868     		ldr	r0, [r3]
 1451              		.loc 1 1310 0
 1452 0004 7047     		bx	lr
 1453              	.L113:
 1454 0006 C046     		.align	2
 1455              	.L112:
 1456 0008 3C010540 		.word	1074069820
 1457              		.cfi_endproc
 1458              	.LFE36:
 1459              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1460              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1461              		.align	1
 1462              		.global	PWM_GetInterruptSource
 1463              		.code	16
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 54


 1464              		.thumb_func
 1465              		.type	PWM_GetInterruptSource, %function
 1466              	PWM_GetInterruptSource:
 1467              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM.c **** 
1312:.\Generated_Source\PSoC4/PWM.c **** 
1313:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM.c **** *
1317:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM.c **** *
1320:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM.c **** *  None
1322:.\Generated_Source\PSoC4/PWM.c **** *
1323:.\Generated_Source\PSoC4/PWM.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM.c **** {
 1468              		.loc 1 1331 0
 1469              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1470              		.loc 1 1332 0
 1471 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/PWM.c **** }
 1472              		.loc 1 1333 0
 1473              		@ sp needed
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1474              		.loc 1 1332 0
 1475 0002 1868     		ldr	r0, [r3]
 1476              		.loc 1 1333 0
 1477 0004 7047     		bx	lr
 1478              	.L116:
 1479 0006 C046     		.align	2
 1480              	.L115:
 1481 0008 30010540 		.word	1074069808
 1482              		.cfi_endproc
 1483              	.LFE37:
 1484              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1485              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1486              		.align	1
 1487              		.global	PWM_ClearInterrupt
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	PWM_ClearInterrupt, %function
 1491              	PWM_ClearInterrupt:
 1492              	.LFB38:
1334:.\Generated_Source\PSoC4/PWM.c **** 
1335:.\Generated_Source\PSoC4/PWM.c **** 
1336:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 55


1338:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM.c **** *
1340:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM.c **** *
1343:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM.c **** *
1349:.\Generated_Source\PSoC4/PWM.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM.c **** *  None
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM.c **** {
 1493              		.loc 1 1354 0
 1494              		.cfi_startproc
 1495              	.LVL91:
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1496              		.loc 1 1355 0
 1497 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/PWM.c **** }
 1498              		.loc 1 1356 0
 1499              		@ sp needed
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1500              		.loc 1 1355 0
 1501 0002 1860     		str	r0, [r3]
 1502              		.loc 1 1356 0
 1503 0004 7047     		bx	lr
 1504              	.L119:
 1505 0006 C046     		.align	2
 1506              	.L118:
 1507 0008 30010540 		.word	1074069808
 1508              		.cfi_endproc
 1509              	.LFE38:
 1510              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1511              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1512              		.align	1
 1513              		.global	PWM_SetInterrupt
 1514              		.code	16
 1515              		.thumb_func
 1516              		.type	PWM_SetInterrupt, %function
 1517              	PWM_SetInterrupt:
 1518              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM.c **** 
1358:.\Generated_Source\PSoC4/PWM.c **** 
1359:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM.c **** *
1363:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM.c **** *
1366:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 56


1368:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM.c **** *
1372:.\Generated_Source\PSoC4/PWM.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM.c **** *  None
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM.c **** {
 1519              		.loc 1 1377 0
 1520              		.cfi_startproc
 1521              	.LVL92:
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1522              		.loc 1 1378 0
 1523 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/PWM.c **** }
 1524              		.loc 1 1379 0
 1525              		@ sp needed
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1526              		.loc 1 1378 0
 1527 0002 1860     		str	r0, [r3]
 1528              		.loc 1 1379 0
 1529 0004 7047     		bx	lr
 1530              	.L122:
 1531 0006 C046     		.align	2
 1532              	.L121:
 1533 0008 34010540 		.word	1074069812
 1534              		.cfi_endproc
 1535              	.LFE39:
 1536              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1537              		.global	PWM_initVar
 1538              		.bss
 1539              		.set	.LANCHOR0,. + 0
 1540              		.type	PWM_initVar, %object
 1541              		.size	PWM_initVar, 1
 1542              	PWM_initVar:
 1543 0000 00       		.space	1
 1544              		.text
 1545              	.Letext0:
 1546              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1547              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1548              		.section	.debug_info,"",%progbits
 1549              	.Ldebug_info0:
 1550 0000 45090000 		.4byte	0x945
 1551 0004 0400     		.2byte	0x4
 1552 0006 00000000 		.4byte	.Ldebug_abbrev0
 1553 000a 04       		.byte	0x4
 1554 000b 01       		.uleb128 0x1
 1555 000c 06000000 		.4byte	.LASF76
 1556 0010 01       		.byte	0x1
 1557 0011 77010000 		.4byte	.LASF77
 1558 0015 4A030000 		.4byte	.LASF78
 1559 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1560 001d 00000000 		.4byte	0
 1561 0021 00000000 		.4byte	.Ldebug_line0
 1562 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 57


 1563 0026 01       		.byte	0x1
 1564 0027 06       		.byte	0x6
 1565 0028 2F010000 		.4byte	.LASF0
 1566 002c 02       		.uleb128 0x2
 1567 002d 01       		.byte	0x1
 1568 002e 08       		.byte	0x8
 1569 002f B0030000 		.4byte	.LASF1
 1570 0033 02       		.uleb128 0x2
 1571 0034 02       		.byte	0x2
 1572 0035 05       		.byte	0x5
 1573 0036 E7030000 		.4byte	.LASF2
 1574 003a 02       		.uleb128 0x2
 1575 003b 02       		.byte	0x2
 1576 003c 07       		.byte	0x7
 1577 003d 97020000 		.4byte	.LASF3
 1578 0041 02       		.uleb128 0x2
 1579 0042 04       		.byte	0x4
 1580 0043 05       		.byte	0x5
 1581 0044 96010000 		.4byte	.LASF4
 1582 0048 02       		.uleb128 0x2
 1583 0049 04       		.byte	0x4
 1584 004a 07       		.byte	0x7
 1585 004b 65020000 		.4byte	.LASF5
 1586 004f 02       		.uleb128 0x2
 1587 0050 08       		.byte	0x8
 1588 0051 05       		.byte	0x5
 1589 0052 21010000 		.4byte	.LASF6
 1590 0056 02       		.uleb128 0x2
 1591 0057 08       		.byte	0x8
 1592 0058 07       		.byte	0x7
 1593 0059 CF000000 		.4byte	.LASF7
 1594 005d 03       		.uleb128 0x3
 1595 005e 04       		.byte	0x4
 1596 005f 05       		.byte	0x5
 1597 0060 696E7400 		.ascii	"int\000"
 1598 0064 02       		.uleb128 0x2
 1599 0065 04       		.byte	0x4
 1600 0066 07       		.byte	0x7
 1601 0067 3D020000 		.4byte	.LASF8
 1602 006b 04       		.uleb128 0x4
 1603 006c 9F010000 		.4byte	.LASF9
 1604 0070 02       		.byte	0x2
 1605 0071 A1       		.byte	0xa1
 1606 0072 2C000000 		.4byte	0x2c
 1607 0076 04       		.uleb128 0x4
 1608 0077 EC010000 		.4byte	.LASF10
 1609 007b 02       		.byte	0x2
 1610 007c A3       		.byte	0xa3
 1611 007d 48000000 		.4byte	0x48
 1612 0081 02       		.uleb128 0x2
 1613 0082 04       		.byte	0x4
 1614 0083 04       		.byte	0x4
 1615 0084 7E030000 		.4byte	.LASF11
 1616 0088 02       		.uleb128 0x2
 1617 0089 08       		.byte	0x8
 1618 008a 04       		.byte	0x4
 1619 008b A5010000 		.4byte	.LASF12
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 58


 1620 008f 02       		.uleb128 0x2
 1621 0090 01       		.byte	0x1
 1622 0091 08       		.byte	0x8
 1623 0092 3D040000 		.4byte	.LASF13
 1624 0096 05       		.uleb128 0x5
 1625 0097 E8020000 		.4byte	.LASF14
 1626 009b 02       		.byte	0x2
 1627 009c 4D01     		.2byte	0x14d
 1628 009e A2000000 		.4byte	0xa2
 1629 00a2 06       		.uleb128 0x6
 1630 00a3 76000000 		.4byte	0x76
 1631 00a7 02       		.uleb128 0x2
 1632 00a8 04       		.byte	0x4
 1633 00a9 07       		.byte	0x7
 1634 00aa 09030000 		.4byte	.LASF15
 1635 00ae 07       		.uleb128 0x7
 1636 00af 00010000 		.4byte	.LASF16
 1637 00b3 01       		.byte	0x1
 1638 00b4 6102     		.2byte	0x261
 1639 00b6 01       		.byte	0x1
 1640 00b7 C8000000 		.4byte	0xc8
 1641 00bb 08       		.uleb128 0x8
 1642 00bc 00000000 		.4byte	.LASF18
 1643 00c0 01       		.byte	0x1
 1644 00c1 6102     		.2byte	0x261
 1645 00c3 76000000 		.4byte	0x76
 1646 00c7 00       		.byte	0
 1647 00c8 07       		.uleb128 0x7
 1648 00c9 4F010000 		.4byte	.LASF17
 1649 00cd 01       		.byte	0x1
 1650 00ce 0405     		.2byte	0x504
 1651 00d0 01       		.byte	0x1
 1652 00d1 E2000000 		.4byte	0xe2
 1653 00d5 08       		.uleb128 0x8
 1654 00d6 0E040000 		.4byte	.LASF19
 1655 00da 01       		.byte	0x1
 1656 00db 0405     		.2byte	0x504
 1657 00dd 76000000 		.4byte	0x76
 1658 00e1 00       		.byte	0
 1659 00e2 07       		.uleb128 0x7
 1660 00e3 D8020000 		.4byte	.LASF20
 1661 00e7 01       		.byte	0x1
 1662 00e8 AF02     		.2byte	0x2af
 1663 00ea 01       		.byte	0x1
 1664 00eb FC000000 		.4byte	0xfc
 1665 00ef 08       		.uleb128 0x8
 1666 00f0 C8000000 		.4byte	.LASF21
 1667 00f4 01       		.byte	0x1
 1668 00f5 AF02     		.2byte	0x2af
 1669 00f7 76000000 		.4byte	0x76
 1670 00fb 00       		.byte	0
 1671 00fc 07       		.uleb128 0x7
 1672 00fd 24050000 		.4byte	.LASF22
 1673 0101 01       		.byte	0x1
 1674 0102 4303     		.2byte	0x343
 1675 0104 01       		.byte	0x1
 1676 0105 16010000 		.4byte	0x116
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 59


 1677 0109 08       		.uleb128 0x8
 1678 010a 21030000 		.4byte	.LASF23
 1679 010e 01       		.byte	0x1
 1680 010f 4303     		.2byte	0x343
 1681 0111 76000000 		.4byte	0x76
 1682 0115 00       		.byte	0
 1683 0116 09       		.uleb128 0x9
 1684 0117 BE030000 		.4byte	.LASF24
 1685 011b 01       		.byte	0x1
 1686 011c 26       		.byte	0x26
 1687 011d 00000000 		.4byte	.LFB0
 1688 0121 60000000 		.4byte	.LFE0-.LFB0
 1689 0125 01       		.uleb128 0x1
 1690 0126 9C       		.byte	0x9c
 1691 0127 93010000 		.4byte	0x193
 1692 012b 0A       		.uleb128 0xa
 1693 012c AE000000 		.4byte	0xae
 1694 0130 12000000 		.4byte	.LBB10
 1695 0134 00000000 		.4byte	.Ldebug_ranges0+0
 1696 0138 01       		.byte	0x1
 1697 0139 65       		.byte	0x65
 1698 013a 46010000 		.4byte	0x146
 1699 013e 0B       		.uleb128 0xb
 1700 013f BB000000 		.4byte	0xbb
 1701 0143 1027     		.2byte	0x2710
 1702 0145 00       		.byte	0
 1703 0146 0C       		.uleb128 0xc
 1704 0147 C8000000 		.4byte	0xc8
 1705 014b 24000000 		.4byte	.LBB14
 1706 014f 06000000 		.4byte	.LBE14-.LBB14
 1707 0153 01       		.byte	0x1
 1708 0154 77       		.byte	0x77
 1709 0155 60010000 		.4byte	0x160
 1710 0159 0D       		.uleb128 0xd
 1711 015a D5000000 		.4byte	0xd5
 1712 015e 00       		.byte	0
 1713 015f 00       		.byte	0
 1714 0160 0C       		.uleb128 0xc
 1715 0161 E2000000 		.4byte	0xe2
 1716 0165 30000000 		.4byte	.LBB16
 1717 0169 04000000 		.4byte	.LBE16-.LBB16
 1718 016d 01       		.byte	0x1
 1719 016e 92       		.byte	0x92
 1720 016f 7B010000 		.4byte	0x17b
 1721 0173 0B       		.uleb128 0xb
 1722 0174 EF000000 		.4byte	0xef
 1723 0178 1027     		.2byte	0x2710
 1724 017a 00       		.byte	0
 1725 017b 0E       		.uleb128 0xe
 1726 017c FC000000 		.4byte	0xfc
 1727 0180 34000000 		.4byte	.LBB18
 1728 0184 06000000 		.4byte	.LBE18-.LBB18
 1729 0188 01       		.byte	0x1
 1730 0189 93       		.byte	0x93
 1731 018a 0B       		.uleb128 0xb
 1732 018b 09010000 		.4byte	0x109
 1733 018f 8813     		.2byte	0x1388
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 60


 1734 0191 00       		.byte	0
 1735 0192 00       		.byte	0
 1736 0193 09       		.uleb128 0x9
 1737 0194 94000000 		.4byte	.LASF25
 1738 0198 01       		.byte	0x1
 1739 0199 B1       		.byte	0xb1
 1740 019a 00000000 		.4byte	.LFB1
 1741 019e 1C000000 		.4byte	.LFE1-.LFB1
 1742 01a2 01       		.uleb128 0x1
 1743 01a3 9C       		.byte	0x9c
 1744 01a4 CA010000 		.4byte	0x1ca
 1745 01a8 0F       		.uleb128 0xf
 1746 01a9 9E040000 		.4byte	.LASF28
 1747 01ad 01       		.byte	0x1
 1748 01ae B3       		.byte	0xb3
 1749 01af 6B000000 		.4byte	0x6b
 1750 01b3 00000000 		.4byte	.LLST0
 1751 01b7 10       		.uleb128 0x10
 1752 01b8 06000000 		.4byte	.LVL4
 1753 01bc 30090000 		.4byte	0x930
 1754 01c0 10       		.uleb128 0x10
 1755 01c1 14000000 		.4byte	.LVL5
 1756 01c5 3B090000 		.4byte	0x93b
 1757 01c9 00       		.byte	0
 1758 01ca 09       		.uleb128 0x9
 1759 01cb BB020000 		.4byte	.LASF26
 1760 01cf 01       		.byte	0x1
 1761 01d0 E0       		.byte	0xe0
 1762 01d1 00000000 		.4byte	.LFB2
 1763 01d5 1C000000 		.4byte	.LFE2-.LFB2
 1764 01d9 01       		.uleb128 0x1
 1765 01da 9C       		.byte	0x9c
 1766 01db F2010000 		.4byte	0x1f2
 1767 01df 10       		.uleb128 0x10
 1768 01e0 0E000000 		.4byte	.LVL6
 1769 01e4 16010000 		.4byte	0x116
 1770 01e8 10       		.uleb128 0x10
 1771 01e9 16000000 		.4byte	.LVL7
 1772 01ed 93010000 		.4byte	0x193
 1773 01f1 00       		.byte	0
 1774 01f2 09       		.uleb128 0x9
 1775 01f3 D2010000 		.4byte	.LASF27
 1776 01f7 01       		.byte	0x1
 1777 01f8 FA       		.byte	0xfa
 1778 01f9 00000000 		.4byte	.LFB3
 1779 01fd 1C000000 		.4byte	.LFE3-.LFB3
 1780 0201 01       		.uleb128 0x1
 1781 0202 9C       		.byte	0x9c
 1782 0203 29020000 		.4byte	0x229
 1783 0207 0F       		.uleb128 0xf
 1784 0208 9E040000 		.4byte	.LASF28
 1785 020c 01       		.byte	0x1
 1786 020d FC       		.byte	0xfc
 1787 020e 6B000000 		.4byte	0x6b
 1788 0212 13000000 		.4byte	.LLST1
 1789 0216 10       		.uleb128 0x10
 1790 0217 06000000 		.4byte	.LVL8
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 61


 1791 021b 30090000 		.4byte	0x930
 1792 021f 10       		.uleb128 0x10
 1793 0220 14000000 		.4byte	.LVL9
 1794 0224 3B090000 		.4byte	0x93b
 1795 0228 00       		.byte	0
 1796 0229 11       		.uleb128 0x11
 1797 022a CE040000 		.4byte	.LASF29
 1798 022e 01       		.byte	0x1
 1799 022f 1F01     		.2byte	0x11f
 1800 0231 00000000 		.4byte	.LFB4
 1801 0235 28000000 		.4byte	.LFE4-.LFB4
 1802 0239 01       		.uleb128 0x1
 1803 023a 9C       		.byte	0x9c
 1804 023b 72020000 		.4byte	0x272
 1805 023f 12       		.uleb128 0x12
 1806 0240 42040000 		.4byte	.LASF31
 1807 0244 01       		.byte	0x1
 1808 0245 1F01     		.2byte	0x11f
 1809 0247 76000000 		.4byte	0x76
 1810 024b 26000000 		.4byte	.LLST2
 1811 024f 13       		.uleb128 0x13
 1812 0250 9E040000 		.4byte	.LASF28
 1813 0254 01       		.byte	0x1
 1814 0255 2101     		.2byte	0x121
 1815 0257 6B000000 		.4byte	0x6b
 1816 025b 52000000 		.4byte	.LLST3
 1817 025f 10       		.uleb128 0x10
 1818 0260 08000000 		.4byte	.LVL11
 1819 0264 30090000 		.4byte	0x930
 1820 0268 10       		.uleb128 0x10
 1821 0269 1C000000 		.4byte	.LVL12
 1822 026d 3B090000 		.4byte	0x93b
 1823 0271 00       		.byte	0
 1824 0272 11       		.uleb128 0x11
 1825 0273 2F040000 		.4byte	.LASF30
 1826 0277 01       		.byte	0x1
 1827 0278 4001     		.2byte	0x140
 1828 027a 00000000 		.4byte	.LFB5
 1829 027e 28000000 		.4byte	.LFE5-.LFB5
 1830 0282 01       		.uleb128 0x1
 1831 0283 9C       		.byte	0x9c
 1832 0284 BB020000 		.4byte	0x2bb
 1833 0288 12       		.uleb128 0x12
 1834 0289 F9000000 		.4byte	.LASF32
 1835 028d 01       		.byte	0x1
 1836 028e 4001     		.2byte	0x140
 1837 0290 76000000 		.4byte	0x76
 1838 0294 65000000 		.4byte	.LLST4
 1839 0298 13       		.uleb128 0x13
 1840 0299 9E040000 		.4byte	.LASF28
 1841 029d 01       		.byte	0x1
 1842 029e 4201     		.2byte	0x142
 1843 02a0 6B000000 		.4byte	0x6b
 1844 02a4 91000000 		.4byte	.LLST5
 1845 02a8 10       		.uleb128 0x10
 1846 02a9 08000000 		.4byte	.LVL15
 1847 02ad 30090000 		.4byte	0x930
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 62


 1848 02b1 10       		.uleb128 0x10
 1849 02b2 1C000000 		.4byte	.LVL16
 1850 02b6 3B090000 		.4byte	0x93b
 1851 02ba 00       		.byte	0
 1852 02bb 11       		.uleb128 0x11
 1853 02bc AA020000 		.4byte	.LASF33
 1854 02c0 01       		.byte	0x1
 1855 02c1 6501     		.2byte	0x165
 1856 02c3 00000000 		.4byte	.LFB6
 1857 02c7 28000000 		.4byte	.LFE6-.LFB6
 1858 02cb 01       		.uleb128 0x1
 1859 02cc 9C       		.byte	0x9c
 1860 02cd 04030000 		.4byte	0x304
 1861 02d1 12       		.uleb128 0x12
 1862 02d2 84030000 		.4byte	.LASF34
 1863 02d6 01       		.byte	0x1
 1864 02d7 6501     		.2byte	0x165
 1865 02d9 76000000 		.4byte	0x76
 1866 02dd A4000000 		.4byte	.LLST6
 1867 02e1 13       		.uleb128 0x13
 1868 02e2 9E040000 		.4byte	.LASF28
 1869 02e6 01       		.byte	0x1
 1870 02e7 6701     		.2byte	0x167
 1871 02e9 6B000000 		.4byte	0x6b
 1872 02ed D0000000 		.4byte	.LLST7
 1873 02f1 10       		.uleb128 0x10
 1874 02f2 08000000 		.4byte	.LVL19
 1875 02f6 30090000 		.4byte	0x930
 1876 02fa 10       		.uleb128 0x10
 1877 02fb 1C000000 		.4byte	.LVL20
 1878 02ff 3B090000 		.4byte	0x93b
 1879 0303 00       		.byte	0
 1880 0304 11       		.uleb128 0x11
 1881 0305 29030000 		.4byte	.LASF35
 1882 0309 01       		.byte	0x1
 1883 030a 8501     		.2byte	0x185
 1884 030c 00000000 		.4byte	.LFB7
 1885 0310 2C000000 		.4byte	.LFE7-.LFB7
 1886 0314 01       		.uleb128 0x1
 1887 0315 9C       		.byte	0x9c
 1888 0316 4D030000 		.4byte	0x34d
 1889 031a 12       		.uleb128 0x12
 1890 031b C0040000 		.4byte	.LASF36
 1891 031f 01       		.byte	0x1
 1892 0320 8501     		.2byte	0x185
 1893 0322 76000000 		.4byte	0x76
 1894 0326 E3000000 		.4byte	.LLST8
 1895 032a 13       		.uleb128 0x13
 1896 032b 9E040000 		.4byte	.LASF28
 1897 032f 01       		.byte	0x1
 1898 0330 8701     		.2byte	0x187
 1899 0332 6B000000 		.4byte	0x6b
 1900 0336 0F010000 		.4byte	.LLST9
 1901 033a 10       		.uleb128 0x10
 1902 033b 08000000 		.4byte	.LVL23
 1903 033f 30090000 		.4byte	0x930
 1904 0343 10       		.uleb128 0x10
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 63


 1905 0344 22000000 		.4byte	.LVL24
 1906 0348 3B090000 		.4byte	0x93b
 1907 034c 00       		.byte	0
 1908 034d 11       		.uleb128 0x11
 1909 034e D8030000 		.4byte	.LASF37
 1910 0352 01       		.byte	0x1
 1911 0353 BB01     		.2byte	0x1bb
 1912 0355 00000000 		.4byte	.LFB8
 1913 0359 10000000 		.4byte	.LFE8-.LFB8
 1914 035d 01       		.uleb128 0x1
 1915 035e 9C       		.byte	0x9c
 1916 035f 74030000 		.4byte	0x374
 1917 0363 12       		.uleb128 0x12
 1918 0364 77020000 		.4byte	.LASF38
 1919 0368 01       		.byte	0x1
 1920 0369 BB01     		.2byte	0x1bb
 1921 036b 76000000 		.4byte	0x76
 1922 036f 22010000 		.4byte	.LLST10
 1923 0373 00       		.byte	0
 1924 0374 11       		.uleb128 0x11
 1925 0375 B5000000 		.4byte	.LASF39
 1926 0379 01       		.byte	0x1
 1927 037a DF01     		.2byte	0x1df
 1928 037c 00000000 		.4byte	.LFB9
 1929 0380 28000000 		.4byte	.LFE9-.LFB9
 1930 0384 01       		.uleb128 0x1
 1931 0385 9C       		.byte	0x9c
 1932 0386 BD030000 		.4byte	0x3bd
 1933 038a 12       		.uleb128 0x12
 1934 038b 12030000 		.4byte	.LASF40
 1935 038f 01       		.byte	0x1
 1936 0390 DF01     		.2byte	0x1df
 1937 0392 76000000 		.4byte	0x76
 1938 0396 43010000 		.4byte	.LLST11
 1939 039a 13       		.uleb128 0x13
 1940 039b 9E040000 		.4byte	.LASF28
 1941 039f 01       		.byte	0x1
 1942 03a0 E101     		.2byte	0x1e1
 1943 03a2 6B000000 		.4byte	0x6b
 1944 03a6 6F010000 		.4byte	.LLST12
 1945 03aa 10       		.uleb128 0x10
 1946 03ab 08000000 		.4byte	.LVL29
 1947 03af 30090000 		.4byte	0x930
 1948 03b3 10       		.uleb128 0x10
 1949 03b4 22000000 		.4byte	.LVL30
 1950 03b8 3B090000 		.4byte	0x93b
 1951 03bc 00       		.byte	0
 1952 03bd 11       		.uleb128 0x11
 1953 03be DA040000 		.4byte	.LASF41
 1954 03c2 01       		.byte	0x1
 1955 03c3 0102     		.2byte	0x201
 1956 03c5 00000000 		.4byte	.LFB10
 1957 03c9 28000000 		.4byte	.LFE10-.LFB10
 1958 03cd 01       		.uleb128 0x1
 1959 03ce 9C       		.byte	0x9c
 1960 03cf 06040000 		.4byte	0x406
 1961 03d3 12       		.uleb128 0x12
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 64


 1962 03d4 C7030000 		.4byte	.LASF42
 1963 03d8 01       		.byte	0x1
 1964 03d9 0102     		.2byte	0x201
 1965 03db 76000000 		.4byte	0x76
 1966 03df 82010000 		.4byte	.LLST13
 1967 03e3 13       		.uleb128 0x13
 1968 03e4 9E040000 		.4byte	.LASF28
 1969 03e8 01       		.byte	0x1
 1970 03e9 0302     		.2byte	0x203
 1971 03eb 6B000000 		.4byte	0x6b
 1972 03ef AE010000 		.4byte	.LLST14
 1973 03f3 10       		.uleb128 0x10
 1974 03f4 08000000 		.4byte	.LVL33
 1975 03f8 30090000 		.4byte	0x930
 1976 03fc 10       		.uleb128 0x10
 1977 03fd 22000000 		.4byte	.LVL34
 1978 0401 3B090000 		.4byte	0x93b
 1979 0405 00       		.byte	0
 1980 0406 11       		.uleb128 0x11
 1981 0407 4A020000 		.4byte	.LASF43
 1982 040b 01       		.byte	0x1
 1983 040c 2202     		.2byte	0x222
 1984 040e 00000000 		.4byte	.LFB11
 1985 0412 2C000000 		.4byte	.LFE11-.LFB11
 1986 0416 01       		.uleb128 0x1
 1987 0417 9C       		.byte	0x9c
 1988 0418 4F040000 		.4byte	0x44f
 1989 041c 12       		.uleb128 0x12
 1990 041d 24020000 		.4byte	.LASF44
 1991 0421 01       		.byte	0x1
 1992 0422 2202     		.2byte	0x222
 1993 0424 76000000 		.4byte	0x76
 1994 0428 C1010000 		.4byte	.LLST15
 1995 042c 13       		.uleb128 0x13
 1996 042d 9E040000 		.4byte	.LASF28
 1997 0431 01       		.byte	0x1
 1998 0432 2402     		.2byte	0x224
 1999 0434 6B000000 		.4byte	0x6b
 2000 0438 ED010000 		.4byte	.LLST16
 2001 043c 10       		.uleb128 0x10
 2002 043d 08000000 		.4byte	.LVL37
 2003 0441 30090000 		.4byte	0x930
 2004 0445 10       		.uleb128 0x10
 2005 0446 20000000 		.4byte	.LVL39
 2006 044a 3B090000 		.4byte	0x93b
 2007 044e 00       		.byte	0
 2008 044f 11       		.uleb128 0x11
 2009 0450 DB010000 		.4byte	.LASF45
 2010 0454 01       		.byte	0x1
 2011 0455 4302     		.2byte	0x243
 2012 0457 00000000 		.4byte	.LFB12
 2013 045b 28000000 		.4byte	.LFE12-.LFB12
 2014 045f 01       		.uleb128 0x1
 2015 0460 9C       		.byte	0x9c
 2016 0461 98040000 		.4byte	0x498
 2017 0465 12       		.uleb128 0x12
 2018 0466 10020000 		.4byte	.LASF46
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 65


 2019 046a 01       		.byte	0x1
 2020 046b 4302     		.2byte	0x243
 2021 046d 76000000 		.4byte	0x76
 2022 0471 00020000 		.4byte	.LLST17
 2023 0475 13       		.uleb128 0x13
 2024 0476 9E040000 		.4byte	.LASF28
 2025 047a 01       		.byte	0x1
 2026 047b 4502     		.2byte	0x245
 2027 047d 6B000000 		.4byte	0x6b
 2028 0481 2C020000 		.4byte	.LLST18
 2029 0485 10       		.uleb128 0x10
 2030 0486 08000000 		.4byte	.LVL41
 2031 048a 30090000 		.4byte	0x930
 2032 048e 10       		.uleb128 0x10
 2033 048f 1C000000 		.4byte	.LVL42
 2034 0493 3B090000 		.4byte	0x93b
 2035 0497 00       		.byte	0
 2036 0498 14       		.uleb128 0x14
 2037 0499 AE000000 		.4byte	0xae
 2038 049d 00000000 		.4byte	.LFB13
 2039 04a1 0C000000 		.4byte	.LFE13-.LFB13
 2040 04a5 01       		.uleb128 0x1
 2041 04a6 9C       		.byte	0x9c
 2042 04a7 B5040000 		.4byte	0x4b5
 2043 04ab 15       		.uleb128 0x15
 2044 04ac BB000000 		.4byte	0xbb
 2045 04b0 3F020000 		.4byte	.LLST19
 2046 04b4 00       		.byte	0
 2047 04b5 16       		.uleb128 0x16
 2048 04b6 11010000 		.4byte	.LASF49
 2049 04ba 01       		.byte	0x1
 2050 04bb 7502     		.2byte	0x275
 2051 04bd 76000000 		.4byte	0x76
 2052 04c1 00000000 		.4byte	.LFB14
 2053 04c5 0C000000 		.4byte	.LFE14-.LFB14
 2054 04c9 01       		.uleb128 0x1
 2055 04ca 9C       		.byte	0x9c
 2056 04cb 11       		.uleb128 0x11
 2057 04cc EF040000 		.4byte	.LASF47
 2058 04d0 01       		.byte	0x1
 2059 04d1 9202     		.2byte	0x292
 2060 04d3 00000000 		.4byte	.LFB15
 2061 04d7 28000000 		.4byte	.LFE15-.LFB15
 2062 04db 01       		.uleb128 0x1
 2063 04dc 9C       		.byte	0x9c
 2064 04dd 14050000 		.4byte	0x514
 2065 04e1 12       		.uleb128 0x12
 2066 04e2 6A040000 		.4byte	.LASF48
 2067 04e6 01       		.byte	0x1
 2068 04e7 9202     		.2byte	0x292
 2069 04e9 76000000 		.4byte	0x76
 2070 04ed 60020000 		.4byte	.LLST20
 2071 04f1 13       		.uleb128 0x13
 2072 04f2 9E040000 		.4byte	.LASF28
 2073 04f6 01       		.byte	0x1
 2074 04f7 9402     		.2byte	0x294
 2075 04f9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 66


 2076 04fd 8C020000 		.4byte	.LLST21
 2077 0501 10       		.uleb128 0x10
 2078 0502 08000000 		.4byte	.LVL47
 2079 0506 30090000 		.4byte	0x930
 2080 050a 10       		.uleb128 0x10
 2081 050b 1C000000 		.4byte	.LVL48
 2082 050f 3B090000 		.4byte	0x93b
 2083 0513 00       		.byte	0
 2084 0514 14       		.uleb128 0x14
 2085 0515 E2000000 		.4byte	0xe2
 2086 0519 00000000 		.4byte	.LFB16
 2087 051d 0C000000 		.4byte	.LFE16-.LFB16
 2088 0521 01       		.uleb128 0x1
 2089 0522 9C       		.byte	0x9c
 2090 0523 31050000 		.4byte	0x531
 2091 0527 15       		.uleb128 0x15
 2092 0528 EF000000 		.4byte	0xef
 2093 052c 9F020000 		.4byte	.LLST22
 2094 0530 00       		.byte	0
 2095 0531 16       		.uleb128 0x16
 2096 0532 FA020000 		.4byte	.LASF50
 2097 0536 01       		.byte	0x1
 2098 0537 C302     		.2byte	0x2c3
 2099 0539 76000000 		.4byte	0x76
 2100 053d 00000000 		.4byte	.LFB17
 2101 0541 0C000000 		.4byte	.LFE17-.LFB17
 2102 0545 01       		.uleb128 0x1
 2103 0546 9C       		.byte	0x9c
 2104 0547 11       		.uleb128 0x11
 2105 0548 BF010000 		.4byte	.LASF51
 2106 054c 01       		.byte	0x1
 2107 054d DD02     		.2byte	0x2dd
 2108 054f 00000000 		.4byte	.LFB18
 2109 0553 24000000 		.4byte	.LFE18-.LFB18
 2110 0557 01       		.uleb128 0x1
 2111 0558 9C       		.byte	0x9c
 2112 0559 90050000 		.4byte	0x590
 2113 055d 12       		.uleb128 0x12
 2114 055e 02050000 		.4byte	.LASF52
 2115 0562 01       		.byte	0x1
 2116 0563 DD02     		.2byte	0x2dd
 2117 0565 76000000 		.4byte	0x76
 2118 0569 C0020000 		.4byte	.LLST23
 2119 056d 13       		.uleb128 0x13
 2120 056e 9E040000 		.4byte	.LASF28
 2121 0572 01       		.byte	0x1
 2122 0573 DF02     		.2byte	0x2df
 2123 0575 6B000000 		.4byte	0x6b
 2124 0579 EC020000 		.4byte	.LLST24
 2125 057d 10       		.uleb128 0x10
 2126 057e 08000000 		.4byte	.LVL53
 2127 0582 30090000 		.4byte	0x930
 2128 0586 10       		.uleb128 0x10
 2129 0587 1E000000 		.4byte	.LVL54
 2130 058b 3B090000 		.4byte	0x93b
 2131 058f 00       		.byte	0
 2132 0590 11       		.uleb128 0x11
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 67


 2133 0591 1C040000 		.4byte	.LASF53
 2134 0595 01       		.byte	0x1
 2135 0596 F802     		.2byte	0x2f8
 2136 0598 00000000 		.4byte	.LFB19
 2137 059c 0C000000 		.4byte	.LFE19-.LFB19
 2138 05a0 01       		.uleb128 0x1
 2139 05a1 9C       		.byte	0x9c
 2140 05a2 B7050000 		.4byte	0x5b7
 2141 05a6 12       		.uleb128 0x12
 2142 05a7 81040000 		.4byte	.LASF54
 2143 05ab 01       		.byte	0x1
 2144 05ac F802     		.2byte	0x2f8
 2145 05ae 76000000 		.4byte	0x76
 2146 05b2 FF020000 		.4byte	.LLST25
 2147 05b6 00       		.byte	0
 2148 05b7 16       		.uleb128 0x16
 2149 05b8 38030000 		.4byte	.LASF55
 2150 05bc 01       		.byte	0x1
 2151 05bd 0C03     		.2byte	0x30c
 2152 05bf 76000000 		.4byte	0x76
 2153 05c3 00000000 		.4byte	.LFB20
 2154 05c7 0C000000 		.4byte	.LFE20-.LFB20
 2155 05cb 01       		.uleb128 0x1
 2156 05cc 9C       		.byte	0x9c
 2157 05cd 11       		.uleb128 0x11
 2158 05ce 9E030000 		.4byte	.LASF56
 2159 05d2 01       		.byte	0x1
 2160 05d3 2603     		.2byte	0x326
 2161 05d5 00000000 		.4byte	.LFB21
 2162 05d9 28000000 		.4byte	.LFE21-.LFB21
 2163 05dd 01       		.uleb128 0x1
 2164 05de 9C       		.byte	0x9c
 2165 05df 16060000 		.4byte	0x616
 2166 05e3 12       		.uleb128 0x12
 2167 05e4 02050000 		.4byte	.LASF52
 2168 05e8 01       		.byte	0x1
 2169 05e9 2603     		.2byte	0x326
 2170 05eb 76000000 		.4byte	0x76
 2171 05ef 20030000 		.4byte	.LLST26
 2172 05f3 13       		.uleb128 0x13
 2173 05f4 9E040000 		.4byte	.LASF28
 2174 05f8 01       		.byte	0x1
 2175 05f9 2803     		.2byte	0x328
 2176 05fb 6B000000 		.4byte	0x6b
 2177 05ff 4C030000 		.4byte	.LLST27
 2178 0603 10       		.uleb128 0x10
 2179 0604 08000000 		.4byte	.LVL59
 2180 0608 30090000 		.4byte	0x930
 2181 060c 10       		.uleb128 0x10
 2182 060d 22000000 		.4byte	.LVL60
 2183 0611 3B090000 		.4byte	0x93b
 2184 0615 00       		.byte	0
 2185 0616 14       		.uleb128 0x14
 2186 0617 FC000000 		.4byte	0xfc
 2187 061b 00000000 		.4byte	.LFB22
 2188 061f 0C000000 		.4byte	.LFE22-.LFB22
 2189 0623 01       		.uleb128 0x1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 68


 2190 0624 9C       		.byte	0x9c
 2191 0625 33060000 		.4byte	0x633
 2192 0629 15       		.uleb128 0x15
 2193 062a 09010000 		.4byte	0x109
 2194 062e 5F030000 		.4byte	.LLST28
 2195 0632 00       		.byte	0
 2196 0633 16       		.uleb128 0x16
 2197 0634 35050000 		.4byte	.LASF57
 2198 0638 01       		.byte	0x1
 2199 0639 6E03     		.2byte	0x36e
 2200 063b 76000000 		.4byte	0x76
 2201 063f 00000000 		.4byte	.LFB23
 2202 0643 0C000000 		.4byte	.LFE23-.LFB23
 2203 0647 01       		.uleb128 0x1
 2204 0648 9C       		.byte	0x9c
 2205 0649 11       		.uleb128 0x11
 2206 064a 3B010000 		.4byte	.LASF58
 2207 064e 01       		.byte	0x1
 2208 064f 9C03     		.2byte	0x39c
 2209 0651 00000000 		.4byte	.LFB24
 2210 0655 0C000000 		.4byte	.LFE24-.LFB24
 2211 0659 01       		.uleb128 0x1
 2212 065a 9C       		.byte	0x9c
 2213 065b 70060000 		.4byte	0x670
 2214 065f 12       		.uleb128 0x12
 2215 0660 76040000 		.4byte	.LASF59
 2216 0664 01       		.byte	0x1
 2217 0665 9C03     		.2byte	0x39c
 2218 0667 76000000 		.4byte	0x76
 2219 066b 80030000 		.4byte	.LLST29
 2220 066f 00       		.byte	0
 2221 0670 16       		.uleb128 0x16
 2222 0671 AC010000 		.4byte	.LASF60
 2223 0675 01       		.byte	0x1
 2224 0676 C503     		.2byte	0x3c5
 2225 0678 76000000 		.4byte	0x76
 2226 067c 00000000 		.4byte	.LFB25
 2227 0680 0C000000 		.4byte	.LFE25-.LFB25
 2228 0684 01       		.uleb128 0x1
 2229 0685 9C       		.byte	0x9c
 2230 0686 16       		.uleb128 0x16
 2231 0687 8E030000 		.4byte	.LASF61
 2232 068b 01       		.byte	0x1
 2233 068c F303     		.2byte	0x3f3
 2234 068e 76000000 		.4byte	0x76
 2235 0692 00000000 		.4byte	.LFB26
 2236 0696 0C000000 		.4byte	.LFE26-.LFB26
 2237 069a 01       		.uleb128 0x1
 2238 069b 9C       		.byte	0x9c
 2239 069c 16       		.uleb128 0x16
 2240 069d 8B040000 		.4byte	.LASF62
 2241 06a1 01       		.byte	0x1
 2242 06a2 0804     		.2byte	0x408
 2243 06a4 76000000 		.4byte	0x76
 2244 06a8 00000000 		.4byte	.LFB27
 2245 06ac 0C000000 		.4byte	.LFE27-.LFB27
 2246 06b0 01       		.uleb128 0x1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 69


 2247 06b1 9C       		.byte	0x9c
 2248 06b2 11       		.uleb128 0x11
 2249 06b3 E6000000 		.4byte	.LASF63
 2250 06b7 01       		.byte	0x1
 2251 06b8 2304     		.2byte	0x423
 2252 06ba 00000000 		.4byte	.LFB28
 2253 06be 24000000 		.4byte	.LFE28-.LFB28
 2254 06c2 01       		.uleb128 0x1
 2255 06c3 9C       		.byte	0x9c
 2256 06c4 FB060000 		.4byte	0x6fb
 2257 06c8 12       		.uleb128 0x12
 2258 06c9 04020000 		.4byte	.LASF64
 2259 06cd 01       		.byte	0x1
 2260 06ce 2304     		.2byte	0x423
 2261 06d0 76000000 		.4byte	0x76
 2262 06d4 A1030000 		.4byte	.LLST30
 2263 06d8 13       		.uleb128 0x13
 2264 06d9 9E040000 		.4byte	.LASF28
 2265 06dd 01       		.byte	0x1
 2266 06de 2504     		.2byte	0x425
 2267 06e0 6B000000 		.4byte	0x6b
 2268 06e4 CD030000 		.4byte	.LLST31
 2269 06e8 10       		.uleb128 0x10
 2270 06e9 08000000 		.4byte	.LVL67
 2271 06ed 30090000 		.4byte	0x930
 2272 06f1 10       		.uleb128 0x10
 2273 06f2 1C000000 		.4byte	.LVL68
 2274 06f6 3B090000 		.4byte	0x93b
 2275 06fa 00       		.byte	0
 2276 06fb 11       		.uleb128 0x11
 2277 06fc 58040000 		.4byte	.LASF65
 2278 0700 01       		.byte	0x1
 2279 0701 4404     		.2byte	0x444
 2280 0703 00000000 		.4byte	.LFB29
 2281 0707 24000000 		.4byte	.LFE29-.LFB29
 2282 070b 01       		.uleb128 0x1
 2283 070c 9C       		.byte	0x9c
 2284 070d 44070000 		.4byte	0x744
 2285 0711 12       		.uleb128 0x12
 2286 0712 04020000 		.4byte	.LASF64
 2287 0716 01       		.byte	0x1
 2288 0717 4404     		.2byte	0x444
 2289 0719 76000000 		.4byte	0x76
 2290 071d E0030000 		.4byte	.LLST32
 2291 0721 13       		.uleb128 0x13
 2292 0722 9E040000 		.4byte	.LASF28
 2293 0726 01       		.byte	0x1
 2294 0727 4604     		.2byte	0x446
 2295 0729 6B000000 		.4byte	0x6b
 2296 072d 0C040000 		.4byte	.LLST33
 2297 0731 10       		.uleb128 0x10
 2298 0732 08000000 		.4byte	.LVL71
 2299 0736 30090000 		.4byte	0x930
 2300 073a 10       		.uleb128 0x10
 2301 073b 1E000000 		.4byte	.LVL72
 2302 073f 3B090000 		.4byte	0x93b
 2303 0743 00       		.byte	0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 70


 2304 0744 11       		.uleb128 0x11
 2305 0745 F3010000 		.4byte	.LASF66
 2306 0749 01       		.byte	0x1
 2307 074a 6504     		.2byte	0x465
 2308 074c 00000000 		.4byte	.LFB30
 2309 0750 28000000 		.4byte	.LFE30-.LFB30
 2310 0754 01       		.uleb128 0x1
 2311 0755 9C       		.byte	0x9c
 2312 0756 8D070000 		.4byte	0x78d
 2313 075a 12       		.uleb128 0x12
 2314 075b 04020000 		.4byte	.LASF64
 2315 075f 01       		.byte	0x1
 2316 0760 6504     		.2byte	0x465
 2317 0762 76000000 		.4byte	0x76
 2318 0766 1F040000 		.4byte	.LLST34
 2319 076a 13       		.uleb128 0x13
 2320 076b 9E040000 		.4byte	.LASF28
 2321 076f 01       		.byte	0x1
 2322 0770 6704     		.2byte	0x467
 2323 0772 6B000000 		.4byte	0x6b
 2324 0776 4B040000 		.4byte	.LLST35
 2325 077a 10       		.uleb128 0x10
 2326 077b 08000000 		.4byte	.LVL75
 2327 077f 30090000 		.4byte	0x930
 2328 0783 10       		.uleb128 0x10
 2329 0784 1E000000 		.4byte	.LVL76
 2330 0788 3B090000 		.4byte	0x93b
 2331 078c 00       		.byte	0
 2332 078d 11       		.uleb128 0x11
 2333 078e 2D020000 		.4byte	.LASF67
 2334 0792 01       		.byte	0x1
 2335 0793 8504     		.2byte	0x485
 2336 0795 00000000 		.4byte	.LFB31
 2337 0799 24000000 		.4byte	.LFE31-.LFB31
 2338 079d 01       		.uleb128 0x1
 2339 079e 9C       		.byte	0x9c
 2340 079f D6070000 		.4byte	0x7d6
 2341 07a3 12       		.uleb128 0x12
 2342 07a4 04020000 		.4byte	.LASF64
 2343 07a8 01       		.byte	0x1
 2344 07a9 8504     		.2byte	0x485
 2345 07ab 76000000 		.4byte	0x76
 2346 07af 5E040000 		.4byte	.LLST36
 2347 07b3 13       		.uleb128 0x13
 2348 07b4 9E040000 		.4byte	.LASF28
 2349 07b8 01       		.byte	0x1
 2350 07b9 8704     		.2byte	0x487
 2351 07bb 6B000000 		.4byte	0x6b
 2352 07bf 8A040000 		.4byte	.LLST37
 2353 07c3 10       		.uleb128 0x10
 2354 07c4 08000000 		.4byte	.LVL79
 2355 07c8 30090000 		.4byte	0x930
 2356 07cc 10       		.uleb128 0x10
 2357 07cd 1E000000 		.4byte	.LVL80
 2358 07d1 3B090000 		.4byte	0x93b
 2359 07d5 00       		.byte	0
 2360 07d6 11       		.uleb128 0x11
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 71


 2361 07d7 AF040000 		.4byte	.LASF68
 2362 07db 01       		.byte	0x1
 2363 07dc A604     		.2byte	0x4a6
 2364 07de 00000000 		.4byte	.LFB32
 2365 07e2 24000000 		.4byte	.LFE32-.LFB32
 2366 07e6 01       		.uleb128 0x1
 2367 07e7 9C       		.byte	0x9c
 2368 07e8 1F080000 		.4byte	0x81f
 2369 07ec 12       		.uleb128 0x12
 2370 07ed 04020000 		.4byte	.LASF64
 2371 07f1 01       		.byte	0x1
 2372 07f2 A604     		.2byte	0x4a6
 2373 07f4 76000000 		.4byte	0x76
 2374 07f8 9D040000 		.4byte	.LLST38
 2375 07fc 13       		.uleb128 0x13
 2376 07fd 9E040000 		.4byte	.LASF28
 2377 0801 01       		.byte	0x1
 2378 0802 A804     		.2byte	0x4a8
 2379 0804 6B000000 		.4byte	0x6b
 2380 0808 C9040000 		.4byte	.LLST39
 2381 080c 10       		.uleb128 0x10
 2382 080d 08000000 		.4byte	.LVL83
 2383 0811 30090000 		.4byte	0x930
 2384 0815 10       		.uleb128 0x10
 2385 0816 1E000000 		.4byte	.LVL84
 2386 081a 3B090000 		.4byte	0x93b
 2387 081e 00       		.byte	0
 2388 081f 11       		.uleb128 0x11
 2389 0820 C5020000 		.4byte	.LASF69
 2390 0824 01       		.byte	0x1
 2391 0825 CE04     		.2byte	0x4ce
 2392 0827 00000000 		.4byte	.LFB33
 2393 082b 1C000000 		.4byte	.LFE33-.LFB33
 2394 082f 01       		.uleb128 0x1
 2395 0830 9C       		.byte	0x9c
 2396 0831 78080000 		.4byte	0x878
 2397 0835 12       		.uleb128 0x12
 2398 0836 10020000 		.4byte	.LASF46
 2399 083a 01       		.byte	0x1
 2400 083b CE04     		.2byte	0x4ce
 2401 083d 76000000 		.4byte	0x76
 2402 0841 DC040000 		.4byte	.LLST40
 2403 0845 12       		.uleb128 0x12
 2404 0846 5D020000 		.4byte	.LASF70
 2405 084a 01       		.byte	0x1
 2406 084b CE04     		.2byte	0x4ce
 2407 084d 76000000 		.4byte	0x76
 2408 0851 FD040000 		.4byte	.LLST41
 2409 0855 13       		.uleb128 0x13
 2410 0856 9E040000 		.4byte	.LASF28
 2411 085a 01       		.byte	0x1
 2412 085b D004     		.2byte	0x4d0
 2413 085d 6B000000 		.4byte	0x6b
 2414 0861 29050000 		.4byte	.LLST42
 2415 0865 10       		.uleb128 0x10
 2416 0866 0C000000 		.4byte	.LVL87
 2417 086a 30090000 		.4byte	0x930
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 72


 2418 086e 10       		.uleb128 0x10
 2419 086f 14000000 		.4byte	.LVL88
 2420 0873 3B090000 		.4byte	0x93b
 2421 0877 00       		.byte	0
 2422 0878 16       		.uleb128 0x16
 2423 0879 15020000 		.4byte	.LASF71
 2424 087d 01       		.byte	0x1
 2425 087e EB04     		.2byte	0x4eb
 2426 0880 76000000 		.4byte	0x76
 2427 0884 00000000 		.4byte	.LFB34
 2428 0888 14000000 		.4byte	.LFE34-.LFB34
 2429 088c 01       		.uleb128 0x1
 2430 088d 9C       		.byte	0x9c
 2431 088e 14       		.uleb128 0x14
 2432 088f C8000000 		.4byte	0xc8
 2433 0893 00000000 		.4byte	.LFB35
 2434 0897 0C000000 		.4byte	.LFE35-.LFB35
 2435 089b 01       		.uleb128 0x1
 2436 089c 9C       		.byte	0x9c
 2437 089d A9080000 		.4byte	0x8a9
 2438 08a1 17       		.uleb128 0x17
 2439 08a2 D5000000 		.4byte	0xd5
 2440 08a6 01       		.uleb128 0x1
 2441 08a7 50       		.byte	0x50
 2442 08a8 00       		.byte	0
 2443 08a9 16       		.uleb128 0x16
 2444 08aa F1030000 		.4byte	.LASF72
 2445 08ae 01       		.byte	0x1
 2446 08af 1B05     		.2byte	0x51b
 2447 08b1 76000000 		.4byte	0x76
 2448 08b5 00000000 		.4byte	.LFB36
 2449 08b9 0C000000 		.4byte	.LFE36-.LFB36
 2450 08bd 01       		.uleb128 0x1
 2451 08be 9C       		.byte	0x9c
 2452 08bf 16       		.uleb128 0x16
 2453 08c0 0D050000 		.4byte	.LASF73
 2454 08c4 01       		.byte	0x1
 2455 08c5 3205     		.2byte	0x532
 2456 08c7 76000000 		.4byte	0x76
 2457 08cb 00000000 		.4byte	.LFB37
 2458 08cf 0C000000 		.4byte	.LFE37-.LFB37
 2459 08d3 01       		.uleb128 0x1
 2460 08d4 9C       		.byte	0x9c
 2461 08d5 11       		.uleb128 0x11
 2462 08d6 64010000 		.4byte	.LASF74
 2463 08da 01       		.byte	0x1
 2464 08db 4905     		.2byte	0x549
 2465 08dd 00000000 		.4byte	.LFB38
 2466 08e1 0C000000 		.4byte	.LFE38-.LFB38
 2467 08e5 01       		.uleb128 0x1
 2468 08e6 9C       		.byte	0x9c
 2469 08e7 FA080000 		.4byte	0x8fa
 2470 08eb 18       		.uleb128 0x18
 2471 08ec 0E040000 		.4byte	.LASF19
 2472 08f0 01       		.byte	0x1
 2473 08f1 4905     		.2byte	0x549
 2474 08f3 76000000 		.4byte	0x76
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 73


 2475 08f7 01       		.uleb128 0x1
 2476 08f8 50       		.byte	0x50
 2477 08f9 00       		.byte	0
 2478 08fa 11       		.uleb128 0x11
 2479 08fb 47040000 		.4byte	.LASF75
 2480 08ff 01       		.byte	0x1
 2481 0900 6005     		.2byte	0x560
 2482 0902 00000000 		.4byte	.LFB39
 2483 0906 0C000000 		.4byte	.LFE39-.LFB39
 2484 090a 01       		.uleb128 0x1
 2485 090b 9C       		.byte	0x9c
 2486 090c 1F090000 		.4byte	0x91f
 2487 0910 18       		.uleb128 0x18
 2488 0911 0E040000 		.4byte	.LASF19
 2489 0915 01       		.byte	0x1
 2490 0916 6005     		.2byte	0x560
 2491 0918 76000000 		.4byte	0x76
 2492 091c 01       		.uleb128 0x1
 2493 091d 50       		.byte	0x50
 2494 091e 00       		.byte	0
 2495 091f 19       		.uleb128 0x19
 2496 0920 EE020000 		.4byte	.LASF79
 2497 0924 01       		.byte	0x1
 2498 0925 15       		.byte	0x15
 2499 0926 6B000000 		.4byte	0x6b
 2500 092a 05       		.uleb128 0x5
 2501 092b 03       		.byte	0x3
 2502 092c 00000000 		.4byte	PWM_initVar
 2503 0930 1A       		.uleb128 0x1a
 2504 0931 80020000 		.4byte	.LASF80
 2505 0935 03       		.byte	0x3
 2506 0936 82       		.byte	0x82
 2507 0937 6B000000 		.4byte	0x6b
 2508 093b 1B       		.uleb128 0x1b
 2509 093c 9F000000 		.4byte	.LASF81
 2510 0940 03       		.byte	0x3
 2511 0941 83       		.byte	0x83
 2512 0942 1C       		.uleb128 0x1c
 2513 0943 6B000000 		.4byte	0x6b
 2514 0947 00       		.byte	0
 2515 0948 00       		.byte	0
 2516              		.section	.debug_abbrev,"",%progbits
 2517              	.Ldebug_abbrev0:
 2518 0000 01       		.uleb128 0x1
 2519 0001 11       		.uleb128 0x11
 2520 0002 01       		.byte	0x1
 2521 0003 25       		.uleb128 0x25
 2522 0004 0E       		.uleb128 0xe
 2523 0005 13       		.uleb128 0x13
 2524 0006 0B       		.uleb128 0xb
 2525 0007 03       		.uleb128 0x3
 2526 0008 0E       		.uleb128 0xe
 2527 0009 1B       		.uleb128 0x1b
 2528 000a 0E       		.uleb128 0xe
 2529 000b 55       		.uleb128 0x55
 2530 000c 17       		.uleb128 0x17
 2531 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 74


 2532 000e 01       		.uleb128 0x1
 2533 000f 10       		.uleb128 0x10
 2534 0010 17       		.uleb128 0x17
 2535 0011 00       		.byte	0
 2536 0012 00       		.byte	0
 2537 0013 02       		.uleb128 0x2
 2538 0014 24       		.uleb128 0x24
 2539 0015 00       		.byte	0
 2540 0016 0B       		.uleb128 0xb
 2541 0017 0B       		.uleb128 0xb
 2542 0018 3E       		.uleb128 0x3e
 2543 0019 0B       		.uleb128 0xb
 2544 001a 03       		.uleb128 0x3
 2545 001b 0E       		.uleb128 0xe
 2546 001c 00       		.byte	0
 2547 001d 00       		.byte	0
 2548 001e 03       		.uleb128 0x3
 2549 001f 24       		.uleb128 0x24
 2550 0020 00       		.byte	0
 2551 0021 0B       		.uleb128 0xb
 2552 0022 0B       		.uleb128 0xb
 2553 0023 3E       		.uleb128 0x3e
 2554 0024 0B       		.uleb128 0xb
 2555 0025 03       		.uleb128 0x3
 2556 0026 08       		.uleb128 0x8
 2557 0027 00       		.byte	0
 2558 0028 00       		.byte	0
 2559 0029 04       		.uleb128 0x4
 2560 002a 16       		.uleb128 0x16
 2561 002b 00       		.byte	0
 2562 002c 03       		.uleb128 0x3
 2563 002d 0E       		.uleb128 0xe
 2564 002e 3A       		.uleb128 0x3a
 2565 002f 0B       		.uleb128 0xb
 2566 0030 3B       		.uleb128 0x3b
 2567 0031 0B       		.uleb128 0xb
 2568 0032 49       		.uleb128 0x49
 2569 0033 13       		.uleb128 0x13
 2570 0034 00       		.byte	0
 2571 0035 00       		.byte	0
 2572 0036 05       		.uleb128 0x5
 2573 0037 16       		.uleb128 0x16
 2574 0038 00       		.byte	0
 2575 0039 03       		.uleb128 0x3
 2576 003a 0E       		.uleb128 0xe
 2577 003b 3A       		.uleb128 0x3a
 2578 003c 0B       		.uleb128 0xb
 2579 003d 3B       		.uleb128 0x3b
 2580 003e 05       		.uleb128 0x5
 2581 003f 49       		.uleb128 0x49
 2582 0040 13       		.uleb128 0x13
 2583 0041 00       		.byte	0
 2584 0042 00       		.byte	0
 2585 0043 06       		.uleb128 0x6
 2586 0044 35       		.uleb128 0x35
 2587 0045 00       		.byte	0
 2588 0046 49       		.uleb128 0x49
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 75


 2589 0047 13       		.uleb128 0x13
 2590 0048 00       		.byte	0
 2591 0049 00       		.byte	0
 2592 004a 07       		.uleb128 0x7
 2593 004b 2E       		.uleb128 0x2e
 2594 004c 01       		.byte	0x1
 2595 004d 3F       		.uleb128 0x3f
 2596 004e 19       		.uleb128 0x19
 2597 004f 03       		.uleb128 0x3
 2598 0050 0E       		.uleb128 0xe
 2599 0051 3A       		.uleb128 0x3a
 2600 0052 0B       		.uleb128 0xb
 2601 0053 3B       		.uleb128 0x3b
 2602 0054 05       		.uleb128 0x5
 2603 0055 27       		.uleb128 0x27
 2604 0056 19       		.uleb128 0x19
 2605 0057 20       		.uleb128 0x20
 2606 0058 0B       		.uleb128 0xb
 2607 0059 01       		.uleb128 0x1
 2608 005a 13       		.uleb128 0x13
 2609 005b 00       		.byte	0
 2610 005c 00       		.byte	0
 2611 005d 08       		.uleb128 0x8
 2612 005e 05       		.uleb128 0x5
 2613 005f 00       		.byte	0
 2614 0060 03       		.uleb128 0x3
 2615 0061 0E       		.uleb128 0xe
 2616 0062 3A       		.uleb128 0x3a
 2617 0063 0B       		.uleb128 0xb
 2618 0064 3B       		.uleb128 0x3b
 2619 0065 05       		.uleb128 0x5
 2620 0066 49       		.uleb128 0x49
 2621 0067 13       		.uleb128 0x13
 2622 0068 00       		.byte	0
 2623 0069 00       		.byte	0
 2624 006a 09       		.uleb128 0x9
 2625 006b 2E       		.uleb128 0x2e
 2626 006c 01       		.byte	0x1
 2627 006d 3F       		.uleb128 0x3f
 2628 006e 19       		.uleb128 0x19
 2629 006f 03       		.uleb128 0x3
 2630 0070 0E       		.uleb128 0xe
 2631 0071 3A       		.uleb128 0x3a
 2632 0072 0B       		.uleb128 0xb
 2633 0073 3B       		.uleb128 0x3b
 2634 0074 0B       		.uleb128 0xb
 2635 0075 27       		.uleb128 0x27
 2636 0076 19       		.uleb128 0x19
 2637 0077 11       		.uleb128 0x11
 2638 0078 01       		.uleb128 0x1
 2639 0079 12       		.uleb128 0x12
 2640 007a 06       		.uleb128 0x6
 2641 007b 40       		.uleb128 0x40
 2642 007c 18       		.uleb128 0x18
 2643 007d 9742     		.uleb128 0x2117
 2644 007f 19       		.uleb128 0x19
 2645 0080 01       		.uleb128 0x1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 76


 2646 0081 13       		.uleb128 0x13
 2647 0082 00       		.byte	0
 2648 0083 00       		.byte	0
 2649 0084 0A       		.uleb128 0xa
 2650 0085 1D       		.uleb128 0x1d
 2651 0086 01       		.byte	0x1
 2652 0087 31       		.uleb128 0x31
 2653 0088 13       		.uleb128 0x13
 2654 0089 52       		.uleb128 0x52
 2655 008a 01       		.uleb128 0x1
 2656 008b 55       		.uleb128 0x55
 2657 008c 17       		.uleb128 0x17
 2658 008d 58       		.uleb128 0x58
 2659 008e 0B       		.uleb128 0xb
 2660 008f 59       		.uleb128 0x59
 2661 0090 0B       		.uleb128 0xb
 2662 0091 01       		.uleb128 0x1
 2663 0092 13       		.uleb128 0x13
 2664 0093 00       		.byte	0
 2665 0094 00       		.byte	0
 2666 0095 0B       		.uleb128 0xb
 2667 0096 05       		.uleb128 0x5
 2668 0097 00       		.byte	0
 2669 0098 31       		.uleb128 0x31
 2670 0099 13       		.uleb128 0x13
 2671 009a 1C       		.uleb128 0x1c
 2672 009b 05       		.uleb128 0x5
 2673 009c 00       		.byte	0
 2674 009d 00       		.byte	0
 2675 009e 0C       		.uleb128 0xc
 2676 009f 1D       		.uleb128 0x1d
 2677 00a0 01       		.byte	0x1
 2678 00a1 31       		.uleb128 0x31
 2679 00a2 13       		.uleb128 0x13
 2680 00a3 11       		.uleb128 0x11
 2681 00a4 01       		.uleb128 0x1
 2682 00a5 12       		.uleb128 0x12
 2683 00a6 06       		.uleb128 0x6
 2684 00a7 58       		.uleb128 0x58
 2685 00a8 0B       		.uleb128 0xb
 2686 00a9 59       		.uleb128 0x59
 2687 00aa 0B       		.uleb128 0xb
 2688 00ab 01       		.uleb128 0x1
 2689 00ac 13       		.uleb128 0x13
 2690 00ad 00       		.byte	0
 2691 00ae 00       		.byte	0
 2692 00af 0D       		.uleb128 0xd
 2693 00b0 05       		.uleb128 0x5
 2694 00b1 00       		.byte	0
 2695 00b2 31       		.uleb128 0x31
 2696 00b3 13       		.uleb128 0x13
 2697 00b4 1C       		.uleb128 0x1c
 2698 00b5 0B       		.uleb128 0xb
 2699 00b6 00       		.byte	0
 2700 00b7 00       		.byte	0
 2701 00b8 0E       		.uleb128 0xe
 2702 00b9 1D       		.uleb128 0x1d
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 77


 2703 00ba 01       		.byte	0x1
 2704 00bb 31       		.uleb128 0x31
 2705 00bc 13       		.uleb128 0x13
 2706 00bd 11       		.uleb128 0x11
 2707 00be 01       		.uleb128 0x1
 2708 00bf 12       		.uleb128 0x12
 2709 00c0 06       		.uleb128 0x6
 2710 00c1 58       		.uleb128 0x58
 2711 00c2 0B       		.uleb128 0xb
 2712 00c3 59       		.uleb128 0x59
 2713 00c4 0B       		.uleb128 0xb
 2714 00c5 00       		.byte	0
 2715 00c6 00       		.byte	0
 2716 00c7 0F       		.uleb128 0xf
 2717 00c8 34       		.uleb128 0x34
 2718 00c9 00       		.byte	0
 2719 00ca 03       		.uleb128 0x3
 2720 00cb 0E       		.uleb128 0xe
 2721 00cc 3A       		.uleb128 0x3a
 2722 00cd 0B       		.uleb128 0xb
 2723 00ce 3B       		.uleb128 0x3b
 2724 00cf 0B       		.uleb128 0xb
 2725 00d0 49       		.uleb128 0x49
 2726 00d1 13       		.uleb128 0x13
 2727 00d2 02       		.uleb128 0x2
 2728 00d3 17       		.uleb128 0x17
 2729 00d4 00       		.byte	0
 2730 00d5 00       		.byte	0
 2731 00d6 10       		.uleb128 0x10
 2732 00d7 898201   		.uleb128 0x4109
 2733 00da 00       		.byte	0
 2734 00db 11       		.uleb128 0x11
 2735 00dc 01       		.uleb128 0x1
 2736 00dd 31       		.uleb128 0x31
 2737 00de 13       		.uleb128 0x13
 2738 00df 00       		.byte	0
 2739 00e0 00       		.byte	0
 2740 00e1 11       		.uleb128 0x11
 2741 00e2 2E       		.uleb128 0x2e
 2742 00e3 01       		.byte	0x1
 2743 00e4 3F       		.uleb128 0x3f
 2744 00e5 19       		.uleb128 0x19
 2745 00e6 03       		.uleb128 0x3
 2746 00e7 0E       		.uleb128 0xe
 2747 00e8 3A       		.uleb128 0x3a
 2748 00e9 0B       		.uleb128 0xb
 2749 00ea 3B       		.uleb128 0x3b
 2750 00eb 05       		.uleb128 0x5
 2751 00ec 27       		.uleb128 0x27
 2752 00ed 19       		.uleb128 0x19
 2753 00ee 11       		.uleb128 0x11
 2754 00ef 01       		.uleb128 0x1
 2755 00f0 12       		.uleb128 0x12
 2756 00f1 06       		.uleb128 0x6
 2757 00f2 40       		.uleb128 0x40
 2758 00f3 18       		.uleb128 0x18
 2759 00f4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 78


 2760 00f6 19       		.uleb128 0x19
 2761 00f7 01       		.uleb128 0x1
 2762 00f8 13       		.uleb128 0x13
 2763 00f9 00       		.byte	0
 2764 00fa 00       		.byte	0
 2765 00fb 12       		.uleb128 0x12
 2766 00fc 05       		.uleb128 0x5
 2767 00fd 00       		.byte	0
 2768 00fe 03       		.uleb128 0x3
 2769 00ff 0E       		.uleb128 0xe
 2770 0100 3A       		.uleb128 0x3a
 2771 0101 0B       		.uleb128 0xb
 2772 0102 3B       		.uleb128 0x3b
 2773 0103 05       		.uleb128 0x5
 2774 0104 49       		.uleb128 0x49
 2775 0105 13       		.uleb128 0x13
 2776 0106 02       		.uleb128 0x2
 2777 0107 17       		.uleb128 0x17
 2778 0108 00       		.byte	0
 2779 0109 00       		.byte	0
 2780 010a 13       		.uleb128 0x13
 2781 010b 34       		.uleb128 0x34
 2782 010c 00       		.byte	0
 2783 010d 03       		.uleb128 0x3
 2784 010e 0E       		.uleb128 0xe
 2785 010f 3A       		.uleb128 0x3a
 2786 0110 0B       		.uleb128 0xb
 2787 0111 3B       		.uleb128 0x3b
 2788 0112 05       		.uleb128 0x5
 2789 0113 49       		.uleb128 0x49
 2790 0114 13       		.uleb128 0x13
 2791 0115 02       		.uleb128 0x2
 2792 0116 17       		.uleb128 0x17
 2793 0117 00       		.byte	0
 2794 0118 00       		.byte	0
 2795 0119 14       		.uleb128 0x14
 2796 011a 2E       		.uleb128 0x2e
 2797 011b 01       		.byte	0x1
 2798 011c 31       		.uleb128 0x31
 2799 011d 13       		.uleb128 0x13
 2800 011e 11       		.uleb128 0x11
 2801 011f 01       		.uleb128 0x1
 2802 0120 12       		.uleb128 0x12
 2803 0121 06       		.uleb128 0x6
 2804 0122 40       		.uleb128 0x40
 2805 0123 18       		.uleb128 0x18
 2806 0124 9742     		.uleb128 0x2117
 2807 0126 19       		.uleb128 0x19
 2808 0127 01       		.uleb128 0x1
 2809 0128 13       		.uleb128 0x13
 2810 0129 00       		.byte	0
 2811 012a 00       		.byte	0
 2812 012b 15       		.uleb128 0x15
 2813 012c 05       		.uleb128 0x5
 2814 012d 00       		.byte	0
 2815 012e 31       		.uleb128 0x31
 2816 012f 13       		.uleb128 0x13
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 79


 2817 0130 02       		.uleb128 0x2
 2818 0131 17       		.uleb128 0x17
 2819 0132 00       		.byte	0
 2820 0133 00       		.byte	0
 2821 0134 16       		.uleb128 0x16
 2822 0135 2E       		.uleb128 0x2e
 2823 0136 00       		.byte	0
 2824 0137 3F       		.uleb128 0x3f
 2825 0138 19       		.uleb128 0x19
 2826 0139 03       		.uleb128 0x3
 2827 013a 0E       		.uleb128 0xe
 2828 013b 3A       		.uleb128 0x3a
 2829 013c 0B       		.uleb128 0xb
 2830 013d 3B       		.uleb128 0x3b
 2831 013e 05       		.uleb128 0x5
 2832 013f 27       		.uleb128 0x27
 2833 0140 19       		.uleb128 0x19
 2834 0141 49       		.uleb128 0x49
 2835 0142 13       		.uleb128 0x13
 2836 0143 11       		.uleb128 0x11
 2837 0144 01       		.uleb128 0x1
 2838 0145 12       		.uleb128 0x12
 2839 0146 06       		.uleb128 0x6
 2840 0147 40       		.uleb128 0x40
 2841 0148 18       		.uleb128 0x18
 2842 0149 9742     		.uleb128 0x2117
 2843 014b 19       		.uleb128 0x19
 2844 014c 00       		.byte	0
 2845 014d 00       		.byte	0
 2846 014e 17       		.uleb128 0x17
 2847 014f 05       		.uleb128 0x5
 2848 0150 00       		.byte	0
 2849 0151 31       		.uleb128 0x31
 2850 0152 13       		.uleb128 0x13
 2851 0153 02       		.uleb128 0x2
 2852 0154 18       		.uleb128 0x18
 2853 0155 00       		.byte	0
 2854 0156 00       		.byte	0
 2855 0157 18       		.uleb128 0x18
 2856 0158 05       		.uleb128 0x5
 2857 0159 00       		.byte	0
 2858 015a 03       		.uleb128 0x3
 2859 015b 0E       		.uleb128 0xe
 2860 015c 3A       		.uleb128 0x3a
 2861 015d 0B       		.uleb128 0xb
 2862 015e 3B       		.uleb128 0x3b
 2863 015f 05       		.uleb128 0x5
 2864 0160 49       		.uleb128 0x49
 2865 0161 13       		.uleb128 0x13
 2866 0162 02       		.uleb128 0x2
 2867 0163 18       		.uleb128 0x18
 2868 0164 00       		.byte	0
 2869 0165 00       		.byte	0
 2870 0166 19       		.uleb128 0x19
 2871 0167 34       		.uleb128 0x34
 2872 0168 00       		.byte	0
 2873 0169 03       		.uleb128 0x3
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 80


 2874 016a 0E       		.uleb128 0xe
 2875 016b 3A       		.uleb128 0x3a
 2876 016c 0B       		.uleb128 0xb
 2877 016d 3B       		.uleb128 0x3b
 2878 016e 0B       		.uleb128 0xb
 2879 016f 49       		.uleb128 0x49
 2880 0170 13       		.uleb128 0x13
 2881 0171 3F       		.uleb128 0x3f
 2882 0172 19       		.uleb128 0x19
 2883 0173 02       		.uleb128 0x2
 2884 0174 18       		.uleb128 0x18
 2885 0175 00       		.byte	0
 2886 0176 00       		.byte	0
 2887 0177 1A       		.uleb128 0x1a
 2888 0178 2E       		.uleb128 0x2e
 2889 0179 00       		.byte	0
 2890 017a 3F       		.uleb128 0x3f
 2891 017b 19       		.uleb128 0x19
 2892 017c 03       		.uleb128 0x3
 2893 017d 0E       		.uleb128 0xe
 2894 017e 3A       		.uleb128 0x3a
 2895 017f 0B       		.uleb128 0xb
 2896 0180 3B       		.uleb128 0x3b
 2897 0181 0B       		.uleb128 0xb
 2898 0182 27       		.uleb128 0x27
 2899 0183 19       		.uleb128 0x19
 2900 0184 49       		.uleb128 0x49
 2901 0185 13       		.uleb128 0x13
 2902 0186 3C       		.uleb128 0x3c
 2903 0187 19       		.uleb128 0x19
 2904 0188 00       		.byte	0
 2905 0189 00       		.byte	0
 2906 018a 1B       		.uleb128 0x1b
 2907 018b 2E       		.uleb128 0x2e
 2908 018c 01       		.byte	0x1
 2909 018d 3F       		.uleb128 0x3f
 2910 018e 19       		.uleb128 0x19
 2911 018f 03       		.uleb128 0x3
 2912 0190 0E       		.uleb128 0xe
 2913 0191 3A       		.uleb128 0x3a
 2914 0192 0B       		.uleb128 0xb
 2915 0193 3B       		.uleb128 0x3b
 2916 0194 0B       		.uleb128 0xb
 2917 0195 27       		.uleb128 0x27
 2918 0196 19       		.uleb128 0x19
 2919 0197 3C       		.uleb128 0x3c
 2920 0198 19       		.uleb128 0x19
 2921 0199 00       		.byte	0
 2922 019a 00       		.byte	0
 2923 019b 1C       		.uleb128 0x1c
 2924 019c 05       		.uleb128 0x5
 2925 019d 00       		.byte	0
 2926 019e 49       		.uleb128 0x49
 2927 019f 13       		.uleb128 0x13
 2928 01a0 00       		.byte	0
 2929 01a1 00       		.byte	0
 2930 01a2 00       		.byte	0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 81


 2931              		.section	.debug_loc,"",%progbits
 2932              	.Ldebug_loc0:
 2933              	.LLST0:
 2934 0000 06000000 		.4byte	.LVL4
 2935 0004 13000000 		.4byte	.LVL5-1
 2936 0008 0100     		.2byte	0x1
 2937 000a 50       		.byte	0x50
 2938 000b 00000000 		.4byte	0
 2939 000f 00000000 		.4byte	0
 2940              	.LLST1:
 2941 0013 06000000 		.4byte	.LVL8
 2942 0017 13000000 		.4byte	.LVL9-1
 2943 001b 0100     		.2byte	0x1
 2944 001d 50       		.byte	0x50
 2945 001e 00000000 		.4byte	0
 2946 0022 00000000 		.4byte	0
 2947              	.LLST2:
 2948 0026 00000000 		.4byte	.LVL10
 2949 002a 07000000 		.4byte	.LVL11-1
 2950 002e 0100     		.2byte	0x1
 2951 0030 50       		.byte	0x50
 2952 0031 07000000 		.4byte	.LVL11-1
 2953 0035 1C000000 		.4byte	.LVL13
 2954 0039 0100     		.2byte	0x1
 2955 003b 54       		.byte	0x54
 2956 003c 1C000000 		.4byte	.LVL13
 2957 0040 28000000 		.4byte	.LFE4
 2958 0044 0400     		.2byte	0x4
 2959 0046 F3       		.byte	0xf3
 2960 0047 01       		.uleb128 0x1
 2961 0048 50       		.byte	0x50
 2962 0049 9F       		.byte	0x9f
 2963 004a 00000000 		.4byte	0
 2964 004e 00000000 		.4byte	0
 2965              	.LLST3:
 2966 0052 08000000 		.4byte	.LVL11
 2967 0056 1B000000 		.4byte	.LVL12-1
 2968 005a 0100     		.2byte	0x1
 2969 005c 50       		.byte	0x50
 2970 005d 00000000 		.4byte	0
 2971 0061 00000000 		.4byte	0
 2972              	.LLST4:
 2973 0065 00000000 		.4byte	.LVL14
 2974 0069 07000000 		.4byte	.LVL15-1
 2975 006d 0100     		.2byte	0x1
 2976 006f 50       		.byte	0x50
 2977 0070 07000000 		.4byte	.LVL15-1
 2978 0074 1C000000 		.4byte	.LVL17
 2979 0078 0100     		.2byte	0x1
 2980 007a 54       		.byte	0x54
 2981 007b 1C000000 		.4byte	.LVL17
 2982 007f 28000000 		.4byte	.LFE5
 2983 0083 0400     		.2byte	0x4
 2984 0085 F3       		.byte	0xf3
 2985 0086 01       		.uleb128 0x1
 2986 0087 50       		.byte	0x50
 2987 0088 9F       		.byte	0x9f
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 82


 2988 0089 00000000 		.4byte	0
 2989 008d 00000000 		.4byte	0
 2990              	.LLST5:
 2991 0091 08000000 		.4byte	.LVL15
 2992 0095 1B000000 		.4byte	.LVL16-1
 2993 0099 0100     		.2byte	0x1
 2994 009b 50       		.byte	0x50
 2995 009c 00000000 		.4byte	0
 2996 00a0 00000000 		.4byte	0
 2997              	.LLST6:
 2998 00a4 00000000 		.4byte	.LVL18
 2999 00a8 07000000 		.4byte	.LVL19-1
 3000 00ac 0100     		.2byte	0x1
 3001 00ae 50       		.byte	0x50
 3002 00af 07000000 		.4byte	.LVL19-1
 3003 00b3 1C000000 		.4byte	.LVL21
 3004 00b7 0100     		.2byte	0x1
 3005 00b9 54       		.byte	0x54
 3006 00ba 1C000000 		.4byte	.LVL21
 3007 00be 28000000 		.4byte	.LFE6
 3008 00c2 0400     		.2byte	0x4
 3009 00c4 F3       		.byte	0xf3
 3010 00c5 01       		.uleb128 0x1
 3011 00c6 50       		.byte	0x50
 3012 00c7 9F       		.byte	0x9f
 3013 00c8 00000000 		.4byte	0
 3014 00cc 00000000 		.4byte	0
 3015              	.LLST7:
 3016 00d0 08000000 		.4byte	.LVL19
 3017 00d4 1B000000 		.4byte	.LVL20-1
 3018 00d8 0100     		.2byte	0x1
 3019 00da 50       		.byte	0x50
 3020 00db 00000000 		.4byte	0
 3021 00df 00000000 		.4byte	0
 3022              	.LLST8:
 3023 00e3 00000000 		.4byte	.LVL22
 3024 00e7 07000000 		.4byte	.LVL23-1
 3025 00eb 0100     		.2byte	0x1
 3026 00ed 50       		.byte	0x50
 3027 00ee 07000000 		.4byte	.LVL23-1
 3028 00f2 22000000 		.4byte	.LVL25
 3029 00f6 0100     		.2byte	0x1
 3030 00f8 54       		.byte	0x54
 3031 00f9 22000000 		.4byte	.LVL25
 3032 00fd 2C000000 		.4byte	.LFE7
 3033 0101 0400     		.2byte	0x4
 3034 0103 F3       		.byte	0xf3
 3035 0104 01       		.uleb128 0x1
 3036 0105 50       		.byte	0x50
 3037 0106 9F       		.byte	0x9f
 3038 0107 00000000 		.4byte	0
 3039 010b 00000000 		.4byte	0
 3040              	.LLST9:
 3041 010f 08000000 		.4byte	.LVL23
 3042 0113 21000000 		.4byte	.LVL24-1
 3043 0117 0100     		.2byte	0x1
 3044 0119 50       		.byte	0x50
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 83


 3045 011a 00000000 		.4byte	0
 3046 011e 00000000 		.4byte	0
 3047              	.LLST10:
 3048 0122 00000000 		.4byte	.LVL26
 3049 0126 04000000 		.4byte	.LVL27
 3050 012a 0100     		.2byte	0x1
 3051 012c 50       		.byte	0x50
 3052 012d 04000000 		.4byte	.LVL27
 3053 0131 10000000 		.4byte	.LFE8
 3054 0135 0400     		.2byte	0x4
 3055 0137 F3       		.byte	0xf3
 3056 0138 01       		.uleb128 0x1
 3057 0139 50       		.byte	0x50
 3058 013a 9F       		.byte	0x9f
 3059 013b 00000000 		.4byte	0
 3060 013f 00000000 		.4byte	0
 3061              	.LLST11:
 3062 0143 00000000 		.4byte	.LVL28
 3063 0147 07000000 		.4byte	.LVL29-1
 3064 014b 0100     		.2byte	0x1
 3065 014d 50       		.byte	0x50
 3066 014e 07000000 		.4byte	.LVL29-1
 3067 0152 22000000 		.4byte	.LVL31
 3068 0156 0100     		.2byte	0x1
 3069 0158 54       		.byte	0x54
 3070 0159 22000000 		.4byte	.LVL31
 3071 015d 28000000 		.4byte	.LFE9
 3072 0161 0400     		.2byte	0x4
 3073 0163 F3       		.byte	0xf3
 3074 0164 01       		.uleb128 0x1
 3075 0165 50       		.byte	0x50
 3076 0166 9F       		.byte	0x9f
 3077 0167 00000000 		.4byte	0
 3078 016b 00000000 		.4byte	0
 3079              	.LLST12:
 3080 016f 08000000 		.4byte	.LVL29
 3081 0173 21000000 		.4byte	.LVL30-1
 3082 0177 0100     		.2byte	0x1
 3083 0179 50       		.byte	0x50
 3084 017a 00000000 		.4byte	0
 3085 017e 00000000 		.4byte	0
 3086              	.LLST13:
 3087 0182 00000000 		.4byte	.LVL32
 3088 0186 07000000 		.4byte	.LVL33-1
 3089 018a 0100     		.2byte	0x1
 3090 018c 50       		.byte	0x50
 3091 018d 07000000 		.4byte	.LVL33-1
 3092 0191 22000000 		.4byte	.LVL35
 3093 0195 0100     		.2byte	0x1
 3094 0197 54       		.byte	0x54
 3095 0198 22000000 		.4byte	.LVL35
 3096 019c 28000000 		.4byte	.LFE10
 3097 01a0 0400     		.2byte	0x4
 3098 01a2 F3       		.byte	0xf3
 3099 01a3 01       		.uleb128 0x1
 3100 01a4 50       		.byte	0x50
 3101 01a5 9F       		.byte	0x9f
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 84


 3102 01a6 00000000 		.4byte	0
 3103 01aa 00000000 		.4byte	0
 3104              	.LLST14:
 3105 01ae 08000000 		.4byte	.LVL33
 3106 01b2 21000000 		.4byte	.LVL34-1
 3107 01b6 0100     		.2byte	0x1
 3108 01b8 50       		.byte	0x50
 3109 01b9 00000000 		.4byte	0
 3110 01bd 00000000 		.4byte	0
 3111              	.LLST15:
 3112 01c1 00000000 		.4byte	.LVL36
 3113 01c5 07000000 		.4byte	.LVL37-1
 3114 01c9 0100     		.2byte	0x1
 3115 01cb 50       		.byte	0x50
 3116 01cc 07000000 		.4byte	.LVL37-1
 3117 01d0 10000000 		.4byte	.LVL38
 3118 01d4 0100     		.2byte	0x1
 3119 01d6 54       		.byte	0x54
 3120 01d7 10000000 		.4byte	.LVL38
 3121 01db 2C000000 		.4byte	.LFE11
 3122 01df 0400     		.2byte	0x4
 3123 01e1 F3       		.byte	0xf3
 3124 01e2 01       		.uleb128 0x1
 3125 01e3 50       		.byte	0x50
 3126 01e4 9F       		.byte	0x9f
 3127 01e5 00000000 		.4byte	0
 3128 01e9 00000000 		.4byte	0
 3129              	.LLST16:
 3130 01ed 08000000 		.4byte	.LVL37
 3131 01f1 1F000000 		.4byte	.LVL39-1
 3132 01f5 0100     		.2byte	0x1
 3133 01f7 50       		.byte	0x50
 3134 01f8 00000000 		.4byte	0
 3135 01fc 00000000 		.4byte	0
 3136              	.LLST17:
 3137 0200 00000000 		.4byte	.LVL40
 3138 0204 07000000 		.4byte	.LVL41-1
 3139 0208 0100     		.2byte	0x1
 3140 020a 50       		.byte	0x50
 3141 020b 07000000 		.4byte	.LVL41-1
 3142 020f 1C000000 		.4byte	.LVL43
 3143 0213 0100     		.2byte	0x1
 3144 0215 54       		.byte	0x54
 3145 0216 1C000000 		.4byte	.LVL43
 3146 021a 28000000 		.4byte	.LFE12
 3147 021e 0400     		.2byte	0x4
 3148 0220 F3       		.byte	0xf3
 3149 0221 01       		.uleb128 0x1
 3150 0222 50       		.byte	0x50
 3151 0223 9F       		.byte	0x9f
 3152 0224 00000000 		.4byte	0
 3153 0228 00000000 		.4byte	0
 3154              	.LLST18:
 3155 022c 08000000 		.4byte	.LVL41
 3156 0230 1B000000 		.4byte	.LVL42-1
 3157 0234 0100     		.2byte	0x1
 3158 0236 50       		.byte	0x50
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 85


 3159 0237 00000000 		.4byte	0
 3160 023b 00000000 		.4byte	0
 3161              	.LLST19:
 3162 023f 00000000 		.4byte	.LVL44
 3163 0243 04000000 		.4byte	.LVL45
 3164 0247 0100     		.2byte	0x1
 3165 0249 50       		.byte	0x50
 3166 024a 04000000 		.4byte	.LVL45
 3167 024e 0C000000 		.4byte	.LFE13
 3168 0252 0400     		.2byte	0x4
 3169 0254 F3       		.byte	0xf3
 3170 0255 01       		.uleb128 0x1
 3171 0256 50       		.byte	0x50
 3172 0257 9F       		.byte	0x9f
 3173 0258 00000000 		.4byte	0
 3174 025c 00000000 		.4byte	0
 3175              	.LLST20:
 3176 0260 00000000 		.4byte	.LVL46
 3177 0264 07000000 		.4byte	.LVL47-1
 3178 0268 0100     		.2byte	0x1
 3179 026a 50       		.byte	0x50
 3180 026b 07000000 		.4byte	.LVL47-1
 3181 026f 1C000000 		.4byte	.LVL49
 3182 0273 0100     		.2byte	0x1
 3183 0275 54       		.byte	0x54
 3184 0276 1C000000 		.4byte	.LVL49
 3185 027a 28000000 		.4byte	.LFE15
 3186 027e 0400     		.2byte	0x4
 3187 0280 F3       		.byte	0xf3
 3188 0281 01       		.uleb128 0x1
 3189 0282 50       		.byte	0x50
 3190 0283 9F       		.byte	0x9f
 3191 0284 00000000 		.4byte	0
 3192 0288 00000000 		.4byte	0
 3193              	.LLST21:
 3194 028c 08000000 		.4byte	.LVL47
 3195 0290 1B000000 		.4byte	.LVL48-1
 3196 0294 0100     		.2byte	0x1
 3197 0296 50       		.byte	0x50
 3198 0297 00000000 		.4byte	0
 3199 029b 00000000 		.4byte	0
 3200              	.LLST22:
 3201 029f 00000000 		.4byte	.LVL50
 3202 02a3 04000000 		.4byte	.LVL51
 3203 02a7 0100     		.2byte	0x1
 3204 02a9 50       		.byte	0x50
 3205 02aa 04000000 		.4byte	.LVL51
 3206 02ae 0C000000 		.4byte	.LFE16
 3207 02b2 0400     		.2byte	0x4
 3208 02b4 F3       		.byte	0xf3
 3209 02b5 01       		.uleb128 0x1
 3210 02b6 50       		.byte	0x50
 3211 02b7 9F       		.byte	0x9f
 3212 02b8 00000000 		.4byte	0
 3213 02bc 00000000 		.4byte	0
 3214              	.LLST23:
 3215 02c0 00000000 		.4byte	.LVL52
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 86


 3216 02c4 07000000 		.4byte	.LVL53-1
 3217 02c8 0100     		.2byte	0x1
 3218 02ca 50       		.byte	0x50
 3219 02cb 07000000 		.4byte	.LVL53-1
 3220 02cf 1E000000 		.4byte	.LVL55
 3221 02d3 0100     		.2byte	0x1
 3222 02d5 54       		.byte	0x54
 3223 02d6 1E000000 		.4byte	.LVL55
 3224 02da 24000000 		.4byte	.LFE18
 3225 02de 0400     		.2byte	0x4
 3226 02e0 F3       		.byte	0xf3
 3227 02e1 01       		.uleb128 0x1
 3228 02e2 50       		.byte	0x50
 3229 02e3 9F       		.byte	0x9f
 3230 02e4 00000000 		.4byte	0
 3231 02e8 00000000 		.4byte	0
 3232              	.LLST24:
 3233 02ec 08000000 		.4byte	.LVL53
 3234 02f0 1D000000 		.4byte	.LVL54-1
 3235 02f4 0100     		.2byte	0x1
 3236 02f6 50       		.byte	0x50
 3237 02f7 00000000 		.4byte	0
 3238 02fb 00000000 		.4byte	0
 3239              	.LLST25:
 3240 02ff 00000000 		.4byte	.LVL56
 3241 0303 04000000 		.4byte	.LVL57
 3242 0307 0100     		.2byte	0x1
 3243 0309 50       		.byte	0x50
 3244 030a 04000000 		.4byte	.LVL57
 3245 030e 0C000000 		.4byte	.LFE19
 3246 0312 0400     		.2byte	0x4
 3247 0314 F3       		.byte	0xf3
 3248 0315 01       		.uleb128 0x1
 3249 0316 50       		.byte	0x50
 3250 0317 9F       		.byte	0x9f
 3251 0318 00000000 		.4byte	0
 3252 031c 00000000 		.4byte	0
 3253              	.LLST26:
 3254 0320 00000000 		.4byte	.LVL58
 3255 0324 07000000 		.4byte	.LVL59-1
 3256 0328 0100     		.2byte	0x1
 3257 032a 50       		.byte	0x50
 3258 032b 07000000 		.4byte	.LVL59-1
 3259 032f 22000000 		.4byte	.LVL61
 3260 0333 0100     		.2byte	0x1
 3261 0335 54       		.byte	0x54
 3262 0336 22000000 		.4byte	.LVL61
 3263 033a 28000000 		.4byte	.LFE21
 3264 033e 0400     		.2byte	0x4
 3265 0340 F3       		.byte	0xf3
 3266 0341 01       		.uleb128 0x1
 3267 0342 50       		.byte	0x50
 3268 0343 9F       		.byte	0x9f
 3269 0344 00000000 		.4byte	0
 3270 0348 00000000 		.4byte	0
 3271              	.LLST27:
 3272 034c 08000000 		.4byte	.LVL59
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 87


 3273 0350 21000000 		.4byte	.LVL60-1
 3274 0354 0100     		.2byte	0x1
 3275 0356 50       		.byte	0x50
 3276 0357 00000000 		.4byte	0
 3277 035b 00000000 		.4byte	0
 3278              	.LLST28:
 3279 035f 00000000 		.4byte	.LVL62
 3280 0363 04000000 		.4byte	.LVL63
 3281 0367 0100     		.2byte	0x1
 3282 0369 50       		.byte	0x50
 3283 036a 04000000 		.4byte	.LVL63
 3284 036e 0C000000 		.4byte	.LFE22
 3285 0372 0400     		.2byte	0x4
 3286 0374 F3       		.byte	0xf3
 3287 0375 01       		.uleb128 0x1
 3288 0376 50       		.byte	0x50
 3289 0377 9F       		.byte	0x9f
 3290 0378 00000000 		.4byte	0
 3291 037c 00000000 		.4byte	0
 3292              	.LLST29:
 3293 0380 00000000 		.4byte	.LVL64
 3294 0384 04000000 		.4byte	.LVL65
 3295 0388 0100     		.2byte	0x1
 3296 038a 50       		.byte	0x50
 3297 038b 04000000 		.4byte	.LVL65
 3298 038f 0C000000 		.4byte	.LFE24
 3299 0393 0400     		.2byte	0x4
 3300 0395 F3       		.byte	0xf3
 3301 0396 01       		.uleb128 0x1
 3302 0397 50       		.byte	0x50
 3303 0398 9F       		.byte	0x9f
 3304 0399 00000000 		.4byte	0
 3305 039d 00000000 		.4byte	0
 3306              	.LLST30:
 3307 03a1 00000000 		.4byte	.LVL66
 3308 03a5 07000000 		.4byte	.LVL67-1
 3309 03a9 0100     		.2byte	0x1
 3310 03ab 50       		.byte	0x50
 3311 03ac 07000000 		.4byte	.LVL67-1
 3312 03b0 1C000000 		.4byte	.LVL69
 3313 03b4 0100     		.2byte	0x1
 3314 03b6 54       		.byte	0x54
 3315 03b7 1C000000 		.4byte	.LVL69
 3316 03bb 24000000 		.4byte	.LFE28
 3317 03bf 0400     		.2byte	0x4
 3318 03c1 F3       		.byte	0xf3
 3319 03c2 01       		.uleb128 0x1
 3320 03c3 50       		.byte	0x50
 3321 03c4 9F       		.byte	0x9f
 3322 03c5 00000000 		.4byte	0
 3323 03c9 00000000 		.4byte	0
 3324              	.LLST31:
 3325 03cd 08000000 		.4byte	.LVL67
 3326 03d1 1B000000 		.4byte	.LVL68-1
 3327 03d5 0100     		.2byte	0x1
 3328 03d7 50       		.byte	0x50
 3329 03d8 00000000 		.4byte	0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 88


 3330 03dc 00000000 		.4byte	0
 3331              	.LLST32:
 3332 03e0 00000000 		.4byte	.LVL70
 3333 03e4 07000000 		.4byte	.LVL71-1
 3334 03e8 0100     		.2byte	0x1
 3335 03ea 50       		.byte	0x50
 3336 03eb 07000000 		.4byte	.LVL71-1
 3337 03ef 1E000000 		.4byte	.LVL73
 3338 03f3 0100     		.2byte	0x1
 3339 03f5 54       		.byte	0x54
 3340 03f6 1E000000 		.4byte	.LVL73
 3341 03fa 24000000 		.4byte	.LFE29
 3342 03fe 0400     		.2byte	0x4
 3343 0400 F3       		.byte	0xf3
 3344 0401 01       		.uleb128 0x1
 3345 0402 50       		.byte	0x50
 3346 0403 9F       		.byte	0x9f
 3347 0404 00000000 		.4byte	0
 3348 0408 00000000 		.4byte	0
 3349              	.LLST33:
 3350 040c 08000000 		.4byte	.LVL71
 3351 0410 1D000000 		.4byte	.LVL72-1
 3352 0414 0100     		.2byte	0x1
 3353 0416 50       		.byte	0x50
 3354 0417 00000000 		.4byte	0
 3355 041b 00000000 		.4byte	0
 3356              	.LLST34:
 3357 041f 00000000 		.4byte	.LVL74
 3358 0423 07000000 		.4byte	.LVL75-1
 3359 0427 0100     		.2byte	0x1
 3360 0429 50       		.byte	0x50
 3361 042a 07000000 		.4byte	.LVL75-1
 3362 042e 1E000000 		.4byte	.LVL77
 3363 0432 0100     		.2byte	0x1
 3364 0434 54       		.byte	0x54
 3365 0435 1E000000 		.4byte	.LVL77
 3366 0439 28000000 		.4byte	.LFE30
 3367 043d 0400     		.2byte	0x4
 3368 043f F3       		.byte	0xf3
 3369 0440 01       		.uleb128 0x1
 3370 0441 50       		.byte	0x50
 3371 0442 9F       		.byte	0x9f
 3372 0443 00000000 		.4byte	0
 3373 0447 00000000 		.4byte	0
 3374              	.LLST35:
 3375 044b 08000000 		.4byte	.LVL75
 3376 044f 1D000000 		.4byte	.LVL76-1
 3377 0453 0100     		.2byte	0x1
 3378 0455 50       		.byte	0x50
 3379 0456 00000000 		.4byte	0
 3380 045a 00000000 		.4byte	0
 3381              	.LLST36:
 3382 045e 00000000 		.4byte	.LVL78
 3383 0462 07000000 		.4byte	.LVL79-1
 3384 0466 0100     		.2byte	0x1
 3385 0468 50       		.byte	0x50
 3386 0469 07000000 		.4byte	.LVL79-1
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 89


 3387 046d 1E000000 		.4byte	.LVL81
 3388 0471 0100     		.2byte	0x1
 3389 0473 54       		.byte	0x54
 3390 0474 1E000000 		.4byte	.LVL81
 3391 0478 24000000 		.4byte	.LFE31
 3392 047c 0400     		.2byte	0x4
 3393 047e F3       		.byte	0xf3
 3394 047f 01       		.uleb128 0x1
 3395 0480 50       		.byte	0x50
 3396 0481 9F       		.byte	0x9f
 3397 0482 00000000 		.4byte	0
 3398 0486 00000000 		.4byte	0
 3399              	.LLST37:
 3400 048a 08000000 		.4byte	.LVL79
 3401 048e 1D000000 		.4byte	.LVL80-1
 3402 0492 0100     		.2byte	0x1
 3403 0494 50       		.byte	0x50
 3404 0495 00000000 		.4byte	0
 3405 0499 00000000 		.4byte	0
 3406              	.LLST38:
 3407 049d 00000000 		.4byte	.LVL82
 3408 04a1 07000000 		.4byte	.LVL83-1
 3409 04a5 0100     		.2byte	0x1
 3410 04a7 50       		.byte	0x50
 3411 04a8 07000000 		.4byte	.LVL83-1
 3412 04ac 1E000000 		.4byte	.LVL85
 3413 04b0 0100     		.2byte	0x1
 3414 04b2 54       		.byte	0x54
 3415 04b3 1E000000 		.4byte	.LVL85
 3416 04b7 24000000 		.4byte	.LFE32
 3417 04bb 0400     		.2byte	0x4
 3418 04bd F3       		.byte	0xf3
 3419 04be 01       		.uleb128 0x1
 3420 04bf 50       		.byte	0x50
 3421 04c0 9F       		.byte	0x9f
 3422 04c1 00000000 		.4byte	0
 3423 04c5 00000000 		.4byte	0
 3424              	.LLST39:
 3425 04c9 08000000 		.4byte	.LVL83
 3426 04cd 1D000000 		.4byte	.LVL84-1
 3427 04d1 0100     		.2byte	0x1
 3428 04d3 50       		.byte	0x50
 3429 04d4 00000000 		.4byte	0
 3430 04d8 00000000 		.4byte	0
 3431              	.LLST40:
 3432 04dc 00000000 		.4byte	.LVL86
 3433 04e0 0B000000 		.4byte	.LVL87-1
 3434 04e4 0100     		.2byte	0x1
 3435 04e6 50       		.byte	0x50
 3436 04e7 0B000000 		.4byte	.LVL87-1
 3437 04eb 1C000000 		.4byte	.LFE33
 3438 04ef 0400     		.2byte	0x4
 3439 04f1 F3       		.byte	0xf3
 3440 04f2 01       		.uleb128 0x1
 3441 04f3 50       		.byte	0x50
 3442 04f4 9F       		.byte	0x9f
 3443 04f5 00000000 		.4byte	0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 90


 3444 04f9 00000000 		.4byte	0
 3445              	.LLST41:
 3446 04fd 00000000 		.4byte	.LVL86
 3447 0501 0B000000 		.4byte	.LVL87-1
 3448 0505 0100     		.2byte	0x1
 3449 0507 51       		.byte	0x51
 3450 0508 0B000000 		.4byte	.LVL87-1
 3451 050c 14000000 		.4byte	.LVL89
 3452 0510 0100     		.2byte	0x1
 3453 0512 55       		.byte	0x55
 3454 0513 14000000 		.4byte	.LVL89
 3455 0517 1C000000 		.4byte	.LFE33
 3456 051b 0400     		.2byte	0x4
 3457 051d F3       		.byte	0xf3
 3458 051e 01       		.uleb128 0x1
 3459 051f 51       		.byte	0x51
 3460 0520 9F       		.byte	0x9f
 3461 0521 00000000 		.4byte	0
 3462 0525 00000000 		.4byte	0
 3463              	.LLST42:
 3464 0529 0C000000 		.4byte	.LVL87
 3465 052d 13000000 		.4byte	.LVL88-1
 3466 0531 0100     		.2byte	0x1
 3467 0533 50       		.byte	0x50
 3468 0534 00000000 		.4byte	0
 3469 0538 00000000 		.4byte	0
 3470              		.section	.debug_aranges,"",%progbits
 3471 0000 54010000 		.4byte	0x154
 3472 0004 0200     		.2byte	0x2
 3473 0006 00000000 		.4byte	.Ldebug_info0
 3474 000a 04       		.byte	0x4
 3475 000b 00       		.byte	0
 3476 000c 0000     		.2byte	0
 3477 000e 0000     		.2byte	0
 3478 0010 00000000 		.4byte	.LFB0
 3479 0014 60000000 		.4byte	.LFE0-.LFB0
 3480 0018 00000000 		.4byte	.LFB1
 3481 001c 1C000000 		.4byte	.LFE1-.LFB1
 3482 0020 00000000 		.4byte	.LFB2
 3483 0024 1C000000 		.4byte	.LFE2-.LFB2
 3484 0028 00000000 		.4byte	.LFB3
 3485 002c 1C000000 		.4byte	.LFE3-.LFB3
 3486 0030 00000000 		.4byte	.LFB4
 3487 0034 28000000 		.4byte	.LFE4-.LFB4
 3488 0038 00000000 		.4byte	.LFB5
 3489 003c 28000000 		.4byte	.LFE5-.LFB5
 3490 0040 00000000 		.4byte	.LFB6
 3491 0044 28000000 		.4byte	.LFE6-.LFB6
 3492 0048 00000000 		.4byte	.LFB7
 3493 004c 2C000000 		.4byte	.LFE7-.LFB7
 3494 0050 00000000 		.4byte	.LFB8
 3495 0054 10000000 		.4byte	.LFE8-.LFB8
 3496 0058 00000000 		.4byte	.LFB9
 3497 005c 28000000 		.4byte	.LFE9-.LFB9
 3498 0060 00000000 		.4byte	.LFB10
 3499 0064 28000000 		.4byte	.LFE10-.LFB10
 3500 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 91


 3501 006c 2C000000 		.4byte	.LFE11-.LFB11
 3502 0070 00000000 		.4byte	.LFB12
 3503 0074 28000000 		.4byte	.LFE12-.LFB12
 3504 0078 00000000 		.4byte	.LFB13
 3505 007c 0C000000 		.4byte	.LFE13-.LFB13
 3506 0080 00000000 		.4byte	.LFB14
 3507 0084 0C000000 		.4byte	.LFE14-.LFB14
 3508 0088 00000000 		.4byte	.LFB15
 3509 008c 28000000 		.4byte	.LFE15-.LFB15
 3510 0090 00000000 		.4byte	.LFB16
 3511 0094 0C000000 		.4byte	.LFE16-.LFB16
 3512 0098 00000000 		.4byte	.LFB17
 3513 009c 0C000000 		.4byte	.LFE17-.LFB17
 3514 00a0 00000000 		.4byte	.LFB18
 3515 00a4 24000000 		.4byte	.LFE18-.LFB18
 3516 00a8 00000000 		.4byte	.LFB19
 3517 00ac 0C000000 		.4byte	.LFE19-.LFB19
 3518 00b0 00000000 		.4byte	.LFB20
 3519 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3520 00b8 00000000 		.4byte	.LFB21
 3521 00bc 28000000 		.4byte	.LFE21-.LFB21
 3522 00c0 00000000 		.4byte	.LFB22
 3523 00c4 0C000000 		.4byte	.LFE22-.LFB22
 3524 00c8 00000000 		.4byte	.LFB23
 3525 00cc 0C000000 		.4byte	.LFE23-.LFB23
 3526 00d0 00000000 		.4byte	.LFB24
 3527 00d4 0C000000 		.4byte	.LFE24-.LFB24
 3528 00d8 00000000 		.4byte	.LFB25
 3529 00dc 0C000000 		.4byte	.LFE25-.LFB25
 3530 00e0 00000000 		.4byte	.LFB26
 3531 00e4 0C000000 		.4byte	.LFE26-.LFB26
 3532 00e8 00000000 		.4byte	.LFB27
 3533 00ec 0C000000 		.4byte	.LFE27-.LFB27
 3534 00f0 00000000 		.4byte	.LFB28
 3535 00f4 24000000 		.4byte	.LFE28-.LFB28
 3536 00f8 00000000 		.4byte	.LFB29
 3537 00fc 24000000 		.4byte	.LFE29-.LFB29
 3538 0100 00000000 		.4byte	.LFB30
 3539 0104 28000000 		.4byte	.LFE30-.LFB30
 3540 0108 00000000 		.4byte	.LFB31
 3541 010c 24000000 		.4byte	.LFE31-.LFB31
 3542 0110 00000000 		.4byte	.LFB32
 3543 0114 24000000 		.4byte	.LFE32-.LFB32
 3544 0118 00000000 		.4byte	.LFB33
 3545 011c 1C000000 		.4byte	.LFE33-.LFB33
 3546 0120 00000000 		.4byte	.LFB34
 3547 0124 14000000 		.4byte	.LFE34-.LFB34
 3548 0128 00000000 		.4byte	.LFB35
 3549 012c 0C000000 		.4byte	.LFE35-.LFB35
 3550 0130 00000000 		.4byte	.LFB36
 3551 0134 0C000000 		.4byte	.LFE36-.LFB36
 3552 0138 00000000 		.4byte	.LFB37
 3553 013c 0C000000 		.4byte	.LFE37-.LFB37
 3554 0140 00000000 		.4byte	.LFB38
 3555 0144 0C000000 		.4byte	.LFE38-.LFB38
 3556 0148 00000000 		.4byte	.LFB39
 3557 014c 0C000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 92


 3558 0150 00000000 		.4byte	0
 3559 0154 00000000 		.4byte	0
 3560              		.section	.debug_ranges,"",%progbits
 3561              	.Ldebug_ranges0:
 3562 0000 12000000 		.4byte	.LBB10
 3563 0004 16000000 		.4byte	.LBE10
 3564 0008 16000000 		.4byte	.LBB13
 3565 000c 18000000 		.4byte	.LBE13
 3566 0010 00000000 		.4byte	0
 3567 0014 00000000 		.4byte	0
 3568 0018 00000000 		.4byte	.LFB0
 3569 001c 60000000 		.4byte	.LFE0
 3570 0020 00000000 		.4byte	.LFB1
 3571 0024 1C000000 		.4byte	.LFE1
 3572 0028 00000000 		.4byte	.LFB2
 3573 002c 1C000000 		.4byte	.LFE2
 3574 0030 00000000 		.4byte	.LFB3
 3575 0034 1C000000 		.4byte	.LFE3
 3576 0038 00000000 		.4byte	.LFB4
 3577 003c 28000000 		.4byte	.LFE4
 3578 0040 00000000 		.4byte	.LFB5
 3579 0044 28000000 		.4byte	.LFE5
 3580 0048 00000000 		.4byte	.LFB6
 3581 004c 28000000 		.4byte	.LFE6
 3582 0050 00000000 		.4byte	.LFB7
 3583 0054 2C000000 		.4byte	.LFE7
 3584 0058 00000000 		.4byte	.LFB8
 3585 005c 10000000 		.4byte	.LFE8
 3586 0060 00000000 		.4byte	.LFB9
 3587 0064 28000000 		.4byte	.LFE9
 3588 0068 00000000 		.4byte	.LFB10
 3589 006c 28000000 		.4byte	.LFE10
 3590 0070 00000000 		.4byte	.LFB11
 3591 0074 2C000000 		.4byte	.LFE11
 3592 0078 00000000 		.4byte	.LFB12
 3593 007c 28000000 		.4byte	.LFE12
 3594 0080 00000000 		.4byte	.LFB13
 3595 0084 0C000000 		.4byte	.LFE13
 3596 0088 00000000 		.4byte	.LFB14
 3597 008c 0C000000 		.4byte	.LFE14
 3598 0090 00000000 		.4byte	.LFB15
 3599 0094 28000000 		.4byte	.LFE15
 3600 0098 00000000 		.4byte	.LFB16
 3601 009c 0C000000 		.4byte	.LFE16
 3602 00a0 00000000 		.4byte	.LFB17
 3603 00a4 0C000000 		.4byte	.LFE17
 3604 00a8 00000000 		.4byte	.LFB18
 3605 00ac 24000000 		.4byte	.LFE18
 3606 00b0 00000000 		.4byte	.LFB19
 3607 00b4 0C000000 		.4byte	.LFE19
 3608 00b8 00000000 		.4byte	.LFB20
 3609 00bc 0C000000 		.4byte	.LFE20
 3610 00c0 00000000 		.4byte	.LFB21
 3611 00c4 28000000 		.4byte	.LFE21
 3612 00c8 00000000 		.4byte	.LFB22
 3613 00cc 0C000000 		.4byte	.LFE22
 3614 00d0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 93


 3615 00d4 0C000000 		.4byte	.LFE23
 3616 00d8 00000000 		.4byte	.LFB24
 3617 00dc 0C000000 		.4byte	.LFE24
 3618 00e0 00000000 		.4byte	.LFB25
 3619 00e4 0C000000 		.4byte	.LFE25
 3620 00e8 00000000 		.4byte	.LFB26
 3621 00ec 0C000000 		.4byte	.LFE26
 3622 00f0 00000000 		.4byte	.LFB27
 3623 00f4 0C000000 		.4byte	.LFE27
 3624 00f8 00000000 		.4byte	.LFB28
 3625 00fc 24000000 		.4byte	.LFE28
 3626 0100 00000000 		.4byte	.LFB29
 3627 0104 24000000 		.4byte	.LFE29
 3628 0108 00000000 		.4byte	.LFB30
 3629 010c 28000000 		.4byte	.LFE30
 3630 0110 00000000 		.4byte	.LFB31
 3631 0114 24000000 		.4byte	.LFE31
 3632 0118 00000000 		.4byte	.LFB32
 3633 011c 24000000 		.4byte	.LFE32
 3634 0120 00000000 		.4byte	.LFB33
 3635 0124 1C000000 		.4byte	.LFE33
 3636 0128 00000000 		.4byte	.LFB34
 3637 012c 14000000 		.4byte	.LFE34
 3638 0130 00000000 		.4byte	.LFB35
 3639 0134 0C000000 		.4byte	.LFE35
 3640 0138 00000000 		.4byte	.LFB36
 3641 013c 0C000000 		.4byte	.LFE36
 3642 0140 00000000 		.4byte	.LFB37
 3643 0144 0C000000 		.4byte	.LFE37
 3644 0148 00000000 		.4byte	.LFB38
 3645 014c 0C000000 		.4byte	.LFE38
 3646 0150 00000000 		.4byte	.LFB39
 3647 0154 0C000000 		.4byte	.LFE39
 3648 0158 00000000 		.4byte	0
 3649 015c 00000000 		.4byte	0
 3650              		.section	.debug_line,"",%progbits
 3651              	.Ldebug_line0:
 3652 0000 EC030000 		.section	.debug_str,"MS",%progbits,1
 3652      02004D00 
 3652      00000201 
 3652      FB0E0D00 
 3652      01010101 
 3653              	.LASF18:
 3654 0000 636F756E 		.ascii	"count\000"
 3654      7400
 3655              	.LASF76:
 3656 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3656      4320342E 
 3656      392E3320 
 3656      32303135 
 3656      30333033 
 3657 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3657      20726576 
 3657      6973696F 
 3657      6E203232 
 3657      31323230 
 3658 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 94


 3658      66756E63 
 3658      74696F6E 
 3658      2D736563 
 3658      74696F6E 
 3659              	.LASF25:
 3660 0094 50574D5F 		.ascii	"PWM_Enable\000"
 3660      456E6162 
 3660      6C6500
 3661              	.LASF81:
 3662 009f 43794578 		.ascii	"CyExitCriticalSection\000"
 3662      69744372 
 3662      69746963 
 3662      616C5365 
 3662      6374696F 
 3663              	.LASF39:
 3664 00b5 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3664      53657450 
 3664      574D5379 
 3664      6E634B69 
 3664      6C6C00
 3665              	.LASF21:
 3666 00c8 70657269 		.ascii	"period\000"
 3666      6F6400
 3667              	.LASF7:
 3668 00cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 3668      206C6F6E 
 3668      6720756E 
 3668      7369676E 
 3668      65642069 
 3669              	.LASF63:
 3670 00e6 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3670      53657443 
 3670      61707475 
 3670      72654D6F 
 3670      646500
 3671              	.LASF32:
 3672 00f9 71644D6F 		.ascii	"qdMode\000"
 3672      646500
 3673              	.LASF16:
 3674 0100 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3674      57726974 
 3674      65436F75 
 3674      6E746572 
 3674      00
 3675              	.LASF49:
 3676 0111 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3676      52656164 
 3676      436F756E 
 3676      74657200 
 3677              	.LASF6:
 3678 0121 6C6F6E67 		.ascii	"long long int\000"
 3678      206C6F6E 
 3678      6720696E 
 3678      7400
 3679              	.LASF0:
 3680 012f 7369676E 		.ascii	"signed char\000"
 3680      65642063 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 95


 3680      68617200 
 3681              	.LASF58:
 3682 013b 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3682      57726974 
 3682      65436F6D 
 3682      70617265 
 3682      42756600 
 3683              	.LASF17:
 3684 014f 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3684      53657449 
 3684      6E746572 
 3684      72757074 
 3684      4D6F6465 
 3685              	.LASF74:
 3686 0164 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3686      436C6561 
 3686      72496E74 
 3686      65727275 
 3686      707400
 3687              	.LASF77:
 3688 0177 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3688      6E657261 
 3688      7465645F 
 3688      536F7572 
 3688      63655C50 
 3689              	.LASF4:
 3690 0196 6C6F6E67 		.ascii	"long int\000"
 3690      20696E74 
 3690      00
 3691              	.LASF9:
 3692 019f 75696E74 		.ascii	"uint8\000"
 3692      3800
 3693              	.LASF12:
 3694 01a5 646F7562 		.ascii	"double\000"
 3694      6C6500
 3695              	.LASF60:
 3696 01ac 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3696      52656164 
 3696      436F6D70 
 3696      61726542 
 3696      756600
 3697              	.LASF51:
 3698 01bf 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3698      53657443 
 3698      6F6D7061 
 3698      72655377 
 3698      617000
 3699              	.LASF27:
 3700 01d2 50574D5F 		.ascii	"PWM_Stop\000"
 3700      53746F70 
 3700      00
 3701              	.LASF45:
 3702 01db 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3702      53657450 
 3702      574D496E 
 3702      76657274 
 3702      00
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 96


 3703              	.LASF10:
 3704 01ec 75696E74 		.ascii	"uint32\000"
 3704      333200
 3705              	.LASF66:
 3706 01f3 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3706      53657453 
 3706      74617274 
 3706      4D6F6465 
 3706      00
 3707              	.LASF64:
 3708 0204 74726967 		.ascii	"triggerMode\000"
 3708      6765724D 
 3708      6F646500 
 3709              	.LASF46:
 3710 0210 6D61736B 		.ascii	"mask\000"
 3710      00
 3711              	.LASF71:
 3712 0215 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3712      52656164 
 3712      53746174 
 3712      757300
 3713              	.LASF44:
 3714 0224 64656164 		.ascii	"deadTime\000"
 3714      54696D65 
 3714      00
 3715              	.LASF67:
 3716 022d 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3716      53657453 
 3716      746F704D 
 3716      6F646500 
 3717              	.LASF8:
 3718 023d 756E7369 		.ascii	"unsigned int\000"
 3718      676E6564 
 3718      20696E74 
 3718      00
 3719              	.LASF43:
 3720 024a 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3720      53657450 
 3720      574D4465 
 3720      61645469 
 3720      6D6500
 3721              	.LASF70:
 3722 025d 636F6D6D 		.ascii	"command\000"
 3722      616E6400 
 3723              	.LASF5:
 3724 0265 6C6F6E67 		.ascii	"long unsigned int\000"
 3724      20756E73 
 3724      69676E65 
 3724      6420696E 
 3724      7400
 3725              	.LASF38:
 3726 0277 6D6F6465 		.ascii	"modeMask\000"
 3726      4D61736B 
 3726      00
 3727              	.LASF80:
 3728 0280 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3728      74657243 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 97


 3728      72697469 
 3728      63616C53 
 3728      65637469 
 3729              	.LASF3:
 3730 0297 73686F72 		.ascii	"short unsigned int\000"
 3730      7420756E 
 3730      7369676E 
 3730      65642069 
 3730      6E7400
 3731              	.LASF33:
 3732 02aa 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3732      53657450 
 3732      72657363 
 3732      616C6572 
 3732      00
 3733              	.LASF26:
 3734 02bb 50574D5F 		.ascii	"PWM_Start\000"
 3734      53746172 
 3734      7400
 3735              	.LASF69:
 3736 02c5 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3736      54726967 
 3736      67657243 
 3736      6F6D6D61 
 3736      6E6400
 3737              	.LASF20:
 3738 02d8 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3738      57726974 
 3738      65506572 
 3738      696F6400 
 3739              	.LASF14:
 3740 02e8 72656733 		.ascii	"reg32\000"
 3740      3200
 3741              	.LASF79:
 3742 02ee 50574D5F 		.ascii	"PWM_initVar\000"
 3742      696E6974 
 3742      56617200 
 3743              	.LASF50:
 3744 02fa 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3744      52656164 
 3744      50657269 
 3744      6F6400
 3745              	.LASF15:
 3746 0309 73697A65 		.ascii	"sizetype\000"
 3746      74797065 
 3746      00
 3747              	.LASF40:
 3748 0312 73796E63 		.ascii	"syncKillEnable\000"
 3748      4B696C6C 
 3748      456E6162 
 3748      6C6500
 3749              	.LASF23:
 3750 0321 636F6D70 		.ascii	"compare\000"
 3750      61726500 
 3751              	.LASF35:
 3752 0329 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3752      5365744F 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 98


 3752      6E655368 
 3752      6F7400
 3753              	.LASF55:
 3754 0338 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3754      52656164 
 3754      50657269 
 3754      6F644275 
 3754      6600
 3755              	.LASF78:
 3756 034a 433A5C55 		.ascii	"C:\\Users\\vangelis\\Striplights\\UART_Bootloader.c"
 3756      73657273 
 3756      5C76616E 
 3756      67656C69 
 3756      735C5374 
 3757 0379 7964736E 		.ascii	"ydsn\000"
 3757      00
 3758              	.LASF11:
 3759 037e 666C6F61 		.ascii	"float\000"
 3759      7400
 3760              	.LASF34:
 3761 0384 70726573 		.ascii	"prescaler\000"
 3761      63616C65 
 3761      7200
 3762              	.LASF61:
 3763 038e 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3763      52656164 
 3763      43617074 
 3763      75726500 
 3764              	.LASF56:
 3765 039e 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3765      53657450 
 3765      6572696F 
 3765      64537761 
 3765      7000
 3766              	.LASF1:
 3767 03b0 756E7369 		.ascii	"unsigned char\000"
 3767      676E6564 
 3767      20636861 
 3767      7200
 3768              	.LASF24:
 3769 03be 50574D5F 		.ascii	"PWM_Init\000"
 3769      496E6974 
 3769      00
 3770              	.LASF42:
 3771 03c7 73746F70 		.ascii	"stopOnKillEnable\000"
 3771      4F6E4B69 
 3771      6C6C456E 
 3771      61626C65 
 3771      00
 3772              	.LASF37:
 3773 03d8 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3773      53657450 
 3773      574D4D6F 
 3773      646500
 3774              	.LASF2:
 3775 03e7 73686F72 		.ascii	"short int\000"
 3775      7420696E 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 99


 3775      7400
 3776              	.LASF72:
 3777 03f1 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3777      47657449 
 3777      6E746572 
 3777      72757074 
 3777      536F7572 
 3778              	.LASF19:
 3779 040e 696E7465 		.ascii	"interruptMask\000"
 3779      72727570 
 3779      744D6173 
 3779      6B00
 3780              	.LASF53:
 3781 041c 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3781      57726974 
 3781      65506572 
 3781      696F6442 
 3781      756600
 3782              	.LASF30:
 3783 042f 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3783      53657451 
 3783      444D6F64 
 3783      6500
 3784              	.LASF13:
 3785 043d 63686172 		.ascii	"char\000"
 3785      00
 3786              	.LASF31:
 3787 0442 6D6F6465 		.ascii	"mode\000"
 3787      00
 3788              	.LASF75:
 3789 0447 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3789      53657449 
 3789      6E746572 
 3789      72757074 
 3789      00
 3790              	.LASF65:
 3791 0458 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3791      53657452 
 3791      656C6F61 
 3791      644D6F64 
 3791      6500
 3792              	.LASF48:
 3793 046a 636F756E 		.ascii	"counterMode\000"
 3793      7465724D 
 3793      6F646500 
 3794              	.LASF59:
 3795 0476 636F6D70 		.ascii	"compareBuf\000"
 3795      61726542 
 3795      756600
 3796              	.LASF54:
 3797 0481 70657269 		.ascii	"periodBuf\000"
 3797      6F644275 
 3797      6600
 3798              	.LASF62:
 3799 048b 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3799      52656164 
 3799      43617074 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 100


 3799      75726542 
 3799      756600
 3800              	.LASF28:
 3801 049e 656E6162 		.ascii	"enableInterrupts\000"
 3801      6C65496E 
 3801      74657272 
 3801      75707473 
 3801      00
 3802              	.LASF68:
 3803 04af 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3803      53657443 
 3803      6F756E74 
 3803      4D6F6465 
 3803      00
 3804              	.LASF36:
 3805 04c0 6F6E6553 		.ascii	"oneShotEnable\000"
 3805      686F7445 
 3805      6E61626C 
 3805      6500
 3806              	.LASF29:
 3807 04ce 50574D5F 		.ascii	"PWM_SetMode\000"
 3807      5365744D 
 3807      6F646500 
 3808              	.LASF41:
 3809 04da 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3809      53657450 
 3809      574D5374 
 3809      6F704F6E 
 3809      4B696C6C 
 3810              	.LASF47:
 3811 04ef 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3811      53657443 
 3811      6F756E74 
 3811      65724D6F 
 3811      646500
 3812              	.LASF52:
 3813 0502 73776170 		.ascii	"swapEnable\000"
 3813      456E6162 
 3813      6C6500
 3814              	.LASF73:
 3815 050d 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3815      47657449 
 3815      6E746572 
 3815      72757074 
 3815      536F7572 
 3816              	.LASF22:
 3817 0524 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3817      57726974 
 3817      65436F6D 
 3817      70617265 
 3817      00
 3818              	.LASF57:
 3819 0535 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3819      52656164 
 3819      436F6D70 
 3819      61726500 
 3820              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccIA3ZuO.s 			page 101


