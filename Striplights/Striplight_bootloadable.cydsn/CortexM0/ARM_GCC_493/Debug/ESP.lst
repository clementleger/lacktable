ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ESP.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ESP_initVar
  18              		.bss
  19              		.type	ESP_initVar, %object
  20              		.size	ESP_initVar, 1
  21              	ESP_initVar:
  22 0000 00       		.space	1
  23              		.global	ESP_customIntrHandler
  24 0001 000000   		.align	2
  25              		.type	ESP_customIntrHandler, %object
  26              		.size	ESP_customIntrHandler, 4
  27              	ESP_customIntrHandler:
  28 0004 00000000 		.space	4
  29              		.section	.text.ESP_Init,"ax",%progbits
  30              		.align	2
  31              		.global	ESP_Init
  32              		.code	16
  33              		.thumb_func
  34              		.type	ESP_Init, %function
  35              	ESP_Init:
  36              	.LFB0:
  37              		.file 1 ".\\Generated_Source\\PSoC4\\ESP.c"
   1:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ESP.c **** * File Name: ESP.c
   3:.\Generated_Source\PSoC4/ESP.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/ESP.c **** *
   5:.\Generated_Source\PSoC4/ESP.c **** * Description:
   6:.\Generated_Source\PSoC4/ESP.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/ESP.c **** *
   8:.\Generated_Source\PSoC4/ESP.c **** * Note:
   9:.\Generated_Source\PSoC4/ESP.c **** *
  10:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/ESP.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/ESP.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/ESP.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/ESP.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/ESP.c **** 
  17:.\Generated_Source\PSoC4/ESP.c **** #include "ESP_PVT.h"
  18:.\Generated_Source\PSoC4/ESP.c **** 
  19:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/ESP.c ****     #include "ESP_I2C_PVT.h"
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 2


  21:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/ESP.c **** 
  23:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/ESP.c ****     #include "ESP_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/ESP.c **** 
  27:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_SPI_INC || ESP_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/ESP.c ****     #include "ESP_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_SPI_INC || ESP_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/ESP.c **** 
  31:.\Generated_Source\PSoC4/ESP.c **** 
  32:.\Generated_Source\PSoC4/ESP.c **** /***************************************
  33:.\Generated_Source\PSoC4/ESP.c **** *    Run Time Configuration Vars
  34:.\Generated_Source\PSoC4/ESP.c **** ***************************************/
  35:.\Generated_Source\PSoC4/ESP.c **** 
  36:.\Generated_Source\PSoC4/ESP.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/ESP.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_scbMode = ESP_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_scbEnableWake;
  41:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_scbEnableIntr;
  42:.\Generated_Source\PSoC4/ESP.c **** 
  43:.\Generated_Source\PSoC4/ESP.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_mode;
  45:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_acceptAddr;
  46:.\Generated_Source\PSoC4/ESP.c **** 
  47:.\Generated_Source\PSoC4/ESP.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/ESP.c ****     volatile uint8 * ESP_rxBuffer;
  49:.\Generated_Source\PSoC4/ESP.c ****     uint8  ESP_rxDataBits;
  50:.\Generated_Source\PSoC4/ESP.c ****     uint32 ESP_rxBufferSize;
  51:.\Generated_Source\PSoC4/ESP.c **** 
  52:.\Generated_Source\PSoC4/ESP.c ****     volatile uint8 * ESP_txBuffer;
  53:.\Generated_Source\PSoC4/ESP.c ****     uint8  ESP_txDataBits;
  54:.\Generated_Source\PSoC4/ESP.c ****     uint32 ESP_txBufferSize;
  55:.\Generated_Source\PSoC4/ESP.c **** 
  56:.\Generated_Source\PSoC4/ESP.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_numberOfAddr;
  58:.\Generated_Source\PSoC4/ESP.c ****     uint8 ESP_subAddrSize;
  59:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/ESP.c **** 
  61:.\Generated_Source\PSoC4/ESP.c **** 
  62:.\Generated_Source\PSoC4/ESP.c **** /***************************************
  63:.\Generated_Source\PSoC4/ESP.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/ESP.c **** ***************************************/
  65:.\Generated_Source\PSoC4/ESP.c **** 
  66:.\Generated_Source\PSoC4/ESP.c **** uint8 ESP_initVar = 0u;
  67:.\Generated_Source\PSoC4/ESP.c **** 
  68:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_IRQ_INTERNAL)
  69:.\Generated_Source\PSoC4/ESP.c **** #if !defined (CY_REMOVE_ESP_CUSTOM_INTR_HANDLER)
  70:.\Generated_Source\PSoC4/ESP.c ****     void (*ESP_customIntrHandler)(void) = NULL;
  71:.\Generated_Source\PSoC4/ESP.c **** #endif /* !defined (CY_REMOVE_ESP_CUSTOM_INTR_HANDLER) */
  72:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_IRQ_INTERNAL) */
  73:.\Generated_Source\PSoC4/ESP.c **** 
  74:.\Generated_Source\PSoC4/ESP.c **** 
  75:.\Generated_Source\PSoC4/ESP.c **** /***************************************
  76:.\Generated_Source\PSoC4/ESP.c **** *    Private Function Prototypes
  77:.\Generated_Source\PSoC4/ESP.c **** ***************************************/
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 3


  78:.\Generated_Source\PSoC4/ESP.c **** 
  79:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbEnableIntr(void);
  80:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbModeStop(void);
  81:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbModePostEnable(void);
  82:.\Generated_Source\PSoC4/ESP.c **** 
  83:.\Generated_Source\PSoC4/ESP.c **** 
  84:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_Init
  86:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
  87:.\Generated_Source\PSoC4/ESP.c **** *
  88:.\Generated_Source\PSoC4/ESP.c **** * Summary:
  89:.\Generated_Source\PSoC4/ESP.c **** *  Initializes the SCB component to operate in one of the selected
  90:.\Generated_Source\PSoC4/ESP.c **** *  configurations: I2C, SPI, UART or EZI2C.
  91:.\Generated_Source\PSoC4/ESP.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  92:.\Generated_Source\PSoC4/ESP.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
  93:.\Generated_Source\PSoC4/ESP.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  94:.\Generated_Source\PSoC4/ESP.c **** *
  95:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
  96:.\Generated_Source\PSoC4/ESP.c **** *  None
  97:.\Generated_Source\PSoC4/ESP.c **** *
  98:.\Generated_Source\PSoC4/ESP.c **** * Return:
  99:.\Generated_Source\PSoC4/ESP.c **** *  None
 100:.\Generated_Source\PSoC4/ESP.c **** *
 101:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 102:.\Generated_Source\PSoC4/ESP.c **** void ESP_Init(void)
 103:.\Generated_Source\PSoC4/ESP.c **** {
  38              		.loc 1 103 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
 104:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 105:.\Generated_Source\PSoC4/ESP.c ****     if (ESP_SCB_MODE_UNCONFIG_RUNTM_CFG)
 106:.\Generated_Source\PSoC4/ESP.c ****     {
 107:.\Generated_Source\PSoC4/ESP.c ****         ESP_initVar = 0u;
 108:.\Generated_Source\PSoC4/ESP.c ****     }
 109:.\Generated_Source\PSoC4/ESP.c ****     else
 110:.\Generated_Source\PSoC4/ESP.c ****     {
 111:.\Generated_Source\PSoC4/ESP.c ****         /* Initialization was done before this function call */
 112:.\Generated_Source\PSoC4/ESP.c ****     }
 113:.\Generated_Source\PSoC4/ESP.c **** 
 114:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_I2C_CONST_CFG)
 115:.\Generated_Source\PSoC4/ESP.c ****     ESP_I2CInit();
 116:.\Generated_Source\PSoC4/ESP.c **** 
 117:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_SPI_CONST_CFG)
 118:.\Generated_Source\PSoC4/ESP.c ****     ESP_SpiInit();
 119:.\Generated_Source\PSoC4/ESP.c **** 
 120:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_UART_CONST_CFG)
 121:.\Generated_Source\PSoC4/ESP.c ****     ESP_UartInit();
  46              		.loc 1 121 0
  47 0004 FFF7FEFF 		bl	ESP_UartInit
 122:.\Generated_Source\PSoC4/ESP.c **** 
 123:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_EZI2C_CONST_CFG)
 124:.\Generated_Source\PSoC4/ESP.c ****     ESP_EzI2CInit();
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 4


 125:.\Generated_Source\PSoC4/ESP.c **** 
 126:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 127:.\Generated_Source\PSoC4/ESP.c **** }
  48              		.loc 1 127 0
  49 0008 BD46     		mov	sp, r7
  50              		@ sp needed
  51 000a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	ESP_Init, .-ESP_Init
  55              		.section	.text.ESP_Enable,"ax",%progbits
  56              		.align	2
  57              		.global	ESP_Enable
  58              		.code	16
  59              		.thumb_func
  60              		.type	ESP_Enable, %function
  61              	ESP_Enable:
  62              	.LFB1:
 128:.\Generated_Source\PSoC4/ESP.c **** 
 129:.\Generated_Source\PSoC4/ESP.c **** 
 130:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_Enable
 132:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 133:.\Generated_Source\PSoC4/ESP.c **** *
 134:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 135:.\Generated_Source\PSoC4/ESP.c **** *  Enables the SCB component operation.
 136:.\Generated_Source\PSoC4/ESP.c **** *  The SCB configuration should be not changed when the component is enabled.
 137:.\Generated_Source\PSoC4/ESP.c **** *  Any configuration changes should be made after disabling the component.
 138:.\Generated_Source\PSoC4/ESP.c **** *
 139:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 140:.\Generated_Source\PSoC4/ESP.c **** *  None
 141:.\Generated_Source\PSoC4/ESP.c **** *
 142:.\Generated_Source\PSoC4/ESP.c **** * Return:
 143:.\Generated_Source\PSoC4/ESP.c **** *  None
 144:.\Generated_Source\PSoC4/ESP.c **** *
 145:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/ESP.c **** void ESP_Enable(void)
 147:.\Generated_Source\PSoC4/ESP.c **** {
  63              		.loc 1 147 0
  64              		.cfi_startproc
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
 148:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 149:.\Generated_Source\PSoC4/ESP.c ****     /* Enable SCB block, only if it is already configured */
 150:.\Generated_Source\PSoC4/ESP.c ****     if (!ESP_SCB_MODE_UNCONFIG_RUNTM_CFG)
 151:.\Generated_Source\PSoC4/ESP.c ****     {
 152:.\Generated_Source\PSoC4/ESP.c ****         ESP_CTRL_REG |= ESP_CTRL_ENABLED;
 153:.\Generated_Source\PSoC4/ESP.c **** 
 154:.\Generated_Source\PSoC4/ESP.c ****         ESP_ScbEnableIntr();
 155:.\Generated_Source\PSoC4/ESP.c **** 
 156:.\Generated_Source\PSoC4/ESP.c ****         /* Call PostEnable function specific to current operation mode */
 157:.\Generated_Source\PSoC4/ESP.c ****         ESP_ScbModePostEnable();
 158:.\Generated_Source\PSoC4/ESP.c ****     }
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 5


 159:.\Generated_Source\PSoC4/ESP.c **** #else
 160:.\Generated_Source\PSoC4/ESP.c ****     ESP_CTRL_REG |= ESP_CTRL_ENABLED;
  71              		.loc 1 160 0
  72 0004 064B     		ldr	r3, .L3
  73 0006 064A     		ldr	r2, .L3
  74 0008 1268     		ldr	r2, [r2]
  75 000a 8021     		mov	r1, #128
  76 000c 0906     		lsl	r1, r1, #24
  77 000e 0A43     		orr	r2, r1
  78 0010 1A60     		str	r2, [r3]
 161:.\Generated_Source\PSoC4/ESP.c **** 
 162:.\Generated_Source\PSoC4/ESP.c ****     ESP_ScbEnableIntr();
  79              		.loc 1 162 0
  80 0012 FFF7FEFF 		bl	ESP_ScbEnableIntr
 163:.\Generated_Source\PSoC4/ESP.c **** 
 164:.\Generated_Source\PSoC4/ESP.c ****     /* Call PostEnable function specific to current operation mode */
 165:.\Generated_Source\PSoC4/ESP.c ****     ESP_ScbModePostEnable();
  81              		.loc 1 165 0
  82 0016 FFF7FEFF 		bl	ESP_ScbModePostEnable
 166:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 167:.\Generated_Source\PSoC4/ESP.c **** }
  83              		.loc 1 167 0
  84 001a BD46     		mov	sp, r7
  85              		@ sp needed
  86 001c 80BD     		pop	{r7, pc}
  87              	.L4:
  88 001e C046     		.align	2
  89              	.L3:
  90 0020 00000740 		.word	1074200576
  91              		.cfi_endproc
  92              	.LFE1:
  93              		.size	ESP_Enable, .-ESP_Enable
  94              		.section	.text.ESP_Start,"ax",%progbits
  95              		.align	2
  96              		.global	ESP_Start
  97              		.code	16
  98              		.thumb_func
  99              		.type	ESP_Start, %function
 100              	ESP_Start:
 101              	.LFB2:
 168:.\Generated_Source\PSoC4/ESP.c **** 
 169:.\Generated_Source\PSoC4/ESP.c **** 
 170:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_Start
 172:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 173:.\Generated_Source\PSoC4/ESP.c **** *
 174:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 175:.\Generated_Source\PSoC4/ESP.c **** *  Invokes SCB_Init() and SCB_Enable().
 176:.\Generated_Source\PSoC4/ESP.c **** *  After this function call, the component is enabled and ready for operation.
 177:.\Generated_Source\PSoC4/ESP.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 178:.\Generated_Source\PSoC4/ESP.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 179:.\Generated_Source\PSoC4/ESP.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 180:.\Generated_Source\PSoC4/ESP.c **** *
 181:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 182:.\Generated_Source\PSoC4/ESP.c **** *  None
 183:.\Generated_Source\PSoC4/ESP.c **** *
 184:.\Generated_Source\PSoC4/ESP.c **** * Return:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 6


 185:.\Generated_Source\PSoC4/ESP.c **** *  None
 186:.\Generated_Source\PSoC4/ESP.c **** *
 187:.\Generated_Source\PSoC4/ESP.c **** * Global variables:
 188:.\Generated_Source\PSoC4/ESP.c **** *  ESP_initVar - used to check initial configuration, modified
 189:.\Generated_Source\PSoC4/ESP.c **** *  on first function call.
 190:.\Generated_Source\PSoC4/ESP.c **** *
 191:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/ESP.c **** void ESP_Start(void)
 193:.\Generated_Source\PSoC4/ESP.c **** {
 102              		.loc 1 193 0
 103              		.cfi_startproc
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 194:.\Generated_Source\PSoC4/ESP.c ****     if (0u == ESP_initVar)
 110              		.loc 1 194 0
 111 0004 064B     		ldr	r3, .L7
 112 0006 1B78     		ldrb	r3, [r3]
 113 0008 002B     		cmp	r3, #0
 114 000a 04D1     		bne	.L6
 195:.\Generated_Source\PSoC4/ESP.c ****     {
 196:.\Generated_Source\PSoC4/ESP.c ****         ESP_Init();
 115              		.loc 1 196 0
 116 000c FFF7FEFF 		bl	ESP_Init
 197:.\Generated_Source\PSoC4/ESP.c ****         ESP_initVar = 1u; /* Component was initialized */
 117              		.loc 1 197 0
 118 0010 034B     		ldr	r3, .L7
 119 0012 0122     		mov	r2, #1
 120 0014 1A70     		strb	r2, [r3]
 121              	.L6:
 198:.\Generated_Source\PSoC4/ESP.c ****     }
 199:.\Generated_Source\PSoC4/ESP.c **** 
 200:.\Generated_Source\PSoC4/ESP.c ****     ESP_Enable();
 122              		.loc 1 200 0
 123 0016 FFF7FEFF 		bl	ESP_Enable
 201:.\Generated_Source\PSoC4/ESP.c **** }
 124              		.loc 1 201 0
 125 001a BD46     		mov	sp, r7
 126              		@ sp needed
 127 001c 80BD     		pop	{r7, pc}
 128              	.L8:
 129 001e C046     		.align	2
 130              	.L7:
 131 0020 00000000 		.word	ESP_initVar
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	ESP_Start, .-ESP_Start
 135              		.section	.text.ESP_Stop,"ax",%progbits
 136              		.align	2
 137              		.global	ESP_Stop
 138              		.code	16
 139              		.thumb_func
 140              		.type	ESP_Stop, %function
 141              	ESP_Stop:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 7


 142              	.LFB3:
 202:.\Generated_Source\PSoC4/ESP.c **** 
 203:.\Generated_Source\PSoC4/ESP.c **** 
 204:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 205:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_Stop
 206:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 207:.\Generated_Source\PSoC4/ESP.c **** *
 208:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 209:.\Generated_Source\PSoC4/ESP.c **** *  Disables the SCB component and its interrupt.
 210:.\Generated_Source\PSoC4/ESP.c **** *  It also disables all TX interrupt sources so as not to cause an unexpected
 211:.\Generated_Source\PSoC4/ESP.c **** *  interrupt trigger because after the component is enabled, the TX FIFO 
 212:.\Generated_Source\PSoC4/ESP.c **** *  is empty.
 213:.\Generated_Source\PSoC4/ESP.c **** *
 214:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 215:.\Generated_Source\PSoC4/ESP.c **** *  None
 216:.\Generated_Source\PSoC4/ESP.c **** *
 217:.\Generated_Source\PSoC4/ESP.c **** * Return:
 218:.\Generated_Source\PSoC4/ESP.c **** *  None
 219:.\Generated_Source\PSoC4/ESP.c **** * 
 220:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/ESP.c **** void ESP_Stop(void)
 222:.\Generated_Source\PSoC4/ESP.c **** {
 143              		.loc 1 222 0
 144              		.cfi_startproc
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 223:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_IRQ_INTERNAL)
 224:.\Generated_Source\PSoC4/ESP.c ****     ESP_DisableInt();
 151              		.loc 1 224 0
 152 0004 0B20     		mov	r0, #11
 153 0006 FFF7FEFF 		bl	CyIntDisable
 225:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_IRQ_INTERNAL) */
 226:.\Generated_Source\PSoC4/ESP.c **** 
 227:.\Generated_Source\PSoC4/ESP.c ****     /* Call Stop function specific to current operation mode */
 228:.\Generated_Source\PSoC4/ESP.c ****     ESP_ScbModeStop();
 154              		.loc 1 228 0
 155 000a FFF7FEFF 		bl	ESP_ScbModeStop
 229:.\Generated_Source\PSoC4/ESP.c **** 
 230:.\Generated_Source\PSoC4/ESP.c ****     /* Disable SCB IP */
 231:.\Generated_Source\PSoC4/ESP.c ****     ESP_CTRL_REG &= (uint32) ~ESP_CTRL_ENABLED;
 156              		.loc 1 231 0
 157 000e 074B     		ldr	r3, .L10
 158 0010 064A     		ldr	r2, .L10
 159 0012 1268     		ldr	r2, [r2]
 160 0014 5200     		lsl	r2, r2, #1
 161 0016 5208     		lsr	r2, r2, #1
 162 0018 1A60     		str	r2, [r3]
 232:.\Generated_Source\PSoC4/ESP.c **** 
 233:.\Generated_Source\PSoC4/ESP.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 234:.\Generated_Source\PSoC4/ESP.c ****     * interrupt trigger because after the component is enabled, the TX FIFO
 235:.\Generated_Source\PSoC4/ESP.c ****     * is empty.
 236:.\Generated_Source\PSoC4/ESP.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 237:.\Generated_Source\PSoC4/ESP.c ****     * sources when they are disabled. This can cause a code lock-up in the
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 8


 238:.\Generated_Source\PSoC4/ESP.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 239:.\Generated_Source\PSoC4/ESP.c ****     * is disabled.
 240:.\Generated_Source\PSoC4/ESP.c ****     */
 241:.\Generated_Source\PSoC4/ESP.c ****     ESP_SetTxInterruptMode(ESP_NO_INTR_SOURCES);
 163              		.loc 1 241 0
 164 001a 054B     		ldr	r3, .L10+4
 165 001c 0022     		mov	r2, #0
 166 001e 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/ESP.c **** 
 243:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_IRQ_INTERNAL)
 244:.\Generated_Source\PSoC4/ESP.c ****     ESP_ClearPendingInt();
 167              		.loc 1 244 0
 168 0020 0B20     		mov	r0, #11
 169 0022 FFF7FEFF 		bl	CyIntClearPending
 245:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_IRQ_INTERNAL) */
 246:.\Generated_Source\PSoC4/ESP.c **** }
 170              		.loc 1 246 0
 171 0026 BD46     		mov	sp, r7
 172              		@ sp needed
 173 0028 80BD     		pop	{r7, pc}
 174              	.L11:
 175 002a C046     		.align	2
 176              	.L10:
 177 002c 00000740 		.word	1074200576
 178 0030 880F0740 		.word	1074204552
 179              		.cfi_endproc
 180              	.LFE3:
 181              		.size	ESP_Stop, .-ESP_Stop
 182              		.section	.text.ESP_SetRxFifoLevel,"ax",%progbits
 183              		.align	2
 184              		.global	ESP_SetRxFifoLevel
 185              		.code	16
 186              		.thumb_func
 187              		.type	ESP_SetRxFifoLevel, %function
 188              	ESP_SetRxFifoLevel:
 189              	.LFB4:
 247:.\Generated_Source\PSoC4/ESP.c **** 
 248:.\Generated_Source\PSoC4/ESP.c **** 
 249:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_SetRxFifoLevel
 251:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 252:.\Generated_Source\PSoC4/ESP.c **** *
 253:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 254:.\Generated_Source\PSoC4/ESP.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 255:.\Generated_Source\PSoC4/ESP.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 256:.\Generated_Source\PSoC4/ESP.c **** *  interrupt request is generated.
 257:.\Generated_Source\PSoC4/ESP.c **** *
 258:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 259:.\Generated_Source\PSoC4/ESP.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 260:.\Generated_Source\PSoC4/ESP.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 261:.\Generated_Source\PSoC4/ESP.c **** *
 262:.\Generated_Source\PSoC4/ESP.c **** * Return:
 263:.\Generated_Source\PSoC4/ESP.c **** *  None
 264:.\Generated_Source\PSoC4/ESP.c **** *
 265:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 266:.\Generated_Source\PSoC4/ESP.c **** void ESP_SetRxFifoLevel(uint32 level)
 267:.\Generated_Source\PSoC4/ESP.c **** {
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 9


 190              		.loc 1 267 0
 191              		.cfi_startproc
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              		.cfi_def_cfa_offset 24
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]
 268:.\Generated_Source\PSoC4/ESP.c ****     uint32 rxFifoCtrl;
 269:.\Generated_Source\PSoC4/ESP.c **** 
 270:.\Generated_Source\PSoC4/ESP.c ****     rxFifoCtrl = ESP_RX_FIFO_CTRL_REG;
 201              		.loc 1 270 0
 202 0008 094B     		ldr	r3, .L13
 203 000a 1B68     		ldr	r3, [r3]
 204 000c FB60     		str	r3, [r7, #12]
 271:.\Generated_Source\PSoC4/ESP.c **** 
 272:.\Generated_Source\PSoC4/ESP.c ****     rxFifoCtrl &= ((uint32) ~ESP_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 205              		.loc 1 272 0
 206 000e FB68     		ldr	r3, [r7, #12]
 207 0010 0722     		mov	r2, #7
 208 0012 9343     		bic	r3, r2
 209 0014 FB60     		str	r3, [r7, #12]
 273:.\Generated_Source\PSoC4/ESP.c ****     rxFifoCtrl |= ((uint32) (ESP_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 210              		.loc 1 273 0
 211 0016 7B68     		ldr	r3, [r7, #4]
 212 0018 0722     		mov	r2, #7
 213 001a 1340     		and	r3, r2
 214 001c FA68     		ldr	r2, [r7, #12]
 215 001e 1343     		orr	r3, r2
 216 0020 FB60     		str	r3, [r7, #12]
 274:.\Generated_Source\PSoC4/ESP.c **** 
 275:.\Generated_Source\PSoC4/ESP.c ****     ESP_RX_FIFO_CTRL_REG = rxFifoCtrl;
 217              		.loc 1 275 0
 218 0022 034B     		ldr	r3, .L13
 219 0024 FA68     		ldr	r2, [r7, #12]
 220 0026 1A60     		str	r2, [r3]
 276:.\Generated_Source\PSoC4/ESP.c **** }
 221              		.loc 1 276 0
 222 0028 BD46     		mov	sp, r7
 223 002a 04B0     		add	sp, sp, #16
 224              		@ sp needed
 225 002c 80BD     		pop	{r7, pc}
 226              	.L14:
 227 002e C046     		.align	2
 228              	.L13:
 229 0030 04030740 		.word	1074201348
 230              		.cfi_endproc
 231              	.LFE4:
 232              		.size	ESP_SetRxFifoLevel, .-ESP_SetRxFifoLevel
 233              		.section	.text.ESP_SetTxFifoLevel,"ax",%progbits
 234              		.align	2
 235              		.global	ESP_SetTxFifoLevel
 236              		.code	16
 237              		.thumb_func
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 10


 238              		.type	ESP_SetTxFifoLevel, %function
 239              	ESP_SetTxFifoLevel:
 240              	.LFB5:
 277:.\Generated_Source\PSoC4/ESP.c **** 
 278:.\Generated_Source\PSoC4/ESP.c **** 
 279:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_SetTxFifoLevel
 281:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/ESP.c **** *
 283:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 284:.\Generated_Source\PSoC4/ESP.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 285:.\Generated_Source\PSoC4/ESP.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 286:.\Generated_Source\PSoC4/ESP.c **** *  interrupt request is generated.
 287:.\Generated_Source\PSoC4/ESP.c **** *
 288:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 289:.\Generated_Source\PSoC4/ESP.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 290:.\Generated_Source\PSoC4/ESP.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 291:.\Generated_Source\PSoC4/ESP.c **** *
 292:.\Generated_Source\PSoC4/ESP.c **** * Return:
 293:.\Generated_Source\PSoC4/ESP.c **** *  None
 294:.\Generated_Source\PSoC4/ESP.c **** *
 295:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 296:.\Generated_Source\PSoC4/ESP.c **** void ESP_SetTxFifoLevel(uint32 level)
 297:.\Generated_Source\PSoC4/ESP.c **** {
 241              		.loc 1 297 0
 242              		.cfi_startproc
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 84B0     		sub	sp, sp, #16
 248              		.cfi_def_cfa_offset 24
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 7860     		str	r0, [r7, #4]
 298:.\Generated_Source\PSoC4/ESP.c ****     uint32 txFifoCtrl;
 299:.\Generated_Source\PSoC4/ESP.c **** 
 300:.\Generated_Source\PSoC4/ESP.c ****     txFifoCtrl = ESP_TX_FIFO_CTRL_REG;
 252              		.loc 1 300 0
 253 0008 094B     		ldr	r3, .L16
 254 000a 1B68     		ldr	r3, [r3]
 255 000c FB60     		str	r3, [r7, #12]
 301:.\Generated_Source\PSoC4/ESP.c **** 
 302:.\Generated_Source\PSoC4/ESP.c ****     txFifoCtrl &= ((uint32) ~ESP_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 256              		.loc 1 302 0
 257 000e FB68     		ldr	r3, [r7, #12]
 258 0010 0722     		mov	r2, #7
 259 0012 9343     		bic	r3, r2
 260 0014 FB60     		str	r3, [r7, #12]
 303:.\Generated_Source\PSoC4/ESP.c ****     txFifoCtrl |= ((uint32) (ESP_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 261              		.loc 1 303 0
 262 0016 7B68     		ldr	r3, [r7, #4]
 263 0018 0722     		mov	r2, #7
 264 001a 1340     		and	r3, r2
 265 001c FA68     		ldr	r2, [r7, #12]
 266 001e 1343     		orr	r3, r2
 267 0020 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 11


 304:.\Generated_Source\PSoC4/ESP.c **** 
 305:.\Generated_Source\PSoC4/ESP.c ****     ESP_TX_FIFO_CTRL_REG = txFifoCtrl;
 268              		.loc 1 305 0
 269 0022 034B     		ldr	r3, .L16
 270 0024 FA68     		ldr	r2, [r7, #12]
 271 0026 1A60     		str	r2, [r3]
 306:.\Generated_Source\PSoC4/ESP.c **** }
 272              		.loc 1 306 0
 273 0028 BD46     		mov	sp, r7
 274 002a 04B0     		add	sp, sp, #16
 275              		@ sp needed
 276 002c 80BD     		pop	{r7, pc}
 277              	.L17:
 278 002e C046     		.align	2
 279              	.L16:
 280 0030 04020740 		.word	1074201092
 281              		.cfi_endproc
 282              	.LFE5:
 283              		.size	ESP_SetTxFifoLevel, .-ESP_SetTxFifoLevel
 284              		.section	.text.ESP_SetCustomInterruptHandler,"ax",%progbits
 285              		.align	2
 286              		.global	ESP_SetCustomInterruptHandler
 287              		.code	16
 288              		.thumb_func
 289              		.type	ESP_SetCustomInterruptHandler, %function
 290              	ESP_SetCustomInterruptHandler:
 291              	.LFB6:
 307:.\Generated_Source\PSoC4/ESP.c **** 
 308:.\Generated_Source\PSoC4/ESP.c **** 
 309:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_IRQ_INTERNAL)
 310:.\Generated_Source\PSoC4/ESP.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/ESP.c ****     * Function Name: ESP_SetCustomInterruptHandler
 312:.\Generated_Source\PSoC4/ESP.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/ESP.c ****     *
 314:.\Generated_Source\PSoC4/ESP.c ****     * Summary:
 315:.\Generated_Source\PSoC4/ESP.c ****     *  Registers a function to be called by the internal interrupt handler.
 316:.\Generated_Source\PSoC4/ESP.c ****     *  First the function that is registered is called, then the internal interrupt
 317:.\Generated_Source\PSoC4/ESP.c ****     *  handler performs any operation such as software buffer management functions
 318:.\Generated_Source\PSoC4/ESP.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 319:.\Generated_Source\PSoC4/ESP.c ****     *  the software buffer operations. Only one custom handler is supported, which
 320:.\Generated_Source\PSoC4/ESP.c ****     *  is the function provided by the most recent call.
 321:.\Generated_Source\PSoC4/ESP.c ****     *  At the initialization time no custom handler is registered.
 322:.\Generated_Source\PSoC4/ESP.c ****     *
 323:.\Generated_Source\PSoC4/ESP.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/ESP.c ****     *  func: Pointer to the function to register.
 325:.\Generated_Source\PSoC4/ESP.c ****     *        The value NULL indicates to remove the current custom interrupt
 326:.\Generated_Source\PSoC4/ESP.c ****     *        handler.
 327:.\Generated_Source\PSoC4/ESP.c ****     *
 328:.\Generated_Source\PSoC4/ESP.c ****     * Return:
 329:.\Generated_Source\PSoC4/ESP.c ****     *  None
 330:.\Generated_Source\PSoC4/ESP.c ****     *
 331:.\Generated_Source\PSoC4/ESP.c ****     *******************************************************************************/
 332:.\Generated_Source\PSoC4/ESP.c ****     void ESP_SetCustomInterruptHandler(void (*func)(void))
 333:.\Generated_Source\PSoC4/ESP.c ****     {
 292              		.loc 1 333 0
 293              		.cfi_startproc
 294 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 12


 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 82B0     		sub	sp, sp, #8
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 334:.\Generated_Source\PSoC4/ESP.c ****     #if !defined (CY_REMOVE_ESP_CUSTOM_INTR_HANDLER)
 335:.\Generated_Source\PSoC4/ESP.c ****         ESP_customIntrHandler = func; /* Register interrupt handler */
 303              		.loc 1 335 0
 304 0008 024B     		ldr	r3, .L19
 305 000a 7A68     		ldr	r2, [r7, #4]
 306 000c 1A60     		str	r2, [r3]
 336:.\Generated_Source\PSoC4/ESP.c ****     #else
 337:.\Generated_Source\PSoC4/ESP.c ****         if (NULL != func)
 338:.\Generated_Source\PSoC4/ESP.c ****         {
 339:.\Generated_Source\PSoC4/ESP.c ****             /* Suppress compiler warning */
 340:.\Generated_Source\PSoC4/ESP.c ****         }
 341:.\Generated_Source\PSoC4/ESP.c ****     #endif /* !defined (CY_REMOVE_ESP_CUSTOM_INTR_HANDLER) */
 342:.\Generated_Source\PSoC4/ESP.c ****     }
 307              		.loc 1 342 0
 308 000e BD46     		mov	sp, r7
 309 0010 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0012 80BD     		pop	{r7, pc}
 312              	.L20:
 313              		.align	2
 314              	.L19:
 315 0014 00000000 		.word	ESP_customIntrHandler
 316              		.cfi_endproc
 317              	.LFE6:
 318              		.size	ESP_SetCustomInterruptHandler, .-ESP_SetCustomInterruptHandler
 319              		.section	.text.ESP_ScbEnableIntr,"ax",%progbits
 320              		.align	2
 321              		.code	16
 322              		.thumb_func
 323              		.type	ESP_ScbEnableIntr, %function
 324              	ESP_ScbEnableIntr:
 325              	.LFB7:
 343:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_IRQ_INTERNAL) */
 344:.\Generated_Source\PSoC4/ESP.c **** 
 345:.\Generated_Source\PSoC4/ESP.c **** 
 346:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 347:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_ScbModeEnableIntr
 348:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 349:.\Generated_Source\PSoC4/ESP.c **** *
 350:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 351:.\Generated_Source\PSoC4/ESP.c **** *  Enables an interrupt for a specific mode.
 352:.\Generated_Source\PSoC4/ESP.c **** *
 353:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 354:.\Generated_Source\PSoC4/ESP.c **** *  None
 355:.\Generated_Source\PSoC4/ESP.c **** *
 356:.\Generated_Source\PSoC4/ESP.c **** * Return:
 357:.\Generated_Source\PSoC4/ESP.c **** *  None
 358:.\Generated_Source\PSoC4/ESP.c **** *
 359:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 13


 360:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbEnableIntr(void)
 361:.\Generated_Source\PSoC4/ESP.c **** {
 326              		.loc 1 361 0
 327              		.cfi_startproc
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 362:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_IRQ_INTERNAL)
 363:.\Generated_Source\PSoC4/ESP.c ****     /* Enable interrupt in NVIC */
 364:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 365:.\Generated_Source\PSoC4/ESP.c ****         if (0u != ESP_scbEnableIntr)
 366:.\Generated_Source\PSoC4/ESP.c ****         {
 367:.\Generated_Source\PSoC4/ESP.c ****             ESP_EnableInt();
 368:.\Generated_Source\PSoC4/ESP.c ****         }
 369:.\Generated_Source\PSoC4/ESP.c **** 
 370:.\Generated_Source\PSoC4/ESP.c ****     #else
 371:.\Generated_Source\PSoC4/ESP.c ****         ESP_EnableInt();
 334              		.loc 1 371 0
 335 0004 0B20     		mov	r0, #11
 336 0006 FFF7FEFF 		bl	CyIntEnable
 372:.\Generated_Source\PSoC4/ESP.c **** 
 373:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 374:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_IRQ_INTERNAL) */
 375:.\Generated_Source\PSoC4/ESP.c **** }
 337              		.loc 1 375 0
 338 000a BD46     		mov	sp, r7
 339              		@ sp needed
 340 000c 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE7:
 343              		.size	ESP_ScbEnableIntr, .-ESP_ScbEnableIntr
 344              		.section	.text.ESP_ScbModePostEnable,"ax",%progbits
 345              		.align	2
 346              		.code	16
 347              		.thumb_func
 348              		.type	ESP_ScbModePostEnable, %function
 349              	ESP_ScbModePostEnable:
 350              	.LFB8:
 376:.\Generated_Source\PSoC4/ESP.c **** 
 377:.\Generated_Source\PSoC4/ESP.c **** 
 378:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 379:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_ScbModePostEnable
 380:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
 381:.\Generated_Source\PSoC4/ESP.c **** *
 382:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 383:.\Generated_Source\PSoC4/ESP.c **** *  Calls the PostEnable function for a specific operation mode.
 384:.\Generated_Source\PSoC4/ESP.c **** *
 385:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 386:.\Generated_Source\PSoC4/ESP.c **** *  None
 387:.\Generated_Source\PSoC4/ESP.c **** *
 388:.\Generated_Source\PSoC4/ESP.c **** * Return:
 389:.\Generated_Source\PSoC4/ESP.c **** *  None
 390:.\Generated_Source\PSoC4/ESP.c **** *
 391:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 14


 392:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbModePostEnable(void)
 393:.\Generated_Source\PSoC4/ESP.c **** {
 351              		.loc 1 393 0
 352              		.cfi_startproc
 353 0000 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 395:.\Generated_Source\PSoC4/ESP.c **** #if (!ESP_CY_SCBIP_V1)
 396:.\Generated_Source\PSoC4/ESP.c ****     if (ESP_SCB_MODE_SPI_RUNTM_CFG)
 397:.\Generated_Source\PSoC4/ESP.c ****     {
 398:.\Generated_Source\PSoC4/ESP.c ****         ESP_SpiPostEnable();
 399:.\Generated_Source\PSoC4/ESP.c ****     }
 400:.\Generated_Source\PSoC4/ESP.c ****     else if (ESP_SCB_MODE_UART_RUNTM_CFG)
 401:.\Generated_Source\PSoC4/ESP.c ****     {
 402:.\Generated_Source\PSoC4/ESP.c ****         ESP_UartPostEnable();
 403:.\Generated_Source\PSoC4/ESP.c ****     }
 404:.\Generated_Source\PSoC4/ESP.c ****     else
 405:.\Generated_Source\PSoC4/ESP.c ****     {
 406:.\Generated_Source\PSoC4/ESP.c ****         /* Unknown mode: do nothing */
 407:.\Generated_Source\PSoC4/ESP.c ****     }
 408:.\Generated_Source\PSoC4/ESP.c **** #endif /* (!ESP_CY_SCBIP_V1) */
 409:.\Generated_Source\PSoC4/ESP.c **** 
 410:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_SPI_CONST_CFG)
 411:.\Generated_Source\PSoC4/ESP.c ****     ESP_SpiPostEnable();
 412:.\Generated_Source\PSoC4/ESP.c **** 
 413:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_UART_CONST_CFG)
 414:.\Generated_Source\PSoC4/ESP.c ****     ESP_UartPostEnable();
 359              		.loc 1 414 0
 360 0004 FFF7FEFF 		bl	ESP_UartPostEnable
 415:.\Generated_Source\PSoC4/ESP.c **** 
 416:.\Generated_Source\PSoC4/ESP.c **** #else
 417:.\Generated_Source\PSoC4/ESP.c ****     /* Unknown mode: do nothing */
 418:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 419:.\Generated_Source\PSoC4/ESP.c **** }
 361              		.loc 1 419 0
 362 0008 BD46     		mov	sp, r7
 363              		@ sp needed
 364 000a 80BD     		pop	{r7, pc}
 365              		.cfi_endproc
 366              	.LFE8:
 367              		.size	ESP_ScbModePostEnable, .-ESP_ScbModePostEnable
 368              		.section	.text.ESP_ScbModeStop,"ax",%progbits
 369              		.align	2
 370              		.code	16
 371              		.thumb_func
 372              		.type	ESP_ScbModeStop, %function
 373              	ESP_ScbModeStop:
 374              	.LFB9:
 420:.\Generated_Source\PSoC4/ESP.c **** 
 421:.\Generated_Source\PSoC4/ESP.c **** 
 422:.\Generated_Source\PSoC4/ESP.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/ESP.c **** * Function Name: ESP_ScbModeStop
 424:.\Generated_Source\PSoC4/ESP.c **** ********************************************************************************
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 15


 425:.\Generated_Source\PSoC4/ESP.c **** *
 426:.\Generated_Source\PSoC4/ESP.c **** * Summary:
 427:.\Generated_Source\PSoC4/ESP.c **** *  Calls the Stop function for a specific operation mode.
 428:.\Generated_Source\PSoC4/ESP.c **** *
 429:.\Generated_Source\PSoC4/ESP.c **** * Parameters:
 430:.\Generated_Source\PSoC4/ESP.c **** *  None
 431:.\Generated_Source\PSoC4/ESP.c **** *
 432:.\Generated_Source\PSoC4/ESP.c **** * Return:
 433:.\Generated_Source\PSoC4/ESP.c **** *  None
 434:.\Generated_Source\PSoC4/ESP.c **** *
 435:.\Generated_Source\PSoC4/ESP.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/ESP.c **** static void ESP_ScbModeStop(void)
 437:.\Generated_Source\PSoC4/ESP.c **** {
 375              		.loc 1 437 0
 376              		.cfi_startproc
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 438:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 439:.\Generated_Source\PSoC4/ESP.c ****     if (ESP_SCB_MODE_I2C_RUNTM_CFG)
 440:.\Generated_Source\PSoC4/ESP.c ****     {
 441:.\Generated_Source\PSoC4/ESP.c ****         ESP_I2CStop();
 442:.\Generated_Source\PSoC4/ESP.c ****     }
 443:.\Generated_Source\PSoC4/ESP.c ****     else if (ESP_SCB_MODE_EZI2C_RUNTM_CFG)
 444:.\Generated_Source\PSoC4/ESP.c ****     {
 445:.\Generated_Source\PSoC4/ESP.c ****         ESP_EzI2CStop();
 446:.\Generated_Source\PSoC4/ESP.c ****     }
 447:.\Generated_Source\PSoC4/ESP.c **** #if (!ESP_CY_SCBIP_V1)
 448:.\Generated_Source\PSoC4/ESP.c ****     else if (ESP_SCB_MODE_SPI_RUNTM_CFG)
 449:.\Generated_Source\PSoC4/ESP.c ****     {
 450:.\Generated_Source\PSoC4/ESP.c ****         ESP_SpiStop();
 451:.\Generated_Source\PSoC4/ESP.c ****     }
 452:.\Generated_Source\PSoC4/ESP.c ****     else if (ESP_SCB_MODE_UART_RUNTM_CFG)
 453:.\Generated_Source\PSoC4/ESP.c ****     {
 454:.\Generated_Source\PSoC4/ESP.c ****         ESP_UartStop();
 455:.\Generated_Source\PSoC4/ESP.c ****     }
 456:.\Generated_Source\PSoC4/ESP.c **** #endif /* (!ESP_CY_SCBIP_V1) */
 457:.\Generated_Source\PSoC4/ESP.c ****     else
 458:.\Generated_Source\PSoC4/ESP.c ****     {
 459:.\Generated_Source\PSoC4/ESP.c ****         /* Unknown mode: do nothing */
 460:.\Generated_Source\PSoC4/ESP.c ****     }
 461:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_I2C_CONST_CFG)
 462:.\Generated_Source\PSoC4/ESP.c ****     ESP_I2CStop();
 463:.\Generated_Source\PSoC4/ESP.c **** 
 464:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_EZI2C_CONST_CFG)
 465:.\Generated_Source\PSoC4/ESP.c ****     ESP_EzI2CStop();
 466:.\Generated_Source\PSoC4/ESP.c **** 
 467:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_SPI_CONST_CFG)
 468:.\Generated_Source\PSoC4/ESP.c ****     ESP_SpiStop();
 469:.\Generated_Source\PSoC4/ESP.c **** 
 470:.\Generated_Source\PSoC4/ESP.c **** #elif (ESP_SCB_MODE_UART_CONST_CFG)
 471:.\Generated_Source\PSoC4/ESP.c ****     ESP_UartStop();
 383              		.loc 1 471 0
 384 0004 FFF7FEFF 		bl	ESP_UartStop
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 16


 472:.\Generated_Source\PSoC4/ESP.c **** 
 473:.\Generated_Source\PSoC4/ESP.c **** #else
 474:.\Generated_Source\PSoC4/ESP.c ****     /* Unknown mode: do nothing */
 475:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 476:.\Generated_Source\PSoC4/ESP.c **** }
 385              		.loc 1 476 0
 386 0008 BD46     		mov	sp, r7
 387              		@ sp needed
 388 000a 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE9:
 391              		.size	ESP_ScbModeStop, .-ESP_ScbModeStop
 392              		.section	.text.ESP_I2CSlaveNackGeneration,"ax",%progbits
 393              		.align	2
 394              		.global	ESP_I2CSlaveNackGeneration
 395              		.code	16
 396              		.thumb_func
 397              		.type	ESP_I2CSlaveNackGeneration, %function
 398              	ESP_I2CSlaveNackGeneration:
 399              	.LFB10:
 477:.\Generated_Source\PSoC4/ESP.c **** 
 478:.\Generated_Source\PSoC4/ESP.c **** 
 479:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_SCB_MODE_UNCONFIG_CONST_CFG)
 480:.\Generated_Source\PSoC4/ESP.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/ESP.c ****     * Function Name: ESP_SetPins
 482:.\Generated_Source\PSoC4/ESP.c ****     ********************************************************************************
 483:.\Generated_Source\PSoC4/ESP.c ****     *
 484:.\Generated_Source\PSoC4/ESP.c ****     * Summary:
 485:.\Generated_Source\PSoC4/ESP.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 486:.\Generated_Source\PSoC4/ESP.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 487:.\Generated_Source\PSoC4/ESP.c ****     *  initialization function calls it.
 488:.\Generated_Source\PSoC4/ESP.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 489:.\Generated_Source\PSoC4/ESP.c ****     *  is selected in design time.
 490:.\Generated_Source\PSoC4/ESP.c ****     *
 491:.\Generated_Source\PSoC4/ESP.c ****     * Parameters:
 492:.\Generated_Source\PSoC4/ESP.c ****     *  mode:      Mode of SCB operation.
 493:.\Generated_Source\PSoC4/ESP.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 494:.\Generated_Source\PSoC4/ESP.c ****     *             modes.
 495:.\Generated_Source\PSoC4/ESP.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 496:.\Generated_Source\PSoC4/ESP.c ****     *
 497:.\Generated_Source\PSoC4/ESP.c ****     * Return:
 498:.\Generated_Source\PSoC4/ESP.c ****     *  None
 499:.\Generated_Source\PSoC4/ESP.c ****     *
 500:.\Generated_Source\PSoC4/ESP.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/ESP.c ****     void ESP_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 502:.\Generated_Source\PSoC4/ESP.c ****     {
 503:.\Generated_Source\PSoC4/ESP.c ****         uint32 hsiomSel [ESP_SCB_PINS_NUMBER];
 504:.\Generated_Source\PSoC4/ESP.c ****         uint32 pinsDm   [ESP_SCB_PINS_NUMBER];
 505:.\Generated_Source\PSoC4/ESP.c **** 
 506:.\Generated_Source\PSoC4/ESP.c ****     #if (!ESP_CY_SCBIP_V1)
 507:.\Generated_Source\PSoC4/ESP.c ****         uint32 pinsInBuf = 0u;
 508:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (!ESP_CY_SCBIP_V1) */
 509:.\Generated_Source\PSoC4/ESP.c **** 
 510:.\Generated_Source\PSoC4/ESP.c ****         uint32 i;
 511:.\Generated_Source\PSoC4/ESP.c **** 
 512:.\Generated_Source\PSoC4/ESP.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 513:.\Generated_Source\PSoC4/ESP.c ****         for (i = 0u; i < ESP_SCB_PINS_NUMBER; i++)
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 17


 514:.\Generated_Source\PSoC4/ESP.c ****         {
 515:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[i]  = ESP_HSIOM_DEF_SEL;
 516:.\Generated_Source\PSoC4/ESP.c ****             pinsDm[i]    = ESP_PIN_DM_ALG_HIZ;
 517:.\Generated_Source\PSoC4/ESP.c ****         }
 518:.\Generated_Source\PSoC4/ESP.c **** 
 519:.\Generated_Source\PSoC4/ESP.c ****         if ((ESP_SCB_MODE_I2C   == mode) ||
 520:.\Generated_Source\PSoC4/ESP.c ****            (ESP_SCB_MODE_EZI2C == mode))
 521:.\Generated_Source\PSoC4/ESP.c ****         {
 522:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_HSIOM_I2C_SEL;
 523:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_HSIOM_I2C_SEL;
 524:.\Generated_Source\PSoC4/ESP.c **** 
 525:.\Generated_Source\PSoC4/ESP.c ****             pinsDm[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_PIN_DM_OD_LO;
 526:.\Generated_Source\PSoC4/ESP.c ****             pinsDm[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_PIN_DM_OD_LO;
 527:.\Generated_Source\PSoC4/ESP.c ****         }
 528:.\Generated_Source\PSoC4/ESP.c ****     #if (!ESP_CY_SCBIP_V1)
 529:.\Generated_Source\PSoC4/ESP.c ****         else if (ESP_SCB_MODE_SPI == mode)
 530:.\Generated_Source\PSoC4/ESP.c ****         {
 531:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 532:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 533:.\Generated_Source\PSoC4/ESP.c ****             hsiomSel[ESP_SCLK_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 534:.\Generated_Source\PSoC4/ESP.c **** 
 535:.\Generated_Source\PSoC4/ESP.c ****             if (ESP_SPI_SLAVE == subMode)
 536:.\Generated_Source\PSoC4/ESP.c ****             {
 537:.\Generated_Source\PSoC4/ESP.c ****                 /* Slave */
 538:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 539:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_PIN_DM_STRONG;
 540:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_SCLK_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 541:.\Generated_Source\PSoC4/ESP.c **** 
 542:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SS0_PIN)
 543:.\Generated_Source\PSoC4/ESP.c ****                 /* Only SS0 is valid choice for Slave */
 544:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel[ESP_SS0_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 545:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm  [ESP_SS0_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 546:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SS0_PIN) */
 547:.\Generated_Source\PSoC4/ESP.c **** 
 548:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_TX_SDA_MISO_PIN)
 549:.\Generated_Source\PSoC4/ESP.c ****                 /* Disable input buffer */
 550:.\Generated_Source\PSoC4/ESP.c ****                  pinsInBuf |= ESP_TX_SDA_MISO_PIN_MASK;
 551:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_TX_SDA_MISO_PIN) */
 552:.\Generated_Source\PSoC4/ESP.c ****             }
 553:.\Generated_Source\PSoC4/ESP.c ****             else /* (Master) */
 554:.\Generated_Source\PSoC4/ESP.c ****             {
 555:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_PIN_DM_STRONG;
 556:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 557:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm[ESP_SCLK_PIN_INDEX] = ESP_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/ESP.c **** 
 559:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SS0_PIN)
 560:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel [ESP_SS0_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 561:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm   [ESP_SS0_PIN_INDEX] = ESP_PIN_DM_STRONG;
 562:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_SS0_PIN_MASK;
 563:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SS0_PIN) */
 564:.\Generated_Source\PSoC4/ESP.c **** 
 565:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SS1_PIN)
 566:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel [ESP_SS1_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 567:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm   [ESP_SS1_PIN_INDEX] = ESP_PIN_DM_STRONG;
 568:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_SS1_PIN_MASK;
 569:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SS1_PIN) */
 570:.\Generated_Source\PSoC4/ESP.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 18


 571:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SS2_PIN)
 572:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel [ESP_SS2_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 573:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm   [ESP_SS2_PIN_INDEX] = ESP_PIN_DM_STRONG;
 574:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_SS2_PIN_MASK;
 575:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SS2_PIN) */
 576:.\Generated_Source\PSoC4/ESP.c **** 
 577:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SS3_PIN)
 578:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel [ESP_SS3_PIN_INDEX] = ESP_HSIOM_SPI_SEL;
 579:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm   [ESP_SS3_PIN_INDEX] = ESP_PIN_DM_STRONG;
 580:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_SS3_PIN_MASK;
 581:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SS3_PIN) */
 582:.\Generated_Source\PSoC4/ESP.c **** 
 583:.\Generated_Source\PSoC4/ESP.c ****                 /* Disable input buffers */
 584:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_RX_SCL_MOSI_PIN)
 585:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_RX_SCL_MOSI_PIN_MASK;
 586:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_RX_SCL_MOSI_PIN) */
 587:.\Generated_Source\PSoC4/ESP.c **** 
 588:.\Generated_Source\PSoC4/ESP.c ****              #if (ESP_RX_WAKE_SCL_MOSI_PIN)
 589:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_RX_WAKE_SCL_MOSI_PIN_MASK;
 590:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_RX_WAKE_SCL_MOSI_PIN) */
 591:.\Generated_Source\PSoC4/ESP.c **** 
 592:.\Generated_Source\PSoC4/ESP.c ****             #if (ESP_SCLK_PIN)
 593:.\Generated_Source\PSoC4/ESP.c ****                 pinsInBuf |= ESP_SCLK_PIN_MASK;
 594:.\Generated_Source\PSoC4/ESP.c ****             #endif /* (ESP_SCLK_PIN) */
 595:.\Generated_Source\PSoC4/ESP.c ****             }
 596:.\Generated_Source\PSoC4/ESP.c ****         }
 597:.\Generated_Source\PSoC4/ESP.c ****         else /* UART */
 598:.\Generated_Source\PSoC4/ESP.c ****         {
 599:.\Generated_Source\PSoC4/ESP.c ****             if (ESP_UART_MODE_SMARTCARD == subMode)
 600:.\Generated_Source\PSoC4/ESP.c ****             {
 601:.\Generated_Source\PSoC4/ESP.c ****                 /* SmartCard */
 602:.\Generated_Source\PSoC4/ESP.c ****                 hsiomSel[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_HSIOM_UART_SEL;
 603:.\Generated_Source\PSoC4/ESP.c ****                 pinsDm  [ESP_TX_SDA_MISO_PIN_INDEX] = ESP_PIN_DM_OD_LO;
 604:.\Generated_Source\PSoC4/ESP.c ****             }
 605:.\Generated_Source\PSoC4/ESP.c ****             else /* Standard or IrDA */
 606:.\Generated_Source\PSoC4/ESP.c ****             {
 607:.\Generated_Source\PSoC4/ESP.c ****                 if (0u != (ESP_UART_RX_PIN_ENABLE & uartEnableMask))
 608:.\Generated_Source\PSoC4/ESP.c ****                 {
 609:.\Generated_Source\PSoC4/ESP.c ****                     hsiomSel[ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_HSIOM_UART_SEL;
 610:.\Generated_Source\PSoC4/ESP.c ****                     pinsDm  [ESP_RX_SCL_MOSI_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 611:.\Generated_Source\PSoC4/ESP.c ****                 }
 612:.\Generated_Source\PSoC4/ESP.c **** 
 613:.\Generated_Source\PSoC4/ESP.c ****                 if (0u != (ESP_UART_TX_PIN_ENABLE & uartEnableMask))
 614:.\Generated_Source\PSoC4/ESP.c ****                 {
 615:.\Generated_Source\PSoC4/ESP.c ****                     hsiomSel[ESP_TX_SDA_MISO_PIN_INDEX] = ESP_HSIOM_UART_SEL;
 616:.\Generated_Source\PSoC4/ESP.c ****                     pinsDm  [ESP_TX_SDA_MISO_PIN_INDEX] = ESP_PIN_DM_STRONG;
 617:.\Generated_Source\PSoC4/ESP.c **** 
 618:.\Generated_Source\PSoC4/ESP.c ****                 #if (ESP_TX_SDA_MISO_PIN)
 619:.\Generated_Source\PSoC4/ESP.c ****                      pinsInBuf |= ESP_TX_SDA_MISO_PIN_MASK;
 620:.\Generated_Source\PSoC4/ESP.c ****                 #endif /* (ESP_TX_SDA_MISO_PIN) */
 621:.\Generated_Source\PSoC4/ESP.c ****                 }
 622:.\Generated_Source\PSoC4/ESP.c **** 
 623:.\Generated_Source\PSoC4/ESP.c ****             #if !(ESP_CY_SCBIP_V0 || ESP_CY_SCBIP_V1)
 624:.\Generated_Source\PSoC4/ESP.c ****                 if (ESP_UART_MODE_STD == subMode)
 625:.\Generated_Source\PSoC4/ESP.c ****                 {
 626:.\Generated_Source\PSoC4/ESP.c ****                     if (0u != (ESP_UART_CTS_PIN_ENABLE & uartEnableMask))
 627:.\Generated_Source\PSoC4/ESP.c ****                     {
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 19


 628:.\Generated_Source\PSoC4/ESP.c ****                         /* CTS input is multiplexed with SCLK */
 629:.\Generated_Source\PSoC4/ESP.c ****                         hsiomSel[ESP_SCLK_PIN_INDEX] = ESP_HSIOM_UART_SEL;
 630:.\Generated_Source\PSoC4/ESP.c ****                         pinsDm  [ESP_SCLK_PIN_INDEX] = ESP_PIN_DM_DIG_HIZ;
 631:.\Generated_Source\PSoC4/ESP.c ****                     }
 632:.\Generated_Source\PSoC4/ESP.c **** 
 633:.\Generated_Source\PSoC4/ESP.c ****                     if (0u != (ESP_UART_RTS_PIN_ENABLE & uartEnableMask))
 634:.\Generated_Source\PSoC4/ESP.c ****                     {
 635:.\Generated_Source\PSoC4/ESP.c ****                         /* RTS output is multiplexed with SS0 */
 636:.\Generated_Source\PSoC4/ESP.c ****                         hsiomSel[ESP_SS0_PIN_INDEX] = ESP_HSIOM_UART_SEL;
 637:.\Generated_Source\PSoC4/ESP.c ****                         pinsDm  [ESP_SS0_PIN_INDEX] = ESP_PIN_DM_STRONG;
 638:.\Generated_Source\PSoC4/ESP.c **** 
 639:.\Generated_Source\PSoC4/ESP.c ****                     #if (ESP_SS0_PIN)
 640:.\Generated_Source\PSoC4/ESP.c ****                         /* Disable input buffer */
 641:.\Generated_Source\PSoC4/ESP.c ****                         pinsInBuf |= ESP_SS0_PIN_MASK;
 642:.\Generated_Source\PSoC4/ESP.c ****                     #endif /* (ESP_SS0_PIN) */
 643:.\Generated_Source\PSoC4/ESP.c ****                     }
 644:.\Generated_Source\PSoC4/ESP.c ****                 }
 645:.\Generated_Source\PSoC4/ESP.c ****             #endif /* !(ESP_CY_SCBIP_V0 || ESP_CY_SCBIP_V1) */
 646:.\Generated_Source\PSoC4/ESP.c ****             }
 647:.\Generated_Source\PSoC4/ESP.c ****         }
 648:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (!ESP_CY_SCBIP_V1) */
 649:.\Generated_Source\PSoC4/ESP.c **** 
 650:.\Generated_Source\PSoC4/ESP.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 651:.\Generated_Source\PSoC4/ESP.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 652:.\Generated_Source\PSoC4/ESP.c **** 
 653:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_RX_WAKE_SCL_MOSI_PIN)
 654:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_RX_WAKE_SCL_MOSI_HSIOM_REG,
 655:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 656:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_RX_WAKE_SCL_MOSI_HSIOM_POS,
 657:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 658:.\Generated_Source\PSoC4/ESP.c **** 
 659:.\Generated_Source\PSoC4/ESP.c ****         ESP_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 660:.\Generated_Source\PSoC4/ESP.c ****                                                                pinsDm[ESP_RX_WAKE_SCL_MOSI_PIN_INDE
 661:.\Generated_Source\PSoC4/ESP.c **** 
 662:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 663:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 664:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_RX_WAKE_SCL_MOSI_PIN_MASK)));
 665:.\Generated_Source\PSoC4/ESP.c **** 
 666:.\Generated_Source\PSoC4/ESP.c ****          /* Set interrupt on falling edge */
 667:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INCFG_TYPE(ESP_RX_WAKE_SCL_MOSI_INTCFG_REG,
 668:.\Generated_Source\PSoC4/ESP.c ****                                         ESP_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 669:.\Generated_Source\PSoC4/ESP.c ****                                         ESP_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 670:.\Generated_Source\PSoC4/ESP.c ****                                         ESP_INTCFG_TYPE_FALLING_EDGE);
 671:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_RX_WAKE_SCL_MOSI_PIN) */
 672:.\Generated_Source\PSoC4/ESP.c **** 
 673:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_RX_SCL_MOSI_PIN)
 674:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_RX_SCL_MOSI_HSIOM_REG,
 675:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_RX_SCL_MOSI_HSIOM_MASK,
 676:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_RX_SCL_MOSI_HSIOM_POS,
 677:.\Generated_Source\PSoC4/ESP.c ****                                         hsiomSel[ESP_RX_SCL_MOSI_PIN_INDEX]);
 678:.\Generated_Source\PSoC4/ESP.c **** 
 679:.\Generated_Source\PSoC4/ESP.c ****         ESP_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[ESP_RX_SCL_MOSI_PIN_INDEX]);
 680:.\Generated_Source\PSoC4/ESP.c **** 
 681:.\Generated_Source\PSoC4/ESP.c ****     #if (!ESP_CY_SCBIP_V1)
 682:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 683:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_uart_rx_i2c_scl_spi_mosi_MASK,
 684:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_RX_SCL_MOSI_PIN_MASK)));
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 20


 685:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (!ESP_CY_SCBIP_V1) */
 686:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_RX_SCL_MOSI_PIN) */
 687:.\Generated_Source\PSoC4/ESP.c **** 
 688:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_TX_SDA_MISO_PIN)
 689:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_TX_SDA_MISO_HSIOM_REG,
 690:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_TX_SDA_MISO_HSIOM_MASK,
 691:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_TX_SDA_MISO_HSIOM_POS,
 692:.\Generated_Source\PSoC4/ESP.c ****                                         hsiomSel[ESP_TX_SDA_MISO_PIN_INDEX]);
 693:.\Generated_Source\PSoC4/ESP.c **** 
 694:.\Generated_Source\PSoC4/ESP.c ****         ESP_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[ESP_TX_SDA_MISO_PIN_INDEX]);
 695:.\Generated_Source\PSoC4/ESP.c **** 
 696:.\Generated_Source\PSoC4/ESP.c ****     #if (!ESP_CY_SCBIP_V1)
 697:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_uart_tx_i2c_sda_spi_miso_INP_DIS,
 698:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_uart_tx_i2c_sda_spi_miso_MASK,
 699:.\Generated_Source\PSoC4/ESP.c ****                                     (0u != (pinsInBuf & ESP_TX_SDA_MISO_PIN_MASK)));
 700:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (!ESP_CY_SCBIP_V1) */
 701:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_RX_SCL_MOSI_PIN) */
 702:.\Generated_Source\PSoC4/ESP.c **** 
 703:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SCLK_PIN)
 704:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_SCLK_HSIOM_REG,
 705:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SCLK_HSIOM_MASK,
 706:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SCLK_HSIOM_POS,
 707:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_SCLK_PIN_INDEX]);
 708:.\Generated_Source\PSoC4/ESP.c **** 
 709:.\Generated_Source\PSoC4/ESP.c ****         ESP_spi_sclk_SetDriveMode((uint8) pinsDm[ESP_SCLK_PIN_INDEX]);
 710:.\Generated_Source\PSoC4/ESP.c **** 
 711:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_spi_sclk_INP_DIS,
 712:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_spi_sclk_MASK,
 713:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_SCLK_PIN_MASK)));
 714:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SCLK_PIN) */
 715:.\Generated_Source\PSoC4/ESP.c **** 
 716:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SS0_PIN)
 717:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_SS0_HSIOM_REG,
 718:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS0_HSIOM_MASK,
 719:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS0_HSIOM_POS,
 720:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_SS0_PIN_INDEX]);
 721:.\Generated_Source\PSoC4/ESP.c **** 
 722:.\Generated_Source\PSoC4/ESP.c ****         ESP_spi_ss0_SetDriveMode((uint8) pinsDm[ESP_SS0_PIN_INDEX]);
 723:.\Generated_Source\PSoC4/ESP.c **** 
 724:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_spi_ss0_INP_DIS,
 725:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_spi_ss0_MASK,
 726:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_SS0_PIN_MASK)));
 727:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SS0_PIN) */
 728:.\Generated_Source\PSoC4/ESP.c **** 
 729:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SS1_PIN)
 730:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_SS1_HSIOM_REG,
 731:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS1_HSIOM_MASK,
 732:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS1_HSIOM_POS,
 733:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_SS1_PIN_INDEX]);
 734:.\Generated_Source\PSoC4/ESP.c **** 
 735:.\Generated_Source\PSoC4/ESP.c ****         ESP_spi_ss1_SetDriveMode((uint8) pinsDm[ESP_SS1_PIN_INDEX]);
 736:.\Generated_Source\PSoC4/ESP.c **** 
 737:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_spi_ss1_INP_DIS,
 738:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_spi_ss1_MASK,
 739:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_SS1_PIN_MASK)));
 740:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SS1_PIN) */
 741:.\Generated_Source\PSoC4/ESP.c **** 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 21


 742:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SS2_PIN)
 743:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_SS2_HSIOM_REG,
 744:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS2_HSIOM_MASK,
 745:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS2_HSIOM_POS,
 746:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_SS2_PIN_INDEX]);
 747:.\Generated_Source\PSoC4/ESP.c **** 
 748:.\Generated_Source\PSoC4/ESP.c ****         ESP_spi_ss2_SetDriveMode((uint8) pinsDm[ESP_SS2_PIN_INDEX]);
 749:.\Generated_Source\PSoC4/ESP.c **** 
 750:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_spi_ss2_INP_DIS,
 751:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_spi_ss2_MASK,
 752:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_SS2_PIN_MASK)));
 753:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SS2_PIN) */
 754:.\Generated_Source\PSoC4/ESP.c **** 
 755:.\Generated_Source\PSoC4/ESP.c ****     #if (ESP_SS3_PIN)
 756:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_HSIOM_SEL(ESP_SS3_HSIOM_REG,
 757:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS3_HSIOM_MASK,
 758:.\Generated_Source\PSoC4/ESP.c ****                                        ESP_SS3_HSIOM_POS,
 759:.\Generated_Source\PSoC4/ESP.c ****                                        hsiomSel[ESP_SS3_PIN_INDEX]);
 760:.\Generated_Source\PSoC4/ESP.c **** 
 761:.\Generated_Source\PSoC4/ESP.c ****         ESP_spi_ss3_SetDriveMode((uint8) pinsDm[ESP_SS3_PIN_INDEX]);
 762:.\Generated_Source\PSoC4/ESP.c **** 
 763:.\Generated_Source\PSoC4/ESP.c ****         ESP_SET_INP_DIS(ESP_spi_ss3_INP_DIS,
 764:.\Generated_Source\PSoC4/ESP.c ****                                      ESP_spi_ss3_MASK,
 765:.\Generated_Source\PSoC4/ESP.c ****                                      (0u != (pinsInBuf & ESP_SS3_PIN_MASK)));
 766:.\Generated_Source\PSoC4/ESP.c ****     #endif /* (ESP_SS3_PIN) */
 767:.\Generated_Source\PSoC4/ESP.c ****     }
 768:.\Generated_Source\PSoC4/ESP.c **** 
 769:.\Generated_Source\PSoC4/ESP.c **** #endif /* (ESP_SCB_MODE_UNCONFIG_CONST_CFG) */
 770:.\Generated_Source\PSoC4/ESP.c **** 
 771:.\Generated_Source\PSoC4/ESP.c **** 
 772:.\Generated_Source\PSoC4/ESP.c **** #if (ESP_CY_SCBIP_V0 || ESP_CY_SCBIP_V1)
 773:.\Generated_Source\PSoC4/ESP.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC4/ESP.c ****     * Function Name: ESP_I2CSlaveNackGeneration
 775:.\Generated_Source\PSoC4/ESP.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC4/ESP.c ****     *
 777:.\Generated_Source\PSoC4/ESP.c ****     * Summary:
 778:.\Generated_Source\PSoC4/ESP.c ****     *  Sets command to generate NACK to the address or data.
 779:.\Generated_Source\PSoC4/ESP.c ****     *
 780:.\Generated_Source\PSoC4/ESP.c ****     * Parameters:
 781:.\Generated_Source\PSoC4/ESP.c ****     *  None
 782:.\Generated_Source\PSoC4/ESP.c ****     *
 783:.\Generated_Source\PSoC4/ESP.c ****     * Return:
 784:.\Generated_Source\PSoC4/ESP.c ****     *  None
 785:.\Generated_Source\PSoC4/ESP.c ****     *
 786:.\Generated_Source\PSoC4/ESP.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/ESP.c ****     void ESP_I2CSlaveNackGeneration(void)
 788:.\Generated_Source\PSoC4/ESP.c ****     {
 400              		.loc 1 788 0
 401              		.cfi_startproc
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 789:.\Generated_Source\PSoC4/ESP.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 790:.\Generated_Source\PSoC4/ESP.c ****         if ((0u != (ESP_CTRL_REG & ESP_CTRL_EC_AM_MODE)) &&
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 22


 408              		.loc 1 790 0
 409 0004 0E4B     		ldr	r3, .L26
 410 0006 1A68     		ldr	r2, [r3]
 411 0008 8023     		mov	r3, #128
 412 000a 5B00     		lsl	r3, r3, #1
 413 000c 1340     		and	r3, r2
 414 000e 12D0     		beq	.L25
 791:.\Generated_Source\PSoC4/ESP.c ****             (0u == (ESP_I2C_CTRL_REG & ESP_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 415              		.loc 1 791 0 discriminator 1
 416 0010 0C4B     		ldr	r3, .L26+4
 417 0012 1A68     		ldr	r2, [r3]
 418 0014 8023     		mov	r3, #128
 419 0016 DB01     		lsl	r3, r3, #7
 420 0018 1340     		and	r3, r2
 790:.\Generated_Source\PSoC4/ESP.c ****             (0u == (ESP_I2C_CTRL_REG & ESP_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 421              		.loc 1 790 0 discriminator 1
 422 001a 0CD1     		bne	.L25
 792:.\Generated_Source\PSoC4/ESP.c ****         {
 793:.\Generated_Source\PSoC4/ESP.c ****             /* Toggle EC_AM before NACK generation */
 794:.\Generated_Source\PSoC4/ESP.c ****             ESP_CTRL_REG &= ~ESP_CTRL_EC_AM_MODE;
 423              		.loc 1 794 0
 424 001c 084B     		ldr	r3, .L26
 425 001e 084A     		ldr	r2, .L26
 426 0020 1268     		ldr	r2, [r2]
 427 0022 0949     		ldr	r1, .L26+8
 428 0024 0A40     		and	r2, r1
 429 0026 1A60     		str	r2, [r3]
 795:.\Generated_Source\PSoC4/ESP.c ****             ESP_CTRL_REG |=  ESP_CTRL_EC_AM_MODE;
 430              		.loc 1 795 0
 431 0028 054B     		ldr	r3, .L26
 432 002a 054A     		ldr	r2, .L26
 433 002c 1268     		ldr	r2, [r2]
 434 002e 8021     		mov	r1, #128
 435 0030 4900     		lsl	r1, r1, #1
 436 0032 0A43     		orr	r2, r1
 437 0034 1A60     		str	r2, [r3]
 438              	.L25:
 796:.\Generated_Source\PSoC4/ESP.c ****         }
 797:.\Generated_Source\PSoC4/ESP.c **** 
 798:.\Generated_Source\PSoC4/ESP.c ****         ESP_I2C_SLAVE_CMD_REG = ESP_I2C_SLAVE_CMD_S_NACK;
 439              		.loc 1 798 0
 440 0036 054B     		ldr	r3, .L26+12
 441 0038 0222     		mov	r2, #2
 442 003a 1A60     		str	r2, [r3]
 799:.\Generated_Source\PSoC4/ESP.c ****     }
 443              		.loc 1 799 0
 444 003c BD46     		mov	sp, r7
 445              		@ sp needed
 446 003e 80BD     		pop	{r7, pc}
 447              	.L27:
 448              		.align	2
 449              	.L26:
 450 0040 00000740 		.word	1074200576
 451 0044 60000740 		.word	1074200672
 452 0048 FFFEFFFF 		.word	-257
 453 004c 6C000740 		.word	1074200684
 454              		.cfi_endproc
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 23


 455              	.LFE10:
 456              		.size	ESP_I2CSlaveNackGeneration, .-ESP_I2CSlaveNackGeneration
 457              		.text
 458              	.Letext0:
 459              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 460              		.section	.debug_info,"",%progbits
 461              	.Ldebug_info0:
 462 0000 F0010000 		.4byte	0x1f0
 463 0004 0400     		.2byte	0x4
 464 0006 00000000 		.4byte	.Ldebug_abbrev0
 465 000a 04       		.byte	0x4
 466 000b 01       		.uleb128 0x1
 467 000c CB000000 		.4byte	.LASF33
 468 0010 01       		.byte	0x1
 469 0011 32020000 		.4byte	.LASF34
 470 0015 59010000 		.4byte	.LASF35
 471 0019 00000000 		.4byte	.Ldebug_ranges0+0
 472 001d 00000000 		.4byte	0
 473 0021 00000000 		.4byte	.Ldebug_line0
 474 0025 02       		.uleb128 0x2
 475 0026 01       		.byte	0x1
 476 0027 06       		.byte	0x6
 477 0028 7A020000 		.4byte	.LASF0
 478 002c 02       		.uleb128 0x2
 479 002d 01       		.byte	0x1
 480 002e 08       		.byte	0x8
 481 002f 69000000 		.4byte	.LASF1
 482 0033 02       		.uleb128 0x2
 483 0034 02       		.byte	0x2
 484 0035 05       		.byte	0x5
 485 0036 56020000 		.4byte	.LASF2
 486 003a 02       		.uleb128 0x2
 487 003b 02       		.byte	0x2
 488 003c 07       		.byte	0x7
 489 003d 47000000 		.4byte	.LASF3
 490 0041 02       		.uleb128 0x2
 491 0042 04       		.byte	0x4
 492 0043 05       		.byte	0x5
 493 0044 71020000 		.4byte	.LASF4
 494 0048 02       		.uleb128 0x2
 495 0049 04       		.byte	0x4
 496 004a 07       		.byte	0x7
 497 004b 8A000000 		.4byte	.LASF5
 498 004f 02       		.uleb128 0x2
 499 0050 08       		.byte	0x8
 500 0051 05       		.byte	0x5
 501 0052 24020000 		.4byte	.LASF6
 502 0056 02       		.uleb128 0x2
 503 0057 08       		.byte	0x8
 504 0058 07       		.byte	0x7
 505 0059 E5010000 		.4byte	.LASF7
 506 005d 03       		.uleb128 0x3
 507 005e 04       		.byte	0x4
 508 005f 05       		.byte	0x5
 509 0060 696E7400 		.ascii	"int\000"
 510 0064 02       		.uleb128 0x2
 511 0065 04       		.byte	0x4
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 24


 512 0066 07       		.byte	0x7
 513 0067 D8010000 		.4byte	.LASF8
 514 006b 04       		.uleb128 0x4
 515 006c 9C000000 		.4byte	.LASF9
 516 0070 02       		.byte	0x2
 517 0071 A1       		.byte	0xa1
 518 0072 2C000000 		.4byte	0x2c
 519 0076 04       		.uleb128 0x4
 520 0077 A0010000 		.4byte	.LASF10
 521 007b 02       		.byte	0x2
 522 007c A3       		.byte	0xa3
 523 007d 48000000 		.4byte	0x48
 524 0081 02       		.uleb128 0x2
 525 0082 04       		.byte	0x4
 526 0083 04       		.byte	0x4
 527 0084 63000000 		.4byte	.LASF11
 528 0088 02       		.uleb128 0x2
 529 0089 08       		.byte	0x8
 530 008a 04       		.byte	0x4
 531 008b BF000000 		.4byte	.LASF12
 532 008f 02       		.uleb128 0x2
 533 0090 01       		.byte	0x1
 534 0091 08       		.byte	0x8
 535 0092 51020000 		.4byte	.LASF13
 536 0096 05       		.uleb128 0x5
 537 0097 00000000 		.4byte	.LASF14
 538 009b 02       		.byte	0x2
 539 009c 4D01     		.2byte	0x14d
 540 009e A2000000 		.4byte	0xa2
 541 00a2 06       		.uleb128 0x6
 542 00a3 76000000 		.4byte	0x76
 543 00a7 07       		.uleb128 0x7
 544 00a8 04       		.byte	0x4
 545 00a9 AD000000 		.4byte	0xad
 546 00ad 08       		.uleb128 0x8
 547 00ae 02       		.uleb128 0x2
 548 00af 04       		.byte	0x4
 549 00b0 07       		.byte	0x7
 550 00b1 1B020000 		.4byte	.LASF15
 551 00b5 09       		.uleb128 0x9
 552 00b6 5A000000 		.4byte	.LASF16
 553 00ba 01       		.byte	0x1
 554 00bb 66       		.byte	0x66
 555 00bc 00000000 		.4byte	.LFB0
 556 00c0 0C000000 		.4byte	.LFE0-.LFB0
 557 00c4 01       		.uleb128 0x1
 558 00c5 9C       		.byte	0x9c
 559 00c6 09       		.uleb128 0x9
 560 00c7 A2000000 		.4byte	.LASF17
 561 00cb 01       		.byte	0x1
 562 00cc 92       		.byte	0x92
 563 00cd 00000000 		.4byte	.LFB1
 564 00d1 24000000 		.4byte	.LFE1-.LFB1
 565 00d5 01       		.uleb128 0x1
 566 00d6 9C       		.byte	0x9c
 567 00d7 09       		.uleb128 0x9
 568 00d8 CE010000 		.4byte	.LASF18
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 25


 569 00dc 01       		.byte	0x1
 570 00dd C0       		.byte	0xc0
 571 00de 00000000 		.4byte	.LFB2
 572 00e2 24000000 		.4byte	.LFE2-.LFB2
 573 00e6 01       		.uleb128 0x1
 574 00e7 9C       		.byte	0x9c
 575 00e8 09       		.uleb128 0x9
 576 00e9 A7010000 		.4byte	.LASF19
 577 00ed 01       		.byte	0x1
 578 00ee DD       		.byte	0xdd
 579 00ef 00000000 		.4byte	.LFB3
 580 00f3 34000000 		.4byte	.LFE3-.LFB3
 581 00f7 01       		.uleb128 0x1
 582 00f8 9C       		.byte	0x9c
 583 00f9 0A       		.uleb128 0xa
 584 00fa 77000000 		.4byte	.LASF20
 585 00fe 01       		.byte	0x1
 586 00ff 0A01     		.2byte	0x10a
 587 0101 00000000 		.4byte	.LFB4
 588 0105 34000000 		.4byte	.LFE4-.LFB4
 589 0109 01       		.uleb128 0x1
 590 010a 9C       		.byte	0x9c
 591 010b 2E010000 		.4byte	0x12e
 592 010f 0B       		.uleb128 0xb
 593 0110 60020000 		.4byte	.LASF22
 594 0114 01       		.byte	0x1
 595 0115 0A01     		.2byte	0x10a
 596 0117 76000000 		.4byte	0x76
 597 011b 02       		.uleb128 0x2
 598 011c 91       		.byte	0x91
 599 011d 6C       		.sleb128 -20
 600 011e 0C       		.uleb128 0xc
 601 011f 66020000 		.4byte	.LASF23
 602 0123 01       		.byte	0x1
 603 0124 0C01     		.2byte	0x10c
 604 0126 76000000 		.4byte	0x76
 605 012a 02       		.uleb128 0x2
 606 012b 91       		.byte	0x91
 607 012c 74       		.sleb128 -12
 608 012d 00       		.byte	0
 609 012e 0A       		.uleb128 0xa
 610 012f 08020000 		.4byte	.LASF21
 611 0133 01       		.byte	0x1
 612 0134 2801     		.2byte	0x128
 613 0136 00000000 		.4byte	.LFB5
 614 013a 34000000 		.4byte	.LFE5-.LFB5
 615 013e 01       		.uleb128 0x1
 616 013f 9C       		.byte	0x9c
 617 0140 63010000 		.4byte	0x163
 618 0144 0B       		.uleb128 0xb
 619 0145 60020000 		.4byte	.LASF22
 620 0149 01       		.byte	0x1
 621 014a 2801     		.2byte	0x128
 622 014c 76000000 		.4byte	0x76
 623 0150 02       		.uleb128 0x2
 624 0151 91       		.byte	0x91
 625 0152 6C       		.sleb128 -20
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 26


 626 0153 0C       		.uleb128 0xc
 627 0154 95010000 		.4byte	.LASF24
 628 0158 01       		.byte	0x1
 629 0159 2A01     		.2byte	0x12a
 630 015b 76000000 		.4byte	0x76
 631 015f 02       		.uleb128 0x2
 632 0160 91       		.byte	0x91
 633 0161 74       		.sleb128 -12
 634 0162 00       		.byte	0
 635 0163 0A       		.uleb128 0xa
 636 0164 B0010000 		.4byte	.LASF25
 637 0168 01       		.byte	0x1
 638 0169 4C01     		.2byte	0x14c
 639 016b 00000000 		.4byte	.LFB6
 640 016f 18000000 		.4byte	.LFE6-.LFB6
 641 0173 01       		.uleb128 0x1
 642 0174 9C       		.byte	0x9c
 643 0175 89010000 		.4byte	0x189
 644 0179 0B       		.uleb128 0xb
 645 017a C6000000 		.4byte	.LASF26
 646 017e 01       		.byte	0x1
 647 017f 4C01     		.2byte	0x14c
 648 0181 A7000000 		.4byte	0xa7
 649 0185 02       		.uleb128 0x2
 650 0186 91       		.byte	0x91
 651 0187 74       		.sleb128 -12
 652 0188 00       		.byte	0
 653 0189 0D       		.uleb128 0xd
 654 018a AD000000 		.4byte	.LASF27
 655 018e 01       		.byte	0x1
 656 018f 6801     		.2byte	0x168
 657 0191 00000000 		.4byte	.LFB7
 658 0195 0E000000 		.4byte	.LFE7-.LFB7
 659 0199 01       		.uleb128 0x1
 660 019a 9C       		.byte	0x9c
 661 019b 0D       		.uleb128 0xd
 662 019c 86020000 		.4byte	.LASF28
 663 01a0 01       		.byte	0x1
 664 01a1 8801     		.2byte	0x188
 665 01a3 00000000 		.4byte	.LFB8
 666 01a7 0C000000 		.4byte	.LFE8-.LFB8
 667 01ab 01       		.uleb128 0x1
 668 01ac 9C       		.byte	0x9c
 669 01ad 0D       		.uleb128 0xd
 670 01ae 1C000000 		.4byte	.LASF29
 671 01b2 01       		.byte	0x1
 672 01b3 B401     		.2byte	0x1b4
 673 01b5 00000000 		.4byte	.LFB9
 674 01b9 0C000000 		.4byte	.LFE9-.LFB9
 675 01bd 01       		.uleb128 0x1
 676 01be 9C       		.byte	0x9c
 677 01bf 0E       		.uleb128 0xe
 678 01c0 2C000000 		.4byte	.LASF30
 679 01c4 01       		.byte	0x1
 680 01c5 1303     		.2byte	0x313
 681 01c7 00000000 		.4byte	.LFB10
 682 01cb 50000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 27


 683 01cf 01       		.uleb128 0x1
 684 01d0 9C       		.byte	0x9c
 685 01d1 0F       		.uleb128 0xf
 686 01d2 FC010000 		.4byte	.LASF31
 687 01d6 01       		.byte	0x1
 688 01d7 42       		.byte	0x42
 689 01d8 6B000000 		.4byte	0x6b
 690 01dc 05       		.uleb128 0x5
 691 01dd 03       		.byte	0x3
 692 01de 00000000 		.4byte	ESP_initVar
 693 01e2 0F       		.uleb128 0xf
 694 01e3 06000000 		.4byte	.LASF32
 695 01e7 01       		.byte	0x1
 696 01e8 46       		.byte	0x46
 697 01e9 A7000000 		.4byte	0xa7
 698 01ed 05       		.uleb128 0x5
 699 01ee 03       		.byte	0x3
 700 01ef 00000000 		.4byte	ESP_customIntrHandler
 701 01f3 00       		.byte	0
 702              		.section	.debug_abbrev,"",%progbits
 703              	.Ldebug_abbrev0:
 704 0000 01       		.uleb128 0x1
 705 0001 11       		.uleb128 0x11
 706 0002 01       		.byte	0x1
 707 0003 25       		.uleb128 0x25
 708 0004 0E       		.uleb128 0xe
 709 0005 13       		.uleb128 0x13
 710 0006 0B       		.uleb128 0xb
 711 0007 03       		.uleb128 0x3
 712 0008 0E       		.uleb128 0xe
 713 0009 1B       		.uleb128 0x1b
 714 000a 0E       		.uleb128 0xe
 715 000b 55       		.uleb128 0x55
 716 000c 17       		.uleb128 0x17
 717 000d 11       		.uleb128 0x11
 718 000e 01       		.uleb128 0x1
 719 000f 10       		.uleb128 0x10
 720 0010 17       		.uleb128 0x17
 721 0011 00       		.byte	0
 722 0012 00       		.byte	0
 723 0013 02       		.uleb128 0x2
 724 0014 24       		.uleb128 0x24
 725 0015 00       		.byte	0
 726 0016 0B       		.uleb128 0xb
 727 0017 0B       		.uleb128 0xb
 728 0018 3E       		.uleb128 0x3e
 729 0019 0B       		.uleb128 0xb
 730 001a 03       		.uleb128 0x3
 731 001b 0E       		.uleb128 0xe
 732 001c 00       		.byte	0
 733 001d 00       		.byte	0
 734 001e 03       		.uleb128 0x3
 735 001f 24       		.uleb128 0x24
 736 0020 00       		.byte	0
 737 0021 0B       		.uleb128 0xb
 738 0022 0B       		.uleb128 0xb
 739 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 28


 740 0024 0B       		.uleb128 0xb
 741 0025 03       		.uleb128 0x3
 742 0026 08       		.uleb128 0x8
 743 0027 00       		.byte	0
 744 0028 00       		.byte	0
 745 0029 04       		.uleb128 0x4
 746 002a 16       		.uleb128 0x16
 747 002b 00       		.byte	0
 748 002c 03       		.uleb128 0x3
 749 002d 0E       		.uleb128 0xe
 750 002e 3A       		.uleb128 0x3a
 751 002f 0B       		.uleb128 0xb
 752 0030 3B       		.uleb128 0x3b
 753 0031 0B       		.uleb128 0xb
 754 0032 49       		.uleb128 0x49
 755 0033 13       		.uleb128 0x13
 756 0034 00       		.byte	0
 757 0035 00       		.byte	0
 758 0036 05       		.uleb128 0x5
 759 0037 16       		.uleb128 0x16
 760 0038 00       		.byte	0
 761 0039 03       		.uleb128 0x3
 762 003a 0E       		.uleb128 0xe
 763 003b 3A       		.uleb128 0x3a
 764 003c 0B       		.uleb128 0xb
 765 003d 3B       		.uleb128 0x3b
 766 003e 05       		.uleb128 0x5
 767 003f 49       		.uleb128 0x49
 768 0040 13       		.uleb128 0x13
 769 0041 00       		.byte	0
 770 0042 00       		.byte	0
 771 0043 06       		.uleb128 0x6
 772 0044 35       		.uleb128 0x35
 773 0045 00       		.byte	0
 774 0046 49       		.uleb128 0x49
 775 0047 13       		.uleb128 0x13
 776 0048 00       		.byte	0
 777 0049 00       		.byte	0
 778 004a 07       		.uleb128 0x7
 779 004b 0F       		.uleb128 0xf
 780 004c 00       		.byte	0
 781 004d 0B       		.uleb128 0xb
 782 004e 0B       		.uleb128 0xb
 783 004f 49       		.uleb128 0x49
 784 0050 13       		.uleb128 0x13
 785 0051 00       		.byte	0
 786 0052 00       		.byte	0
 787 0053 08       		.uleb128 0x8
 788 0054 15       		.uleb128 0x15
 789 0055 00       		.byte	0
 790 0056 27       		.uleb128 0x27
 791 0057 19       		.uleb128 0x19
 792 0058 00       		.byte	0
 793 0059 00       		.byte	0
 794 005a 09       		.uleb128 0x9
 795 005b 2E       		.uleb128 0x2e
 796 005c 00       		.byte	0
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 29


 797 005d 3F       		.uleb128 0x3f
 798 005e 19       		.uleb128 0x19
 799 005f 03       		.uleb128 0x3
 800 0060 0E       		.uleb128 0xe
 801 0061 3A       		.uleb128 0x3a
 802 0062 0B       		.uleb128 0xb
 803 0063 3B       		.uleb128 0x3b
 804 0064 0B       		.uleb128 0xb
 805 0065 27       		.uleb128 0x27
 806 0066 19       		.uleb128 0x19
 807 0067 11       		.uleb128 0x11
 808 0068 01       		.uleb128 0x1
 809 0069 12       		.uleb128 0x12
 810 006a 06       		.uleb128 0x6
 811 006b 40       		.uleb128 0x40
 812 006c 18       		.uleb128 0x18
 813 006d 9642     		.uleb128 0x2116
 814 006f 19       		.uleb128 0x19
 815 0070 00       		.byte	0
 816 0071 00       		.byte	0
 817 0072 0A       		.uleb128 0xa
 818 0073 2E       		.uleb128 0x2e
 819 0074 01       		.byte	0x1
 820 0075 3F       		.uleb128 0x3f
 821 0076 19       		.uleb128 0x19
 822 0077 03       		.uleb128 0x3
 823 0078 0E       		.uleb128 0xe
 824 0079 3A       		.uleb128 0x3a
 825 007a 0B       		.uleb128 0xb
 826 007b 3B       		.uleb128 0x3b
 827 007c 05       		.uleb128 0x5
 828 007d 27       		.uleb128 0x27
 829 007e 19       		.uleb128 0x19
 830 007f 11       		.uleb128 0x11
 831 0080 01       		.uleb128 0x1
 832 0081 12       		.uleb128 0x12
 833 0082 06       		.uleb128 0x6
 834 0083 40       		.uleb128 0x40
 835 0084 18       		.uleb128 0x18
 836 0085 9742     		.uleb128 0x2117
 837 0087 19       		.uleb128 0x19
 838 0088 01       		.uleb128 0x1
 839 0089 13       		.uleb128 0x13
 840 008a 00       		.byte	0
 841 008b 00       		.byte	0
 842 008c 0B       		.uleb128 0xb
 843 008d 05       		.uleb128 0x5
 844 008e 00       		.byte	0
 845 008f 03       		.uleb128 0x3
 846 0090 0E       		.uleb128 0xe
 847 0091 3A       		.uleb128 0x3a
 848 0092 0B       		.uleb128 0xb
 849 0093 3B       		.uleb128 0x3b
 850 0094 05       		.uleb128 0x5
 851 0095 49       		.uleb128 0x49
 852 0096 13       		.uleb128 0x13
 853 0097 02       		.uleb128 0x2
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 30


 854 0098 18       		.uleb128 0x18
 855 0099 00       		.byte	0
 856 009a 00       		.byte	0
 857 009b 0C       		.uleb128 0xc
 858 009c 34       		.uleb128 0x34
 859 009d 00       		.byte	0
 860 009e 03       		.uleb128 0x3
 861 009f 0E       		.uleb128 0xe
 862 00a0 3A       		.uleb128 0x3a
 863 00a1 0B       		.uleb128 0xb
 864 00a2 3B       		.uleb128 0x3b
 865 00a3 05       		.uleb128 0x5
 866 00a4 49       		.uleb128 0x49
 867 00a5 13       		.uleb128 0x13
 868 00a6 02       		.uleb128 0x2
 869 00a7 18       		.uleb128 0x18
 870 00a8 00       		.byte	0
 871 00a9 00       		.byte	0
 872 00aa 0D       		.uleb128 0xd
 873 00ab 2E       		.uleb128 0x2e
 874 00ac 00       		.byte	0
 875 00ad 03       		.uleb128 0x3
 876 00ae 0E       		.uleb128 0xe
 877 00af 3A       		.uleb128 0x3a
 878 00b0 0B       		.uleb128 0xb
 879 00b1 3B       		.uleb128 0x3b
 880 00b2 05       		.uleb128 0x5
 881 00b3 27       		.uleb128 0x27
 882 00b4 19       		.uleb128 0x19
 883 00b5 11       		.uleb128 0x11
 884 00b6 01       		.uleb128 0x1
 885 00b7 12       		.uleb128 0x12
 886 00b8 06       		.uleb128 0x6
 887 00b9 40       		.uleb128 0x40
 888 00ba 18       		.uleb128 0x18
 889 00bb 9642     		.uleb128 0x2116
 890 00bd 19       		.uleb128 0x19
 891 00be 00       		.byte	0
 892 00bf 00       		.byte	0
 893 00c0 0E       		.uleb128 0xe
 894 00c1 2E       		.uleb128 0x2e
 895 00c2 00       		.byte	0
 896 00c3 3F       		.uleb128 0x3f
 897 00c4 19       		.uleb128 0x19
 898 00c5 03       		.uleb128 0x3
 899 00c6 0E       		.uleb128 0xe
 900 00c7 3A       		.uleb128 0x3a
 901 00c8 0B       		.uleb128 0xb
 902 00c9 3B       		.uleb128 0x3b
 903 00ca 05       		.uleb128 0x5
 904 00cb 27       		.uleb128 0x27
 905 00cc 19       		.uleb128 0x19
 906 00cd 11       		.uleb128 0x11
 907 00ce 01       		.uleb128 0x1
 908 00cf 12       		.uleb128 0x12
 909 00d0 06       		.uleb128 0x6
 910 00d1 40       		.uleb128 0x40
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 31


 911 00d2 18       		.uleb128 0x18
 912 00d3 9742     		.uleb128 0x2117
 913 00d5 19       		.uleb128 0x19
 914 00d6 00       		.byte	0
 915 00d7 00       		.byte	0
 916 00d8 0F       		.uleb128 0xf
 917 00d9 34       		.uleb128 0x34
 918 00da 00       		.byte	0
 919 00db 03       		.uleb128 0x3
 920 00dc 0E       		.uleb128 0xe
 921 00dd 3A       		.uleb128 0x3a
 922 00de 0B       		.uleb128 0xb
 923 00df 3B       		.uleb128 0x3b
 924 00e0 0B       		.uleb128 0xb
 925 00e1 49       		.uleb128 0x49
 926 00e2 13       		.uleb128 0x13
 927 00e3 3F       		.uleb128 0x3f
 928 00e4 19       		.uleb128 0x19
 929 00e5 02       		.uleb128 0x2
 930 00e6 18       		.uleb128 0x18
 931 00e7 00       		.byte	0
 932 00e8 00       		.byte	0
 933 00e9 00       		.byte	0
 934              		.section	.debug_aranges,"",%progbits
 935 0000 6C000000 		.4byte	0x6c
 936 0004 0200     		.2byte	0x2
 937 0006 00000000 		.4byte	.Ldebug_info0
 938 000a 04       		.byte	0x4
 939 000b 00       		.byte	0
 940 000c 0000     		.2byte	0
 941 000e 0000     		.2byte	0
 942 0010 00000000 		.4byte	.LFB0
 943 0014 0C000000 		.4byte	.LFE0-.LFB0
 944 0018 00000000 		.4byte	.LFB1
 945 001c 24000000 		.4byte	.LFE1-.LFB1
 946 0020 00000000 		.4byte	.LFB2
 947 0024 24000000 		.4byte	.LFE2-.LFB2
 948 0028 00000000 		.4byte	.LFB3
 949 002c 34000000 		.4byte	.LFE3-.LFB3
 950 0030 00000000 		.4byte	.LFB4
 951 0034 34000000 		.4byte	.LFE4-.LFB4
 952 0038 00000000 		.4byte	.LFB5
 953 003c 34000000 		.4byte	.LFE5-.LFB5
 954 0040 00000000 		.4byte	.LFB6
 955 0044 18000000 		.4byte	.LFE6-.LFB6
 956 0048 00000000 		.4byte	.LFB7
 957 004c 0E000000 		.4byte	.LFE7-.LFB7
 958 0050 00000000 		.4byte	.LFB8
 959 0054 0C000000 		.4byte	.LFE8-.LFB8
 960 0058 00000000 		.4byte	.LFB9
 961 005c 0C000000 		.4byte	.LFE9-.LFB9
 962 0060 00000000 		.4byte	.LFB10
 963 0064 50000000 		.4byte	.LFE10-.LFB10
 964 0068 00000000 		.4byte	0
 965 006c 00000000 		.4byte	0
 966              		.section	.debug_ranges,"",%progbits
 967              	.Ldebug_ranges0:
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 32


 968 0000 00000000 		.4byte	.LFB0
 969 0004 0C000000 		.4byte	.LFE0
 970 0008 00000000 		.4byte	.LFB1
 971 000c 24000000 		.4byte	.LFE1
 972 0010 00000000 		.4byte	.LFB2
 973 0014 24000000 		.4byte	.LFE2
 974 0018 00000000 		.4byte	.LFB3
 975 001c 34000000 		.4byte	.LFE3
 976 0020 00000000 		.4byte	.LFB4
 977 0024 34000000 		.4byte	.LFE4
 978 0028 00000000 		.4byte	.LFB5
 979 002c 34000000 		.4byte	.LFE5
 980 0030 00000000 		.4byte	.LFB6
 981 0034 18000000 		.4byte	.LFE6
 982 0038 00000000 		.4byte	.LFB7
 983 003c 0E000000 		.4byte	.LFE7
 984 0040 00000000 		.4byte	.LFB8
 985 0044 0C000000 		.4byte	.LFE8
 986 0048 00000000 		.4byte	.LFB9
 987 004c 0C000000 		.4byte	.LFE9
 988 0050 00000000 		.4byte	.LFB10
 989 0054 50000000 		.4byte	.LFE10
 990 0058 00000000 		.4byte	0
 991 005c 00000000 		.4byte	0
 992              		.section	.debug_line,"",%progbits
 993              	.Ldebug_line0:
 994 0000 4D010000 		.section	.debug_str,"MS",%progbits,1
 994      02005900 
 994      00000201 
 994      FB0E0D00 
 994      01010101 
 995              	.LASF14:
 996 0000 72656733 		.ascii	"reg32\000"
 996      3200
 997              	.LASF32:
 998 0006 4553505F 		.ascii	"ESP_customIntrHandler\000"
 998      63757374 
 998      6F6D496E 
 998      74724861 
 998      6E646C65 
 999              	.LASF29:
 1000 001c 4553505F 		.ascii	"ESP_ScbModeStop\000"
 1000      5363624D 
 1000      6F646553 
 1000      746F7000 
 1001              	.LASF30:
 1002 002c 4553505F 		.ascii	"ESP_I2CSlaveNackGeneration\000"
 1002      49324353 
 1002      6C617665 
 1002      4E61636B 
 1002      47656E65 
 1003              	.LASF3:
 1004 0047 73686F72 		.ascii	"short unsigned int\000"
 1004      7420756E 
 1004      7369676E 
 1004      65642069 
 1004      6E7400
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 33


 1005              	.LASF16:
 1006 005a 4553505F 		.ascii	"ESP_Init\000"
 1006      496E6974 
 1006      00
 1007              	.LASF11:
 1008 0063 666C6F61 		.ascii	"float\000"
 1008      7400
 1009              	.LASF1:
 1010 0069 756E7369 		.ascii	"unsigned char\000"
 1010      676E6564 
 1010      20636861 
 1010      7200
 1011              	.LASF20:
 1012 0077 4553505F 		.ascii	"ESP_SetRxFifoLevel\000"
 1012      53657452 
 1012      78466966 
 1012      6F4C6576 
 1012      656C00
 1013              	.LASF5:
 1014 008a 6C6F6E67 		.ascii	"long unsigned int\000"
 1014      20756E73 
 1014      69676E65 
 1014      6420696E 
 1014      7400
 1015              	.LASF9:
 1016 009c 75696E74 		.ascii	"uint8\000"
 1016      3800
 1017              	.LASF17:
 1018 00a2 4553505F 		.ascii	"ESP_Enable\000"
 1018      456E6162 
 1018      6C6500
 1019              	.LASF27:
 1020 00ad 4553505F 		.ascii	"ESP_ScbEnableIntr\000"
 1020      53636245 
 1020      6E61626C 
 1020      65496E74 
 1020      7200
 1021              	.LASF12:
 1022 00bf 646F7562 		.ascii	"double\000"
 1022      6C6500
 1023              	.LASF26:
 1024 00c6 66756E63 		.ascii	"func\000"
 1024      00
 1025              	.LASF33:
 1026 00cb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1026      4320342E 
 1026      392E3320 
 1026      32303135 
 1026      30333033 
 1027 00fe 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1027      20726576 
 1027      6973696F 
 1027      6E203232 
 1027      31323230 
 1028 0131 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1028      66756E63 
 1028      74696F6E 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 34


 1028      2D736563 
 1028      74696F6E 
 1029              	.LASF35:
 1030 0159 433A5C55 		.ascii	"C:\\Users\\vangelis\\Striplights\\Striplight_bootlo"
 1030      73657273 
 1030      5C76616E 
 1030      67656C69 
 1030      735C5374 
 1031 0188 61646162 		.ascii	"adable.cydsn\000"
 1031      6C652E63 
 1031      7964736E 
 1031      00
 1032              	.LASF24:
 1033 0195 74784669 		.ascii	"txFifoCtrl\000"
 1033      666F4374 
 1033      726C00
 1034              	.LASF10:
 1035 01a0 75696E74 		.ascii	"uint32\000"
 1035      333200
 1036              	.LASF19:
 1037 01a7 4553505F 		.ascii	"ESP_Stop\000"
 1037      53746F70 
 1037      00
 1038              	.LASF25:
 1039 01b0 4553505F 		.ascii	"ESP_SetCustomInterruptHandler\000"
 1039      53657443 
 1039      7573746F 
 1039      6D496E74 
 1039      65727275 
 1040              	.LASF18:
 1041 01ce 4553505F 		.ascii	"ESP_Start\000"
 1041      53746172 
 1041      7400
 1042              	.LASF8:
 1043 01d8 756E7369 		.ascii	"unsigned int\000"
 1043      676E6564 
 1043      20696E74 
 1043      00
 1044              	.LASF7:
 1045 01e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1045      206C6F6E 
 1045      6720756E 
 1045      7369676E 
 1045      65642069 
 1046              	.LASF31:
 1047 01fc 4553505F 		.ascii	"ESP_initVar\000"
 1047      696E6974 
 1047      56617200 
 1048              	.LASF21:
 1049 0208 4553505F 		.ascii	"ESP_SetTxFifoLevel\000"
 1049      53657454 
 1049      78466966 
 1049      6F4C6576 
 1049      656C00
 1050              	.LASF15:
 1051 021b 73697A65 		.ascii	"sizetype\000"
 1051      74797065 
ARM GAS  C:\Users\vangelis\AppData\Local\Temp\ccwzC6Ox.s 			page 35


 1051      00
 1052              	.LASF6:
 1053 0224 6C6F6E67 		.ascii	"long long int\000"
 1053      206C6F6E 
 1053      6720696E 
 1053      7400
 1054              	.LASF34:
 1055 0232 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ESP.c\000"
 1055      6E657261 
 1055      7465645F 
 1055      536F7572 
 1055      63655C50 
 1056              	.LASF13:
 1057 0251 63686172 		.ascii	"char\000"
 1057      00
 1058              	.LASF2:
 1059 0256 73686F72 		.ascii	"short int\000"
 1059      7420696E 
 1059      7400
 1060              	.LASF22:
 1061 0260 6C657665 		.ascii	"level\000"
 1061      6C00
 1062              	.LASF23:
 1063 0266 72784669 		.ascii	"rxFifoCtrl\000"
 1063      666F4374 
 1063      726C00
 1064              	.LASF4:
 1065 0271 6C6F6E67 		.ascii	"long int\000"
 1065      20696E74 
 1065      00
 1066              	.LASF0:
 1067 027a 7369676E 		.ascii	"signed char\000"
 1067      65642063 
 1067      68617200 
 1068              	.LASF28:
 1069 0286 4553505F 		.ascii	"ESP_ScbModePostEnable\000"
 1069      5363624D 
 1069      6F646550 
 1069      6F737445 
 1069      6E61626C 
 1070              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
